{"version":3,"file":"ng-bootstrap.es5.js","sources":["~/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ts","~/@ng-bootstrap/ng-bootstrap/index.ts","~/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","~/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","~/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","~/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","~/@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","~/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","~/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","~/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","~/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","~/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","~/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","~/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","~/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","~/@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","~/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","~/@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","~/@ng-bootstrap/ng-bootstrap/rating/rating.ts","~/@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","~/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","~/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","~/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","~/@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","~/@ng-bootstrap/ng-bootstrap/popover/popover.ts","~/@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","~/@ng-bootstrap/ng-bootstrap/util/triggers.ts","~/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","~/@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","~/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","~/@ng-bootstrap/ng-bootstrap/util/popup.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","~/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","~/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","~/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","~/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","~/@ng-bootstrap/ng-bootstrap/util/positioning.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","~/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","~/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","~/@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","~/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","~/@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","~/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","~/@ng-bootstrap/ng-bootstrap/buttons/radio.module.ts","~/@ng-bootstrap/ng-bootstrap/buttons/radio.ts","~/@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","~/@ng-bootstrap/ng-bootstrap/alert/alert.ts","~/@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","~/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","~/@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","~/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","~/@ng-bootstrap/ng-bootstrap/util/util.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgbAccordionModule,NgbPanelChangeEvent,NgbAccordionConfig,NgbAccordion,NgbPanel,NgbPanelTitle,NgbPanelContent,NgbAlertModule,NgbAlertConfig,NgbAlert,NgbButtonsModule,NgbRadioGroup,NgbCarouselModule,NgbCarouselConfig,NgbCarousel,NgbSlide,NgbCollapseModule,NgbCollapse,NgbCalendar,NgbCalendarIslamicCivil,NgbDatepickerModule,NgbDatepickerI18n,NgbDatepickerConfig,NgbDateStruct,NgbDateParserFormatter,NgbDatepicker,NgbInputDatepicker,NgbDropdownModule,NgbDropdownConfig,NgbDropdown,NgbModalModule,NgbModal,NgbModalOptions,NgbActiveModal,NgbModalRef,ModalDismissReasons,NgbModalStack,ContentRef,NgbModalBackdrop,isDefined,isString,NgbPaginationModule,NgbPaginationConfig,NgbPagination,NgbPopoverModule,NgbPopoverConfig,NgbPopover,NgbProgressbarModule,NgbProgressbarConfig,NgbProgressbar,NgbRatingModule,NgbRatingConfig,NgbRating,NgbTabsetModule,NgbTabChangeEvent,NgbTabsetConfig,NgbTabset,NgbTab,NgbTabContent,NgbTabTitle,NgbTimepickerModule,NgbTimepickerConfig,NgbTimeStruct,NgbTimepicker,NgbTooltipModule,NgbTooltipConfig,NgbTooltip,NgbHighlight,NgbTypeaheadModule,NgbTypeaheadConfig,NgbTypeaheadSelectItemEvent,NgbTypeahead,NgbRootModule,NgbModule} from './index';\n\nexport {NgbActiveLabel as ɵa,NgbRadio as ɵb} from './buttons/radio';\nexport {NGB_CAROUSEL_DIRECTIVES as ɵc} from './carousel/carousel';\nexport {NgbDatepickerDayView as ɵf} from './datepicker/datepicker-day-view';\nexport {NgbDatepickerI18nDefault as ɵi} from './datepicker/datepicker-i18n';\nexport {NgbDatepickerMonthView as ɵe} from './datepicker/datepicker-month-view';\nexport {NgbDatepickerNavigation as ɵg} from './datepicker/datepicker-navigation';\nexport {NgbDatepickerNavigationSelect as ɵh} from './datepicker/datepicker-navigation-select';\nexport {NgbDatepickerService as ɵo} from './datepicker/datepicker-service';\nexport {NgbCalendarHijri as ɵq} from './datepicker/hijri/ngb-calendar-hijri';\nexport {NgbCalendarGregorian as ɵd} from './datepicker/ngb-calendar';\nexport {NgbDateISOParserFormatter as ɵj} from './datepicker/ngb-date-parser-formatter';\nexport {NgbDropdownToggle as ɵk} from './dropdown/dropdown';\nexport {NgbModalWindow as ɵp} from './modal/modal-window';\nexport {NgbPopoverWindow as ɵl} from './popover/popover';\nexport {NgbTooltipWindow as ɵm} from './tooltip/tooltip';\nexport {NgbTypeaheadWindow as ɵn} from './typeahead/typeahead-window';","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/radio.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule, NgbModal, NgbModalOptions, NgbModalRef, ModalDismissReasons} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbRadioGroup} from './buttons/radio.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarIslamicCivil,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons,\n  NgbModalStack,\n  ContentRef,\n  NgbModalBackdrop,\n  isDefined, isString,\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {NgbTimepickerModule, NgbTimepickerConfig, NgbTimeStruct, NgbTimepicker} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nconst /** @type {?} */ NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\nexport class NgbRootModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    NgbAlertModule.forRoot(), NgbButtonsModule.forRoot(), NgbCollapseModule.forRoot(), NgbProgressbarModule.forRoot(),\n    NgbTooltipModule.forRoot(), NgbTypeaheadModule.forRoot(), NgbAccordionModule.forRoot(), NgbCarouselModule.forRoot(),\n    NgbDatepickerModule.forRoot(), NgbDropdownModule.forRoot(), NgbModalModule.forRoot(), NgbPaginationModule.forRoot(),\n    NgbPopoverModule.forRoot(), NgbProgressbarModule.forRoot(), NgbRatingModule.forRoot(), NgbTabsetModule.forRoot(),\n    NgbTimepickerModule.forRoot(), NgbTooltipModule.forRoot()\n  ],\n  exports: NGB_MODULES\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbRootModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRootModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRootModule.ctorParameters;\n}\n\nexport class NgbModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbRootModule}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: NGB_MODULES, exports: NGB_MODULES}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\nimport {NgbTypeaheadConfig} from './typeahead-config';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\nexport class NgbTypeaheadModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule, providers: [NgbTypeaheadConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {letProto} from 'rxjs/operator/let';\nimport {_do} from 'rxjs/operator/do';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {positionElements} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {NgbTypeaheadConfig} from './typeahead-config';\ntype Key = number;\nlet Key: any = {};\nKey.Tab = 9;\nKey.Enter = 13;\nKey.Escape = 27;\nKey.ArrowUp = 38;\nKey.ArrowDown = 40;\nKey[Key.Tab] = \"Tab\";\nKey[Key.Enter] = \"Enter\";\nKey[Key.Escape] = \"Escape\";\nKey[Key.ArrowUp] = \"ArrowUp\";\nKey[Key.ArrowDown] = \"ArrowDown\";\n\n\nconst /** @type {?} */ NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet /** @type {?} */ nextWindowId = 0;\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\nprivate _popupService: PopupService<NgbTypeaheadWindow>;\nprivate _subscription: Subscription;\nprivate _userInput: string;\nprivate _valueChanges: Observable<string>;\nprivate _windowRef: ComponentRef<NgbTypeaheadWindow>;\nprivate _zoneSubscription: any;\n\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n   editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n   focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n   inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n   ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n   resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n   resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n   showHint: boolean;\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n   selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\nprivate _onTouched = () => {};\nprivate _onChange = (_: any) => {};\n/**\n * @param {?} _elementRef\n * @param {?} _viewContainerRef\n * @param {?} _renderer\n * @param {?} _injector\n * @param {?} componentFactoryResolver\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _renderer: Renderer2,\nprivate _injector: Injector, componentFactoryResolver: ComponentFactoryResolver, config: NgbTypeaheadConfig,\n      ngZone: NgZone) {\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input', ($event) => $event.target.value);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, 'bottom-left');\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ inputValues$ = _do.call(this._valueChanges, value => {\n      this._userInput = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    });\n    const /** @type {?} */ results$ = letProto.call(inputValues$, this.ngbTypeahead);\n    const /** @type {?} */ userInput$ = _do.call(results$, () => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    });\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this._onTouched = fn; }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @return {?}\n */\ndismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._userInput);\n    }\n  }\n/**\n * @return {?}\n */\nisPopupOpen() { return this._windowRef != null; }\n/**\n * @return {?}\n */\nhandleBlur() { this._onTouched(); }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const /** @type {?} */ result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n/**\n * @param {?} result\n * @return {?}\n */\nprivate _selectResult(result: any) {\n    let /** @type {?} */ defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n/**\n * @param {?} result\n * @return {?}\n */\nprivate _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n/**\n * @return {?}\n */\nprivate _showHint() {\n    if (this.showHint) {\n      const /** @type {?} */ userInputLowerCase = this._userInput.toLowerCase();\n      const /** @type {?} */ formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._userInput.length).toLowerCase()) {\n        this._writeInputValue(this._userInput + formattedVal.substr(this._userInput.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._userInput.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate _formatItemForInput(item: any): string {\n    return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n  }\n/**\n * @param {?} userInput$\n * @return {?}\n */\nprivate _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._showHint();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[ngbTypeahead]',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'dismissPopup()',\n    '(keydown)': 'handleKeyDown($event)',\n    'autocomplete': 'off',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: NgbTypeaheadConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'editable': [{ type: Input },],\n'focusFirst': [{ type: Input },],\n'inputFormatter': [{ type: Input },],\n'ngbTypeahead': [{ type: Input },],\n'resultFormatter': [{ type: Input },],\n'resultTemplate': [{ type: Input },],\n'showHint': [{ type: Input },],\n'selectItem': [{ type: Output },],\n};\n}\n\nfunction NgbTypeahead_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTypeahead.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTypeahead.ctorParameters;\n/** @type {?} */\nNgbTypeahead.propDecorators;\n/** @type {?} */\nNgbTypeahead.prototype._popupService;\n/** @type {?} */\nNgbTypeahead.prototype._subscription;\n/** @type {?} */\nNgbTypeahead.prototype._userInput;\n/** @type {?} */\nNgbTypeahead.prototype._valueChanges;\n/** @type {?} */\nNgbTypeahead.prototype._windowRef;\n/** @type {?} */\nNgbTypeahead.prototype._zoneSubscription;\n/**\n * A flag indicating if model values should be restricted to the ones selected from the popup only.\n * @type {?}\n */\nNgbTypeahead.prototype.editable;\n/**\n * A flag indicating if the first match should automatically be focused as you type.\n * @type {?}\n */\nNgbTypeahead.prototype.focusFirst;\n/**\n * A function to convert a given value into string to display in the input field\n * @type {?}\n */\nNgbTypeahead.prototype.inputFormatter;\n/**\n * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n * is undefined so you need to explicitly bind it to a desired \"this\" target.\n * @type {?}\n */\nNgbTypeahead.prototype.ngbTypeahead;\n/**\n * A function to format a given result before display. This function should return a formatted string without any\n * HTML markup\n * @type {?}\n */\nNgbTypeahead.prototype.resultFormatter;\n/**\n * A template to override a matching result default display\n * @type {?}\n */\nNgbTypeahead.prototype.resultTemplate;\n/**\n * Show hint when an option in the result list matches.\n * @type {?}\n */\nNgbTypeahead.prototype.showHint;\n/**\n * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n * @type {?}\n */\nNgbTypeahead.prototype.selectItem;\n/** @type {?} */\nNgbTypeahead.prototype.activeDescendant;\n/** @type {?} */\nNgbTypeahead.prototype.popupId;\n/** @type {?} */\nNgbTypeahead.prototype._onTouched;\n/** @type {?} */\nNgbTypeahead.prototype._onChange;\n/** @type {?} */\nNgbTypeahead.prototype._elementRef;\n/** @type {?} */\nNgbTypeahead.prototype._viewContainerRef;\n/** @type {?} */\nNgbTypeahead.prototype._renderer;\n/** @type {?} */\nNgbTypeahead.prototype._injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nexport class NgbTypeaheadConfig {\n  editable = true;\n  focusFirst = true;\n  showHint = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTypeaheadConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTypeaheadConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTypeaheadConfig.ctorParameters;\n/** @type {?} */\nNgbTypeaheadConfig.prototype.editable;\n/** @type {?} */\nNgbTypeaheadConfig.prototype.focusFirst;\n/** @type {?} */\nNgbTypeaheadConfig.prototype.showHint;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead widnow. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n   id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n   focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n   results;\n\n  /**\n   * Search term used to get current results\n   */\n   term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n   formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n   resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n   selectEvent = new EventEmitter();\n\n   activeChangeEvent = new EventEmitter();\n/**\n * @param {?} result\n * @return {?}\n */\n_getResultContext(result: any) { return {result: result, term: this.term, formatter: this.formatter}; }\n/**\n * @return {?}\n */\ngetActive() { return this.results[this.activeIdx]; }\n/**\n * @param {?} activeIdx\n * @return {?}\n */\nmarkActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n/**\n * @return {?}\n */\nnext() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n/**\n * @return {?}\n */\nprev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item) { this.selectEvent.emit(item); }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n/**\n * @return {?}\n */\nprivate _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu', 'style': 'display: block', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngOutletContext]=\"_getResultContext(result)\"></ng-template>\n      </button>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'focusFirst': [{ type: Input },],\n'results': [{ type: Input },],\n'term': [{ type: Input },],\n'formatter': [{ type: Input },],\n'resultTemplate': [{ type: Input },],\n'selectEvent': [{ type: Output, args: ['select', ] },],\n'activeChangeEvent': [{ type: Output, args: ['activeChange', ] },],\n};\n}\n\nfunction NgbTypeaheadWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTypeaheadWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTypeaheadWindow.ctorParameters;\n/** @type {?} */\nNgbTypeaheadWindow.propDecorators;\n/** @type {?} */\nNgbTypeaheadWindow.prototype.activeIdx;\n/**\n *  The id for the typeahead widnow. The id should be unique and the same\n *  as the associated typeahead's id.\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.id;\n/**\n * Flag indicating if the first row should be active initially\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.focusFirst;\n/**\n * Typeahead match results to be displayed\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.results;\n/**\n * Search term used to get current results\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.term;\n/**\n * A function used to format a given result before display. This function should return a formatted string without any\n * HTML markup\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.formatter;\n/**\n * A template to override a matching result default display\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.resultTemplate;\n/**\n * Event raised when user selects a particular result row\n * @type {?}\n */\nNgbTypeaheadWindow.prototype.selectEvent;\n/** @type {?} */\nNgbTypeaheadWindow.prototype.activeChangeEvent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n   highlightClass = 'ngb-highlight';\n   result: string;\n   term: string;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ resultStr = toString(this.result);\n    const /** @type {?} */ resultLC = resultStr.toLowerCase();\n    const /** @type {?} */ termLC = toString(this.term).toLowerCase();\n    let /** @type {?} */ currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const /** @type {?} */ originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd\" class=\"{{highlightClass}}\">{{part}}</span><ng-template [ngIf]=\"!isOdd\">{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`\n    .ngb-highlight {\n      font-weight: bold;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'highlightClass': [{ type: Input },],\n'result': [{ type: Input },],\n'term': [{ type: Input },],\n};\n}\n\nfunction NgbHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbHighlight.ctorParameters;\n/** @type {?} */\nNgbHighlight.propDecorators;\n/** @type {?} */\nNgbHighlight.prototype.parts;\n/** @type {?} */\nNgbHighlight.prototype.highlightClass;\n/** @type {?} */\nNgbHighlight.prototype.result;\n/** @type {?} */\nNgbHighlight.prototype.term;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\nimport {NgbTooltipConfig} from './tooltip-config';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport class NgbTooltipModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule, providers: [NgbTooltipConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet /** @type {?} */ nextId = 0;\nexport class NgbTooltipWindow {\n   placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n   id: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"tooltip show tooltip-\" + placement', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'id': [{ type: Input },],\n};\n}\n\nfunction NgbTooltipWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltipWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltipWindow.ctorParameters;\n/** @type {?} */\nNgbTooltipWindow.propDecorators;\n/** @type {?} */\nNgbTooltipWindow.prototype.placement;\n/** @type {?} */\nNgbTooltipWindow.prototype.id;\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   hidden = new EventEmitter();\nprivate _ngbTooltip: string | TemplateRef<any>;\nprivate _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\nprivate _popupService: PopupService<NgbTooltipWindow>;\nprivate _windowRef: ComponentRef<NgbTooltipWindow>;\nprivate _unregisterListenersFn;\nprivate _zoneSubscription: any;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} injector\n * @param {?} componentFactoryResolver\n * @param {?} viewContainerRef\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n/**\n * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n * @param {?} value\n * @return {?}\n */\nset ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n/**\n * @return {?}\n */\nget ngbTooltip() { return this._ngbTooltip; }\n/**\n * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * The context is an optional value to be injected into the tooltip template when it is created.\n * @param {?=} context\n * @return {?}\n */\nopen(context?: any) {\n    if (!this._windowRef && this._ngbTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.placement = this.placement;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // position tooltip along the element\n      positionElements(\n          this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n          this.container === 'body');\n\n      // we need to manually invoke change detection since events registered via\n      // Renderer::listen() - to be determined if this is a bug in the Angular itself\n      this._windowRef.changeDetectorRef.markForCheck();\n      this.shown.emit();\n    }\n  }\n/**\n * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {?}\n */\nclose(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n/**\n * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {?}\n */\ntoggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Returns whether or not the tooltip is currently being shown\n * @return {?}\n */\nisOpen(): boolean { return this._windowRef != null; }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngbTooltip]', exportAs: 'ngbTooltip'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n{type: NgbTooltipConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'shown': [{ type: Output },],\n'hidden': [{ type: Output },],\n'ngbTooltip': [{ type: Input },],\n};\n}\n\nfunction NgbTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltip.ctorParameters;\n/** @type {?} */\nNgbTooltip.propDecorators;\n/**\n * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n * @type {?}\n */\nNgbTooltip.prototype.placement;\n/**\n * Specifies events that should trigger. Supports a space separated list of event names.\n * @type {?}\n */\nNgbTooltip.prototype.triggers;\n/**\n * A selector specifying the element the tooltip should be appended to.\n * Currently only supports \"body\".\n * @type {?}\n */\nNgbTooltip.prototype.container;\n/**\n * Emits an event when the tooltip is shown\n * @type {?}\n */\nNgbTooltip.prototype.shown;\n/**\n * Emits an event when the tooltip is hidden\n * @type {?}\n */\nNgbTooltip.prototype.hidden;\n/** @type {?} */\nNgbTooltip.prototype._ngbTooltip;\n/** @type {?} */\nNgbTooltip.prototype._ngbTooltipWindowId;\n/** @type {?} */\nNgbTooltip.prototype._popupService;\n/** @type {?} */\nNgbTooltip.prototype._windowRef;\n/** @type {?} */\nNgbTooltip.prototype._unregisterListenersFn;\n/** @type {?} */\nNgbTooltip.prototype._zoneSubscription;\n/** @type {?} */\nNgbTooltip.prototype._elementRef;\n/** @type {?} */\nNgbTooltip.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nexport class NgbTooltipConfig {\n  placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  triggers = 'hover';\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTooltipConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltipConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltipConfig.ctorParameters;\n/** @type {?} */\nNgbTooltipConfig.prototype.placement;\n/** @type {?} */\nNgbTooltipConfig.prototype.triggers;\n/** @type {?} */\nNgbTooltipConfig.prototype.container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\nimport {NgbTimepickerConfig} from './timepicker-config';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport class NgbTimepickerModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule, providers: [NgbTimepickerConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTimepickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTimepickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTimepickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, forwardRef, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger, isDefined} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\n\nconst /** @type {?} */ NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n/**\n * A lightweight & configurable timepicker directive.\n */\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n   meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n   spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n   seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n   hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n   minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n   secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n   readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n   size: 'small' | 'medium' | 'large';\n/**\n * @param {?} config\n */\nconstructor(config: NgbTimepickerConfig) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) {\n    this.model = value ? new NgbTime(value.hour, value.minute, value.second) : new NgbTime();\n    if (!this.seconds && (!value || !isNumber(value.second))) {\n      this.model.second = 0;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n/**\n * @param {?} step\n * @return {?}\n */\nchangeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nchangeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nchangeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n/**\n * @param {?} newVal\n * @return {?}\n */\nupdateHour(newVal: string) {\n    this.model.updateHour(toInteger(newVal));\n    this.propagateModelChange();\n  }\n/**\n * @param {?} newVal\n * @return {?}\n */\nupdateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n/**\n * @param {?} newVal\n * @return {?}\n */\nupdateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n/**\n * @return {?}\n */\ntoggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatMinSec(value: number) { return padNumber(value); }\n/**\n * @return {?}\n */\nsetFormControlSize() { return {'form-control-sm': this.size === 'small', 'form-control-lg': this.size === 'large'}; }\n/**\n * @return {?}\n */\nsetButtonSize() { return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'}; }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n/**\n * @param {?=} touched\n * @return {?}\n */\nprivate propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange({hour: this.model.hour, minute: this.model.minute, second: this.model.second});\n    } else {\n      this.onChange(null);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-timepicker',\n  styles: [`\n    .ngb-tp {\n      display: flex;\n      align-items: center;\n    }\n\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-around;\n    }\n\n    .ngb-tp-spacer {\n      width: 1em;\n      text-align: center;\n    }\n\n    .chevron::before {\n      border-style: solid;\n      border-width: 0.29em 0.29em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.69em;\n      left: 0.05em;\n      position: relative;\n      top: 0.15em;\n      transform: rotate(-45deg);\n      -webkit-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      vertical-align: middle;\n      width: 0.71em;\n    }\n\n    .chevron.bottom:before {\n      top: -.3em;\n      -webkit-transform: rotate(135deg);\n      -ms-transform: rotate(135deg);\n      transform: rotate(135deg);\n    }\n\n    .btn-link {\n      outline: 0;\n    }\n\n    .btn-link.disabled {\n      cursor: not-allowed;\n      opacity: .65;\n    }\n\n    input {\n      text-align: center;\n      display: inline-block;\n      width: auto;\n    }\n  `],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\" size=\"2\" placeholder=\"HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(-hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\" size=\"2\" placeholder=\"MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(-minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\" size=\"2\" placeholder=\"SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(-secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [ngClass]=\"setButtonSize()\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n            (click)=\"toggleMeridian()\">{{model.hour >= 12 ? 'PM' : 'AM'}}</button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbTimepickerConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'meridian': [{ type: Input },],\n'spinners': [{ type: Input },],\n'seconds': [{ type: Input },],\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondStep': [{ type: Input },],\n'readonlyInputs': [{ type: Input },],\n'size': [{ type: Input },],\n};\n}\n\nfunction NgbTimepicker_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTimepicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTimepicker.ctorParameters;\n/** @type {?} */\nNgbTimepicker.propDecorators;\n/** @type {?} */\nNgbTimepicker.prototype.disabled;\n/** @type {?} */\nNgbTimepicker.prototype.model;\n/**\n * Whether to display 12H or 24H mode.\n * @type {?}\n */\nNgbTimepicker.prototype.meridian;\n/**\n * Whether to display the spinners above and below the inputs.\n * @type {?}\n */\nNgbTimepicker.prototype.spinners;\n/**\n * Whether to display seconds input.\n * @type {?}\n */\nNgbTimepicker.prototype.seconds;\n/**\n * Number of hours to increase or decrease when using a button.\n * @type {?}\n */\nNgbTimepicker.prototype.hourStep;\n/**\n * Number of minutes to increase or decrease when using a button.\n * @type {?}\n */\nNgbTimepicker.prototype.minuteStep;\n/**\n * Number of seconds to increase or decrease when using a button.\n * @type {?}\n */\nNgbTimepicker.prototype.secondStep;\n/**\n * To make timepicker readonly\n * @type {?}\n */\nNgbTimepicker.prototype.readonlyInputs;\n/**\n * To set the size of the inputs and button\n * @type {?}\n */\nNgbTimepicker.prototype.size;\n/** @type {?} */\nNgbTimepicker.prototype.onChange;\n/** @type {?} */\nNgbTimepicker.prototype.onTouched;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTimepickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTimepickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTimepickerConfig.ctorParameters;\n/** @type {?} */\nNgbTimepickerConfig.prototype.meridian;\n/** @type {?} */\nNgbTimepickerConfig.prototype.spinners;\n/** @type {?} */\nNgbTimepickerConfig.prototype.seconds;\n/** @type {?} */\nNgbTimepickerConfig.prototype.hourStep;\n/** @type {?} */\nNgbTimepickerConfig.prototype.minuteStep;\n/** @type {?} */\nNgbTimepickerConfig.prototype.secondStep;\n/** @type {?} */\nNgbTimepickerConfig.prototype.disabled;\n/** @type {?} */\nNgbTimepickerConfig.prototype.readonlyInputs;\n/** @type {?} */\nNgbTimepickerConfig.prototype.size;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {isNumber, toInteger} from '../util/util';\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n/**\n * @param {?=} hour\n * @param {?=} minute\n * @param {?=} second\n */\nconstructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n/**\n * @param {?=} step\n * @return {?}\n */\nchangeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n/**\n * @param {?} hour\n * @return {?}\n */\nupdateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n/**\n * @param {?=} step\n * @return {?}\n */\nchangeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n/**\n * @param {?} minute\n * @return {?}\n */\nupdateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n/**\n * @param {?=} step\n * @return {?}\n */\nchangeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n/**\n * @param {?} second\n * @return {?}\n */\nupdateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n/**\n * @param {?=} checkSecs\n * @return {?}\n */\nisValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n/**\n * @return {?}\n */\ntoString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n\nfunction NgbTime_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTime.prototype.hour;\n/** @type {?} */\nNgbTime.prototype.minute;\n/** @type {?} */\nNgbTime.prototype.second;\n}\n\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nimport {NgbTabsetConfig} from './tabset-config';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst /** @type {?} */ NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\nexport class NgbTabsetModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule, providers: [NgbTabsetConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTabsetModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTabsetModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTabsetModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet /** @type {?} */ nextId = 0;\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\nexport class NgbTabTitle {\n/**\n * @param {?} templateRef\n */\nconstructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ng-template[ngbTabTitle]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgbTabTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTabTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTabTitle.ctorParameters;\n/** @type {?} */\nNgbTabTitle.prototype.templateRef;\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\nexport class NgbTabContent {\n/**\n * @param {?} templateRef\n */\nconstructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ng-template[ngbTabContent]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgbTabContent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTabContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTabContent.ctorParameters;\n/** @type {?} */\nNgbTabContent.prototype.templateRef;\n}\n\n/**\n * A directive representing an individual tab.\n */\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n   id: string = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n   title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n   disabled = false;\n\n   contentTpl: NgbTabContent;\n   titleTpl: NgbTabTitle;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ngb-tab'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'title': [{ type: Input },],\n'disabled': [{ type: Input },],\n'contentTpl': [{ type: ContentChild, args: [NgbTabContent, ] },],\n'titleTpl': [{ type: ContentChild, args: [NgbTabTitle, ] },],\n};\n}\n\nfunction NgbTab_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTab.ctorParameters;\n/** @type {?} */\nNgbTab.propDecorators;\n/**\n * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n * @type {?}\n */\nNgbTab.prototype.id;\n/**\n * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n * @type {?}\n */\nNgbTab.prototype.title;\n/**\n * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n * @type {?}\n */\nNgbTab.prototype.disabled;\n/** @type {?} */\nNgbTab.prototype.contentTpl;\n/** @type {?} */\nNgbTab.prototype.titleTpl;\n}\n\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n/**\n * A component that makes it easy to create tabbed interface.\n */\nexport class NgbTabset implements AfterContentChecked {\n   tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n   activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n   destroyOnHide: boolean = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center' or 'end'\n   */\n   justify: 'start' | 'center' | 'end';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\n   */\n   type: 'tabs' | 'pills';\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n   tabChange = new EventEmitter<NgbTabChangeEvent>();\n/**\n * @param {?} config\n */\nconstructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n  }\n/**\n * Selects the tab with the given id and shows its associated pane.\n * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n * @param {?} tabId\n * @return {?}\n */\nselect(tabId: string) {\n    let /** @type {?} */ selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let /** @type {?} */ defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let /** @type {?} */ activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nprivate _getTabById(id: string): NgbTab {\n    let /** @type {?} */ tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + ' justify-content-' + justify\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"!!select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbTabsetConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabs': [{ type: ContentChildren, args: [NgbTab, ] },],\n'activeId': [{ type: Input },],\n'destroyOnHide': [{ type: Input },],\n'justify': [{ type: Input },],\n'type': [{ type: Input },],\n'tabChange': [{ type: Output },],\n};\n}\n\nfunction NgbTabset_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTabset.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTabset.ctorParameters;\n/** @type {?} */\nNgbTabset.propDecorators;\n/** @type {?} */\nNgbTabset.prototype.tabs;\n/**\n * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n * @type {?}\n */\nNgbTabset.prototype.activeId;\n/**\n * Whether the closed tabs should be hidden without destroying them\n * @type {?}\n */\nNgbTabset.prototype.destroyOnHide;\n/**\n * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center' or 'end'\n * @type {?}\n */\nNgbTabset.prototype.justify;\n/**\n * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\n * @type {?}\n */\nNgbTabset.prototype.type;\n/**\n * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n * @type {?}\n */\nNgbTabset.prototype.tabChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' = 'start';\n  type: 'tabs' | 'pills' = 'tabs';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTabsetConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTabsetConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTabsetConfig.ctorParameters;\n/** @type {?} */\nNgbTabsetConfig.prototype.justify;\n/** @type {?} */\nNgbTabsetConfig.prototype.type;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbRatingConfig} from './rating-config';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\nexport class NgbRatingModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule, providers: [NgbRatingConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbRatingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRatingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRatingModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\ntype Key = number;\nlet Key: any = {};\nKey.End = 35;\nKey.Home = 36;\nKey.ArrowLeft = 37;\nKey.ArrowUp = 38;\nKey.ArrowRight = 39;\nKey.ArrowDown = 40;\nKey[Key.End] = \"End\";\nKey[Key.Home] = \"Home\";\nKey[Key.ArrowLeft] = \"ArrowLeft\";\nKey[Key.ArrowUp] = \"ArrowUp\";\nKey[Key.ArrowRight] = \"ArrowRight\";\nKey[Key.ArrowDown] = \"ArrowDown\";\n\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n}\n\nconst /** @type {?} */ NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n   max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n   rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n   readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n   resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n    starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n   hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n   leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n   rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} config\n * @param {?} _changeDetectorRef\n */\nconstructor(config: NgbRatingConfig,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n/**\n * @return {?}\n */\nariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n/**\n * @param {?} value\n * @return {?}\n */\nenter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n/**\n * @return {?}\n */\nhandleBlur() { this.onTouched(); }\n/**\n * @param {?} value\n * @return {?}\n */\nhandleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, () => ({fill: 0}));\n    this._updateState(this.rate);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @return {?}\n */\nreset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n/**\n * @param {?} value\n * @param {?=} internalChange\n * @return {?}\n */\nupdate(value: number, internalChange = true): void {\n    const /** @type {?} */ newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _getFillValue(index: number): number {\n    const /** @type {?} */ diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n/**\n * @param {?} nextValue\n * @return {?}\n */\nprivate _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbRatingConfig, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'max': [{ type: Input },],\n'rate': [{ type: Input },],\n'readonly': [{ type: Input },],\n'resettable': [{ type: Input },],\n'starTemplate': [{ type: Input },{ type: ContentChild, args: [TemplateRef, ] },],\n'hover': [{ type: Output },],\n'leave': [{ type: Output },],\n'rateChange': [{ type: Output },],\n};\n}\n\nfunction NgbRating_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRating.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRating.ctorParameters;\n/** @type {?} */\nNgbRating.propDecorators;\n/** @type {?} */\nNgbRating.prototype.contexts;\n/** @type {?} */\nNgbRating.prototype.disabled;\n/** @type {?} */\nNgbRating.prototype.nextRate;\n/**\n * Maximal rating that can be given using this widget.\n * @type {?}\n */\nNgbRating.prototype.max;\n/**\n * Current rating. Can be a decimal value like 3.75\n * @type {?}\n */\nNgbRating.prototype.rate;\n/**\n * A flag indicating if rating can be updated.\n * @type {?}\n */\nNgbRating.prototype.readonly;\n/**\n * A flag indicating if rating can be reset to 0 on mouse click\n * @type {?}\n */\nNgbRating.prototype.resettable;\n/**\n * A template to override star display.\n * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n * @type {?}\n */\nNgbRating.prototype.starTemplate;\n/**\n * An event fired when a user is hovering over a given rating.\n * Event's payload equals to the rating being hovered over.\n * @type {?}\n */\nNgbRating.prototype.hover;\n/**\n * An event fired when a user stops hovering over a given rating.\n * Event's payload equals to the rating of the last item being hovered over.\n * @type {?}\n */\nNgbRating.prototype.leave;\n/**\n * An event fired when a user selects a new rating.\n * Event's payload equals to the newly selected rating.\n * @type {?}\n */\nNgbRating.prototype.rateChange;\n/** @type {?} */\nNgbRating.prototype.onChange;\n/** @type {?} */\nNgbRating.prototype.onTouched;\n/** @type {?} */\nNgbRating.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbRatingConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRatingConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRatingConfig.ctorParameters;\n/** @type {?} */\nNgbRatingConfig.prototype.max;\n/** @type {?} */\nNgbRatingConfig.prototype.readonly;\n/** @type {?} */\nNgbRatingConfig.prototype.resettable;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\nexport class NgbProgressbarModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule, providers: [NgbProgressbarConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbProgressbarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbProgressbarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbProgressbarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n   max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n   animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n   striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n   showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n   type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n   value = 0;\n/**\n * @param {?} config\n */\nconstructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n  }\n/**\n * @return {?}\n */\ngetValue() { return getValueInRange(this.value, this.max); }\n/**\n * @return {?}\n */\ngetPercentValue() { return 100 * this.getValue() / this.max; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbProgressbarConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'max': [{ type: Input },],\n'animated': [{ type: Input },],\n'striped': [{ type: Input },],\n'showValue': [{ type: Input },],\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction NgbProgressbar_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbProgressbar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbProgressbar.ctorParameters;\n/** @type {?} */\nNgbProgressbar.propDecorators;\n/**\n * Maximal value to be displayed in the progressbar.\n * @type {?}\n */\nNgbProgressbar.prototype.max;\n/**\n * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n * supporting CSS3 animations, and if striped is true.\n * @type {?}\n */\nNgbProgressbar.prototype.animated;\n/**\n * A flag indicating if a progress bar should be displayed as striped.\n * @type {?}\n */\nNgbProgressbar.prototype.striped;\n/**\n * A flag indicating if the current percentage value should be shown.\n * @type {?}\n */\nNgbProgressbar.prototype.showValue;\n/**\n * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n * @type {?}\n */\nNgbProgressbar.prototype.type;\n/**\n * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n * @type {?}\n */\nNgbProgressbar.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue: boolean = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbProgressbarConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbProgressbarConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbProgressbarConfig.ctorParameters;\n/** @type {?} */\nNgbProgressbarConfig.prototype.max;\n/** @type {?} */\nNgbProgressbarConfig.prototype.animated;\n/** @type {?} */\nNgbProgressbarConfig.prototype.striped;\n/** @type {?} */\nNgbProgressbarConfig.prototype.type;\n/** @type {?} */\nNgbProgressbarConfig.prototype.showValue;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {NgbPopoverConfig} from './popover-config';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport class NgbPopoverModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule, providers: [NgbPopoverConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbPopover, NgbPopoverWindow], exports: [NgbPopover], entryComponents: [NgbPopoverWindow]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbPopoverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPopoverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPopoverModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {NgbPopoverConfig} from './popover-config';\n\nlet /** @type {?} */ nextId = 0;\nexport class NgbPopoverWindow {\n   placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n   title: string;\n   id: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"popover show popover-\" + placement', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <h3 class=\"popover-title\">{{title}}</h3><div class=\"popover-content\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n'id': [{ type: Input },],\n};\n}\n\nfunction NgbPopoverWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPopoverWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPopoverWindow.ctorParameters;\n/** @type {?} */\nNgbPopoverWindow.propDecorators;\n/** @type {?} */\nNgbPopoverWindow.prototype.placement;\n/** @type {?} */\nNgbPopoverWindow.prototype.title;\n/** @type {?} */\nNgbPopoverWindow.prototype.id;\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nexport class NgbPopover implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n   shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n   hidden = new EventEmitter();\nprivate _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\nprivate _popupService: PopupService<NgbPopoverWindow>;\nprivate _windowRef: ComponentRef<NgbPopoverWindow>;\nprivate _unregisterListenersFn;\nprivate _zoneSubscription: any;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} injector\n * @param {?} componentFactoryResolver\n * @param {?} viewContainerRef\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n/**\n * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n * The context is an optional value to be injected into the popover template when it is created.\n * @param {?=} context\n * @return {?}\n */\nopen(context?: any) {\n    if (!this._windowRef) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.placement = this.placement;\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // position popover along the element\n      positionElements(\n          this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n          this.container === 'body');\n\n      // we need to manually invoke change detection since events registered via\n      // Renderer::listen() are not picked up by change detection with the OnPush strategy\n      this._windowRef.changeDetectorRef.markForCheck();\n      this.shown.emit();\n    }\n  }\n/**\n * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n * @return {?}\n */\nclose(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n/**\n * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n * @return {?}\n */\ntoggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Returns whether or not the popover is currently being shown\n * @return {?}\n */\nisOpen(): boolean { return this._windowRef != null; }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngbPopover]', exportAs: 'ngbPopover'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n{type: NgbPopoverConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngbPopover': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'shown': [{ type: Output },],\n'hidden': [{ type: Output },],\n};\n}\n\nfunction NgbPopover_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPopover.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPopover.ctorParameters;\n/** @type {?} */\nNgbPopover.propDecorators;\n/**\n * Content to be displayed as popover.\n * @type {?}\n */\nNgbPopover.prototype.ngbPopover;\n/**\n * Title of a popover.\n * @type {?}\n */\nNgbPopover.prototype.popoverTitle;\n/**\n * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n * @type {?}\n */\nNgbPopover.prototype.placement;\n/**\n * Specifies events that should trigger. Supports a space separated list of event names.\n * @type {?}\n */\nNgbPopover.prototype.triggers;\n/**\n * A selector specifying the element the popover should be appended to.\n * Currently only supports \"body\".\n * @type {?}\n */\nNgbPopover.prototype.container;\n/**\n * Emits an event when the popover is shown\n * @type {?}\n */\nNgbPopover.prototype.shown;\n/**\n * Emits an event when the popover is hidden\n * @type {?}\n */\nNgbPopover.prototype.hidden;\n/** @type {?} */\nNgbPopover.prototype._ngbPopoverWindowId;\n/** @type {?} */\nNgbPopover.prototype._popupService;\n/** @type {?} */\nNgbPopover.prototype._windowRef;\n/** @type {?} */\nNgbPopover.prototype._unregisterListenersFn;\n/** @type {?} */\nNgbPopover.prototype._zoneSubscription;\n/** @type {?} */\nNgbPopover.prototype._elementRef;\n/** @type {?} */\nNgbPopover.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nexport class NgbPopoverConfig {\n  placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  triggers = 'click';\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbPopoverConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPopoverConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPopoverConfig.ctorParameters;\n/** @type {?} */\nNgbPopoverConfig.prototype.placement;\n/** @type {?} */\nNgbPopoverConfig.prototype.triggers;\n/** @type {?} */\nNgbPopoverConfig.prototype.container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Trigger {\n/**\n * @param {?} open\n * @param {?=} close\n */\nconstructor(public open: string,\npublic close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n/**\n * @return {?}\n */\nisManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nfunction Trigger_tsickle_Closure_declarations() {\n/** @type {?} */\nTrigger.prototype.open;\n/** @type {?} */\nTrigger.prototype.close;\n}\n\n\nconst /** @type {?} */ DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const /** @type {?} */ trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const /** @type {?} */ parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let /** @type {?} */ alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const /** @type {?} */ manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst /** @type {?} */ noopFn = () => {};\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?} toggleFn\n * @return {?}\n */\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const /** @type {?} */ parsedTriggers = parseTriggers(triggers);\n  const /** @type {?} */ listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\nimport {NgbPaginationConfig} from './pagination-config';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\nexport class NgbPaginationModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule, providers: [NgbPaginationConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbPaginationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPaginationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPaginationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n   disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n   boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n   directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n   ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n   rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n   collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n   maxSize: number;\n\n  /**\n   *  Current page.\n   */\n   page = 0;\n\n  /**\n   *  Number of items per page.\n   */\n   pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   */\n   pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n   size: 'sm' | 'lg';\n/**\n * @param {?} config\n */\nconstructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n/**\n * @return {?}\n */\nhasPrevious(): boolean { return this.page > 1; }\n/**\n * @return {?}\n */\nhasNext(): boolean { return this.page < this.pageCount; }\n/**\n * @param {?} pageNumber\n * @return {?}\n */\nselectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n/**\n * \\@internal\n * @param {?} pageNumber\n * @return {?}\n */\nisEllipsis(pageNumber): boolean { return pageNumber === -1; }\n/**\n * Appends ellipses and first/last page number to the displayed pages\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\nprivate _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n/**\n * Rotates page numbers based on maxSize items visible.\n * Currently selected page stays in the middle:\n * \n * Ex. for selected page = 6:\n * [5,*6*,7] for maxSize = 3\n * [4,5,*6*,7] for maxSize = 4\n * @return {?}\n */\nprivate _applyRotation(): [number, number] {\n    let /** @type {?} */ start = 0;\n    let /** @type {?} */ end = this.pageCount;\n    let /** @type {?} */ leftOffset = Math.floor(this.maxSize / 2);\n    let /** @type {?} */ rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n/**\n * Paginates page numbers based on maxSize items per page\n * @return {?}\n */\nprivate _applyPagination(): [number, number] {\n    let /** @type {?} */ page = Math.ceil(this.page / this.maxSize) - 1;\n    let /** @type {?} */ start = page * this.maxSize;\n    let /** @type {?} */ end = start + this.maxSize;\n\n    return [start, end];\n  }\n/**\n * @param {?} newPageNo\n * @return {?}\n */\nprivate _setPageInRange(newPageNo) {\n    const /** @type {?} */ prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo) {\n      this.pageChange.emit(this.page);\n    }\n  }\n/**\n * @param {?} newPage\n * @return {?}\n */\nprivate _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let /** @type {?} */ i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let /** @type {?} */ start = 0;\n      let /** @type {?} */ end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" class=\"page-link\" href (click)=\"!!selectPage(1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" class=\"page-link\" href (click)=\"!!selectPage(page-1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"!!selectPage(pageNumber)\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" class=\"page-link\" href (click)=\"!!selectPage(page+1)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" class=\"page-link\" href (click)=\"!!selectPage(pageCount)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbPaginationConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'boundaryLinks': [{ type: Input },],\n'directionLinks': [{ type: Input },],\n'ellipses': [{ type: Input },],\n'rotate': [{ type: Input },],\n'collectionSize': [{ type: Input },],\n'maxSize': [{ type: Input },],\n'page': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'pageChange': [{ type: Output },],\n'size': [{ type: Input },],\n};\n}\n\nfunction NgbPagination_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPagination.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPagination.ctorParameters;\n/** @type {?} */\nNgbPagination.propDecorators;\n/** @type {?} */\nNgbPagination.prototype.pageCount;\n/** @type {?} */\nNgbPagination.prototype.pages;\n/**\n * Whether to disable buttons from user input\n * @type {?}\n */\nNgbPagination.prototype.disabled;\n/**\n *  Whether to show the \"First\" and \"Last\" page links\n * @type {?}\n */\nNgbPagination.prototype.boundaryLinks;\n/**\n *  Whether to show the \"Next\" and \"Previous\" page links\n * @type {?}\n */\nNgbPagination.prototype.directionLinks;\n/**\n *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n * @type {?}\n */\nNgbPagination.prototype.ellipses;\n/**\n *  Whether to rotate pages when maxSize > number of pages.\n *  Current page will be in the middle\n * @type {?}\n */\nNgbPagination.prototype.rotate;\n/**\n *  Number of items in collection.\n * @type {?}\n */\nNgbPagination.prototype.collectionSize;\n/**\n *  Maximum number of pages to display.\n * @type {?}\n */\nNgbPagination.prototype.maxSize;\n/**\n *  Current page.\n * @type {?}\n */\nNgbPagination.prototype.page;\n/**\n *  Number of items per page.\n * @type {?}\n */\nNgbPagination.prototype.pageSize;\n/**\n *  An event fired when the page is changed.\n *  Event's payload equals to the newly selected page.\n * @type {?}\n */\nNgbPagination.prototype.pageChange;\n/**\n * Pagination display size: small or large\n * @type {?}\n */\nNgbPagination.prototype.size;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbPaginationConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPaginationConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPaginationConfig.ctorParameters;\n/** @type {?} */\nNgbPaginationConfig.prototype.disabled;\n/** @type {?} */\nNgbPaginationConfig.prototype.boundaryLinks;\n/** @type {?} */\nNgbPaginationConfig.prototype.directionLinks;\n/** @type {?} */\nNgbPaginationConfig.prototype.ellipses;\n/** @type {?} */\nNgbPaginationConfig.prototype.maxSize;\n/** @type {?} */\nNgbPaginationConfig.prototype.pageSize;\n/** @type {?} */\nNgbPaginationConfig.prototype.rotate;\n/** @type {?} */\nNgbPaginationConfig.prototype.size;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModal} from './modal';\n\nexport {NgbModalBackdrop} from './modal-backdrop';\nexport {NgbModal, NgbModalOptions} from './modal';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {NgbModalStack} from './modal-stack';\nexport {ContentRef} from '../util/popup';\nexport {isDefined, isString} from '../util/util';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\nexport class NgbModalModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule, providers: [NgbModal, NgbModalStack]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModalRef} from './modal-ref';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n}\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\nexport class NgbModal {\n/**\n * @param {?} _moduleCFR\n * @param {?} _injector\n * @param {?} _modalStack\n */\nconstructor(\nprivate _moduleCFR: ComponentFactoryResolver,\nprivate _injector: Injector,\nprivate _modalStack: NgbModalStack) {}\n/**\n * Opens a new modal window with the specified content and using supplied options. Content can be provided\n * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n * @param {?} content\n * @param {?=} options\n * @return {?}\n */\nopen(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    return this._modalStack.open(this._moduleCFR, this._injector, content, options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: Injector, },\n{type: NgbModalStack, },\n];\n}\n\nfunction NgbModal_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModal.ctorParameters;\n/** @type {?} */\nNgbModal.prototype._moduleCFR;\n/** @type {?} */\nNgbModal.prototype._injector;\n/** @type {?} */\nNgbModal.prototype._modalStack;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef,\n  Injectable,\n  Injector,\n  ReflectiveInjector,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  TemplateRef\n} from '@angular/core';\n\nimport {ContentRef} from '../util/popup';\nimport {isDefined, isString} from '../util/util';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nexport class NgbModalStack {\nprivate _backdropFactory: ComponentFactory<NgbModalBackdrop>;\nprivate _windowFactory: ComponentFactory<NgbModalWindow>;\n/**\n * @param {?} _applicationRef\n * @param {?} _injector\n * @param {?} _componentFactoryResolver\n */\nconstructor(\nprivate _applicationRef: ApplicationRef,\nprivate _injector: Injector,\nprivate _componentFactoryResolver: ComponentFactoryResolver) {\n    this._backdropFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n    this._windowFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n  }\n/**\n * @param {?} moduleCFR\n * @param {?} contentInjector\n * @param {?} content\n * @param {?} options\n * @return {?}\n */\nopen(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const /** @type {?} */ containerSelector = options.container || 'body';\n    const /** @type {?} */ containerEl = document.querySelector(containerSelector);\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${containerSelector}\" was not found in the DOM.`);\n    }\n\n    const /** @type {?} */ activeModal = new NgbActiveModal();\n    const /** @type {?} */ contentRef = this._getContentRef(moduleCFR, contentInjector, content, activeModal);\n\n    let /** @type {?} */ windowCmptRef: ComponentRef<NgbModalWindow>;\n    let /** @type {?} */ backdropCmptRef: ComponentRef<NgbModalBackdrop>;\n    let /** @type {?} */ ngbModalRef: NgbModalRef;\n\n\n    if (options.backdrop !== false) {\n      backdropCmptRef = this._backdropFactory.create(this._injector);\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    }\n    windowCmptRef = this._windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n\n    ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef);\n\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    return ngbModalRef;\n  }\n/**\n * @param {?} windowInstance\n * @param {?} options\n * @return {?}\n */\nprivate _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    ['backdrop', 'keyboard', 'size', 'windowClass'].forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n/**\n * @param {?} moduleCFR\n * @param {?} contentInjector\n * @param {?} content\n * @param {?} context\n * @return {?}\n */\nprivate _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const /** @type {?} */ viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else if (isString(content)) {\n      return new ContentRef([[document.createTextNode(`${content}`)]]);\n    } else {\n      const /** @type {?} */ contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n      const /** @type {?} */ modalContentInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgbActiveModal, useValue: context}], contentInjector);\n      const /** @type {?} */ componentRef = contentCmptFactory.create(modalContentInjector);\n      this._applicationRef.attachView(componentRef.hostView);\n      return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n];\n}\n\nfunction NgbModalStack_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModalStack.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModalStack.ctorParameters;\n/** @type {?} */\nNgbModalStack.prototype._backdropFactory;\n/** @type {?} */\nNgbModalStack.prototype._windowFactory;\n/** @type {?} */\nNgbModalStack.prototype._applicationRef;\n/** @type {?} */\nNgbModalStack.prototype._injector;\n/** @type {?} */\nNgbModalStack.prototype._componentFactoryResolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n/**\n * Can be used to close a modal, passing an optional result.\n * @param {?=} result\n * @return {?}\n */\nclose(result?: any): void {}\n/**\n * Can be used to dismiss a modal, passing an optional reason.\n * @param {?=} reason\n * @return {?}\n */\ndismiss(reason?: any): void {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbActiveModal_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbActiveModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbActiveModal.ctorParameters;\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\nprivate _resolve: (result?: any) => void;\nprivate _reject: (reason?: any) => void;\n/**\n * The instance of component used as modal's content.\n * Undefined when a TemplateRef is used as modal's content.\n * @return {?}\n */\nget componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n/**\n * @param {?} instance\n * @return {?}\n */\nset componentInstance(instance: any) {}\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n/**\n * @param {?} _windowCmptRef\n * @param {?} _contentRef\n * @param {?=} _backdropCmptRef\n */\nconstructor(\nprivate _windowCmptRef: ComponentRef<NgbModalWindow>,\nprivate _contentRef: ContentRef,\nprivate _backdropCmptRef?: ComponentRef<NgbModalBackdrop>) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n/**\n * Can be used to close a modal, passing an optional result.\n * @param {?=} result\n * @return {?}\n */\nclose(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n/**\n * Can be used to dismiss a modal, passing an optional reason.\n * @param {?=} reason\n * @return {?}\n */\ndismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      this._reject(reason);\n      this._removeModalElements();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _removeModalElements() {\n    const /** @type {?} */ windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const /** @type {?} */ backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentRef, },\n{type: ContentRef, },\n{type: ComponentRef, },\n];\n}\n\nfunction NgbModalRef_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModalRef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModalRef.ctorParameters;\n/** @type {?} */\nNgbModalRef.prototype._resolve;\n/** @type {?} */\nNgbModalRef.prototype._reject;\n/**\n * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n * @type {?}\n */\nNgbModalRef.prototype.result;\n/** @type {?} */\nNgbModalRef.prototype._windowCmptRef;\n/** @type {?} */\nNgbModalRef.prototype._contentRef;\n/** @type {?} */\nNgbModalRef.prototype._backdropCmptRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactory,\n  ComponentFactoryResolver\n} from '@angular/core';\nexport class ContentRef {\n/**\n * @param {?} nodes\n * @param {?=} viewRef\n * @param {?=} componentRef\n */\nconstructor(public nodes: any[],\npublic viewRef?: ViewRef,\npublic componentRef?: ComponentRef<any>) {}\n}\n\nfunction ContentRef_tsickle_Closure_declarations() {\n/** @type {?} */\nContentRef.prototype.nodes;\n/** @type {?} */\nContentRef.prototype.viewRef;\n/** @type {?} */\nContentRef.prototype.componentRef;\n}\n\nexport class PopupService<T> {\nprivate _windowFactory: ComponentFactory<T>;\nprivate _windowRef: ComponentRef<T>;\nprivate _contentRef: ContentRef;\n/**\n * @param {?} type\n * @param {?} _injector\n * @param {?} _viewContainerRef\n * @param {?} _renderer\n * @param {?} componentFactoryResolver\n */\nconstructor(\n      type: any,\nprivate _injector: Injector,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _renderer: Renderer2,\n      componentFactoryResolver: ComponentFactoryResolver) {\n    this._windowFactory = componentFactoryResolver.resolveComponentFactory<T>(type);\n  }\n/**\n * @param {?=} content\n * @param {?=} context\n * @return {?}\n */\nopen(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef =\n          this._viewContainerRef.createComponent(this._windowFactory, 0, this._injector, this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n/**\n * @return {?}\n */\nclose() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n/**\n * @param {?} content\n * @param {?=} context\n * @return {?}\n */\nprivate _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const /** @type {?} */ viewRef = this._viewContainerRef.createEmbeddedView( /** @type {?} */((<TemplateRef<T>>content)), context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n\nfunction PopupService_tsickle_Closure_declarations() {\n/** @type {?} */\nPopupService.prototype._windowFactory;\n/** @type {?} */\nPopupService.prototype._windowRef;\n/** @type {?} */\nPopupService.prototype._contentRef;\n/** @type {?} */\nPopupService.prototype._injector;\n/** @type {?} */\nPopupService.prototype._viewContainerRef;\n/** @type {?} */\nPopupService.prototype._renderer;\n}\n\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\nprivate _elWithFocus: Element;  // element that is focused prior to modal opening\n\n   backdrop: boolean | string = true;\n   keyboard = true;\n   size: string;\n   windowClass: string;\n\n   dismissEvent = new EventEmitter();\n/**\n * @param {?} _elRef\n * @param {?} _renderer\n */\nconstructor(private _elRef: ElementRef,\nprivate _renderer: Renderer2) {}\n/**\n * @param {?} $event\n * @return {?}\n */\nbackdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nescKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n/**\n * @param {?} reason\n * @return {?}\n */\ndismiss(reason): void { this.dismissEvent.emit(reason); }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._elWithFocus = document.activeElement;\n    this._renderer.addClass(document.body, 'modal-open');\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._elWithFocus && document.body.contains(this._elWithFocus)) {\n      this._elWithFocus['focus'].apply(this._elWithFocus, []);\n    } else {\n      document.body['focus'].apply(document.body, []);\n    }\n\n    this._elWithFocus = null;\n    this._renderer.removeClass(document.body, 'modal-open');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    'style': 'display: block;',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)'\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'backdrop': [{ type: Input },],\n'keyboard': [{ type: Input },],\n'size': [{ type: Input },],\n'windowClass': [{ type: Input },],\n'dismissEvent': [{ type: Output, args: ['dismiss', ] },],\n};\n}\n\nfunction NgbModalWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModalWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModalWindow.ctorParameters;\n/** @type {?} */\nNgbModalWindow.propDecorators;\n/** @type {?} */\nNgbModalWindow.prototype._elWithFocus;\n/** @type {?} */\nNgbModalWindow.prototype.backdrop;\n/** @type {?} */\nNgbModalWindow.prototype.keyboard;\n/** @type {?} */\nNgbModalWindow.prototype.size;\n/** @type {?} */\nNgbModalWindow.prototype.windowClass;\n/** @type {?} */\nNgbModalWindow.prototype.dismissEvent;\n/** @type {?} */\nNgbModalWindow.prototype._elRef;\n/** @type {?} */\nNgbModalWindow.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type ModalDismissReasons = number;\nexport let ModalDismissReasons: any = {};\nModalDismissReasons.BACKDROP_CLICK = 0;\nModalDismissReasons.ESC = 1;\nModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK] = \"BACKDROP_CLICK\";\nModalDismissReasons[ModalDismissReasons.ESC] = \"ESC\";\n\n","import {Component} from '@angular/core';\nexport class NgbModalBackdrop {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{selector: 'ngb-modal-backdrop', template: '', host: {'class': 'modal-backdrop fade show'}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbModalBackdrop_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbModalBackdrop.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbModalBackdrop.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownToggle} from './dropdown';\nimport {NgbDropdownConfig} from './dropdown-config';\n\nexport {NgbDropdown, NgbDropdownToggle} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst /** @type {?} */ NGB_DROPDOWN_DIRECTIVES = [NgbDropdownToggle, NgbDropdown];\nexport class NgbDropdownModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule, providers: [NgbDropdownConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {NgbDropdownConfig} from './dropdown-config';\n/**\n * Transforms a node into a dropdown.\n */\nexport class NgbDropdown {\nprivate _toggleElement: any;\n\n  /**\n   * Indicates that the dropdown should open upwards\n   */\n   up: boolean;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   */\n   autoClose: boolean;\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n   _open = false;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n   openChange = new EventEmitter();\n/**\n * @param {?} config\n */\nconstructor(config: NgbDropdownConfig) {\n    this.up = config.up;\n    this.autoClose = config.autoClose;\n  }\n/**\n * Checks if the dropdown menu is open or not.\n * @return {?}\n */\nisOpen(): boolean { return this._open; }\n/**\n * Opens the dropdown menu of a given navbar or tabbed navigation.\n * @return {?}\n */\nopen(): void {\n    if (!this._open) {\n      this._open = true;\n      this.openChange.emit(true);\n    }\n  }\n/**\n * Closes the dropdown menu of a given navbar or tabbed navigation.\n * @return {?}\n */\nclose(): void {\n    if (this._open) {\n      this._open = false;\n      this.openChange.emit(false);\n    }\n  }\n/**\n * Toggles the dropdown menu of a given navbar or tabbed navigation.\n * @return {?}\n */\ntoggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\ncloseFromOutsideClick($event) {\n    if (this.autoClose && $event.button !== 2 && !this._isEventFromToggle($event)) {\n      this.close();\n    }\n  }\n/**\n * @return {?}\n */\ncloseFromOutsideEsc() {\n    if (this.autoClose) {\n      this.close();\n    }\n  }\n/**\n * \\@internal\n * @param {?} toggleElement\n * @return {?}\n */\nset toggleElement(toggleElement: any) { this._toggleElement = toggleElement; }\n/**\n * @param {?} $event\n * @return {?}\n */\nprivate _isEventFromToggle($event) { return !!this._toggleElement && this._toggleElement.contains($event.target); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngbDropdown]',\n  exportAs: 'ngbDropdown',\n  host: {\n    '[class.dropdown]': '!up',\n    '[class.dropup]': 'up',\n    '[class.show]': 'isOpen()',\n    '(keyup.esc)': 'closeFromOutsideEsc()',\n    '(document:click)': 'closeFromOutsideClick($event)'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDropdownConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'up': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'_open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n};\n}\n\nfunction NgbDropdown_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDropdown.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDropdown.ctorParameters;\n/** @type {?} */\nNgbDropdown.propDecorators;\n/** @type {?} */\nNgbDropdown.prototype._toggleElement;\n/**\n * Indicates that the dropdown should open upwards\n * @type {?}\n */\nNgbDropdown.prototype.up;\n/**\n * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n * @type {?}\n */\nNgbDropdown.prototype.autoClose;\n/**\n *  Defines whether or not the dropdown-menu is open initially.\n * @type {?}\n */\nNgbDropdown.prototype._open;\n/**\n *  An event fired when the dropdown is opened or closed.\n *  Event's payload equals whether dropdown is open.\n * @type {?}\n */\nNgbDropdown.prototype.openChange;\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional.\n */\nexport class NgbDropdownToggle {\n/**\n * @param {?} dropdown\n * @param {?} elementRef\n */\nconstructor(public dropdown: NgbDropdown, elementRef: ElementRef) {\n    dropdown.toggleElement = elementRef.nativeElement;\n  }\n/**\n * @return {?}\n */\ntoggleOpen() { this.dropdown.toggle(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDropdown, },\n{type: ElementRef, },\n];\n}\n\nfunction NgbDropdownToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDropdownToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDropdownToggle.ctorParameters;\n/** @type {?} */\nNgbDropdownToggle.prototype.dropdown;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, TemplateRef} from '@angular/core';\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nexport class NgbDropdownConfig {\n  up = false;\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDropdownConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDropdownConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDropdownConfig.ctorParameters;\n/** @type {?} */\nNgbDropdownConfig.prototype.up;\n/** @type {?} */\nNgbDropdownConfig.prototype.autoClose;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerI18n, NgbDatepickerI18nDefault} from './datepicker-i18n';\nimport {NgbCalendar, NgbCalendarGregorian} from './ngb-calendar';\nimport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nimport {NgbDateParserFormatter, NgbDateISOParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nimport {NgbDatepickerConfig} from './datepicker-config';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport class NgbDatepickerModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgbDatepickerModule,\n      providers: [\n        {provide: NgbCalendar, useClass: NgbCalendarGregorian},\n        {provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nDefault},\n        {provide: NgbDateParserFormatter, useClass: NgbDateISOParserFormatter}, NgbDatepickerConfig\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDatepickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\n/**\n * @param {?} date\n * @return {?}\n */\nfunction isGregorianLeapYear(date: Date): boolean {\n  const /** @type {?} */ year = date.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst /** @type {?} */ GREGORIAN_EPOCH = 1721425.5;\nconst /** @type {?} */ ISLAMIC_EPOCH = 1948439.5;\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n/**\n * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hijri.\n * @param {?} gdate\n * @return {?}\n */\nfromGregorian(gdate: Date): NgbDate {\n    const /** @type {?} */ date = new Date(gdate);\n    const /** @type {?} */ gYear = date.getFullYear(), /** @type {?} */ gMonth = date.getMonth(), /** @type {?} */ gDay = date.getDate();\n\n    let /** @type {?} */ julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(date) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const /** @type {?} */ days = julianDay - ISLAMIC_EPOCH;\n    const /** @type {?} */ hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let /** @type {?} */ hMonth = Math.ceil((days - 29 - this._getYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const /** @type {?} */ hDay = Math.ceil(days - this._getMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n/**\n * Returns the equivalent JS date value for a give input islamic(civil) date.\n * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n * @param {?} hijriDate\n * @return {?}\n */\ntoGregorian(hijriDate: NgbDate): Date {\n    const /** @type {?} */ hYear = hijriDate.year;\n    const /** @type {?} */ hMonth = hijriDate.month - 1;\n    const /** @type {?} */ hDate = hijriDate.day;\n    const /** @type {?} */ julianDay =\n        hDate + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const /** @type {?} */ wjd = Math.floor(julianDay - 0.5) + 0.5, /** @type {?} */ depoch = wjd - GREGORIAN_EPOCH, /** @type {?} */\n          quadricent = Math.floor(depoch / 146097), /** @type {?} */ dqc = mod(depoch, 146097), /** @type {?} */ cent = Math.floor(dqc / 36524), /** @type {?} */\n          dcent = mod(dqc, 36524), /** @type {?} */ quad = Math.floor(dcent / 1461), /** @type {?} */ dquad = mod(dcent, 1461), /** @type {?} */\n          yindex = Math.floor(dquad / 365);\n    let /** @type {?} */ year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const /** @type {?} */ gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const /** @type {?} */ yearday = wjd - gYearStart;\n\n    const /** @type {?} */ tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const /** @type {?} */ leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const /** @type {?} */ month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const /** @type {?} */ tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const /** @type {?} */ day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n/**\n * Returns the number of days in a specific Hijri month.\n * `month` is 1 for Muharram, 2 for Safar, etc.\n * `year` is any Hijri year.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\ngetDaysInIslamicMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let /** @type {?} */ length = 29 + month % 2;\n    if (month === 12 && this._isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n/**\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = NgbDate.from(date);\n\n    switch (period) {\n      case 'y':\n        date = this.setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this.setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this.setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n/**\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n/**\n * @param {?} date\n * @return {?}\n */\ngetWeekday(date: NgbDate) {\n    const /** @type {?} */ day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n/**\n * @param {?} week\n * @param {?} firstDayOfWeek\n * @return {?}\n */\ngetWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const /** @type {?} */ thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const /** @type {?} */ date = week[thursdayIndex];\n\n    const /** @type {?} */ jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const /** @type {?} */ time = jsDate.getTime();\n    const /** @type {?} */ MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n/**\n * @return {?}\n */\ngetToday(): NgbDate { return this.fromGregorian(new Date()); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCalendarIslamicCivil_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCalendarIslamicCivil.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCalendarIslamicCivil.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n/**\n * @abstract\n */\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n/**\n * @return {?}\n */\ngetDaysPerWeek() { return 7; }\n/**\n * @return {?}\n */\ngetMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n/**\n * @return {?}\n */\ngetWeeksPerMonth() { return 6; }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n/**\n * @param {?} date\n * @param {?} day\n * @return {?}\n */\nsetDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let /** @type {?} */ mDays = this.getDaysInIslamicMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this.setMonth(date, date.month - 1);\n        mDays = this.getDaysInIslamicMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this.setMonth(date, date.month + 1);\n        mDays = this.getDaysInIslamicMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n/**\n * @param {?} date\n * @param {?} month\n * @return {?}\n */\nsetMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n/**\n * @param {?} date\n * @param {?} yearValue\n * @return {?}\n */\nsetYear(date: NgbDate, yearValue: number): NgbDate {\n    date.year = +yearValue;\n    return date;\n  }\n/**\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetWeekday(date: NgbDate) {}\n/**\n * @abstract\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetNext(date: NgbDate, period?: NgbPeriod, number?: number) {}\n/**\n * @abstract\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetPrev(date: NgbDate, period?: NgbPeriod, number?: number) {}\n/**\n * @abstract\n * @param {?} week\n * @param {?} firstDayOfWeek\n * @return {?}\n */\ngetWeekNumber(week: NgbDate[], firstDayOfWeek: number) {}\n/**\n * @abstract\n * @return {?}\n */\ngetToday() {}\n/**\n * Returns the equivalent Hijri date value for a give input Gregorian date.\n * `gDate` is s JS Date to be converted to Hijri.\n * @abstract\n * @param {?} gDate\n * @return {?}\n */\nfromGregorian(gDate: Date) {}\n/**\n * Converts the current Hijri date to Gregorian.\n * @abstract\n * @param {?} hijriDate\n * @return {?}\n */\ntoGregorian(hijriDate: NgbDate) {}\n/**\n * Returns the number of days in a specific Hijri month.\n * `month` is 1 for Muharram, 2 for Safar, etc.\n * `year` is any Hijri year.\n * @abstract\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\ngetDaysInIslamicMonth(month: number, year: number) {}\n/**\n * @param {?} year\n * @return {?}\n */\nprotected _isIslamicLeapYear(year: number): boolean { return (14 + 11 * year) % 30 < 11; }\n/**\n * Returns the start of Hijri Month.\n * `month` is 0 for Muharram, 1 for Safar, etc.\n * `year` is any Hijri year.\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\nprotected _getMonthStart(year: number, month: number): number {\n    return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n  }\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n * @param {?} year\n * @return {?}\n */\nprotected _getYearStart(year: number): number { return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCalendarHijri_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCalendarHijri.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCalendarHijri.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\nexport class NgbDatepickerNavigationSelect implements OnChanges {\n  months: number[];\n  years: number[] = [];\n\n   date: NgbDate;\n   disabled: boolean;\n   maxDate: NgbDate;\n   minDate: NgbDate;\n\n   select = new EventEmitter<NgbDate>();\n/**\n * @param {?} i18n\n * @param {?} calendar\n */\nconstructor(public i18n: NgbDatepickerI18n,\nprivate calendar: NgbCalendar) { this.months = calendar.getMonths(); }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['maxDate'] || changes['minDate'] || changes['date']) {\n      this._generateYears();\n      this._generateMonths();\n    }\n  }\n/**\n * @param {?} month\n * @return {?}\n */\nchangeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n/**\n * @param {?} year\n * @return {?}\n */\nchangeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n/**\n * @return {?}\n */\nprivate _generateMonths() {\n    this.months = this.calendar.getMonths();\n\n    if (this.date && this.date.year === this.minDate.year) {\n      const /** @type {?} */ index = this.months.findIndex(month => month === this.minDate.month);\n      this.months = this.months.slice(index);\n    }\n\n    if (this.date && this.date.year === this.maxDate.year) {\n      const /** @type {?} */ index = this.months.findIndex(month => month === this.maxDate.month);\n      this.months = this.months.slice(0, index + 1);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _generateYears() {\n    this.years = Array.from({length: this.maxDate.year - this.minDate.year + 1}, (e, i) => this.minDate.year + i);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-navigation-select',\n  styles: [`\n    select {\n      /* to align with btn-sm */\n      padding: 0.25rem 0.5rem;\n      font-size: 0.875rem;      \n      line-height: 1.25;\n      /* to cancel the custom height set by custom-select */\n      height: inherit;\n      width: 50%;\n    }\n  `],\n  template: `\n    <select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.month\" (change)=\"changeMonth($event.target.value)\">\n      <option *ngFor=\"let m of months\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select>` +\n      `<select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.year\" (change)=\"changeYear($event.target.value)\">\n      <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select> \n  `  // template needs to be formatted in a certain way so we don't add empty text nodes\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\nfunction NgbDatepickerNavigationSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerNavigationSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerNavigationSelect.ctorParameters;\n/** @type {?} */\nNgbDatepickerNavigationSelect.propDecorators;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.months;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.years;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.date;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.disabled;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.maxDate;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.minDate;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.select;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.i18n;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.calendar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input} from '@angular/core';\nimport {NgbDateStruct} from './ngb-date-struct';\nexport class NgbDatepickerDayView {\n   currentMonth: number;\n   date: NgbDateStruct;\n   disabled: boolean;\n   selected: boolean;\n/**\n * @return {?}\n */\nisMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: '[ngbDatepickerDayView]',\n  styles: [`\n    :host {\n      text-align: center;\n      width: 2rem;\n      height: 2rem;\n      line-height: 2rem;      \n      border-radius: 0.25rem;\n    }\n    :host.outside {\n      opacity: 0.5;\n    }\n  `],\n  host: {\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.btn-secondary]': '!disabled'\n  },\n  template: `{{ date.day }}`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'currentMonth': [{ type: Input },],\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'selected': [{ type: Input },],\n};\n}\n\nfunction NgbDatepickerDayView_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerDayView.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerDayView.ctorParameters;\n/** @type {?} */\nNgbDatepickerDayView.propDecorators;\n/** @type {?} */\nNgbDatepickerDayView.prototype.currentMonth;\n/** @type {?} */\nNgbDatepickerDayView.prototype.date;\n/** @type {?} */\nNgbDatepickerDayView.prototype.disabled;\n/** @type {?} */\nNgbDatepickerDayView.prototype.selected;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements} from '../util/positioning';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nconst /** @type {?} */ NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst /** @type {?} */ NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\nprivate _cRef: ComponentRef<NgbDatepicker> = null;\nprivate _model: NgbDate;\nprivate _zoneSubscription: any;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n   dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n   displayMonths: number;\n\n  /**\n  * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n   firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n   markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n   minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n   maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n   navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n   outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n\n  /**\n   * Placement of a datepicker popup. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"bottom-left\",\n   * \"bottom-right\" etc.\n   */\n   placement = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n   showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n   showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n   startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n   navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\nprivate _onChange = (_: any) => {};\nprivate _onTouched = () => {};\nprivate _validatorChange = () => {};\n/**\n * @param {?} _parserFormatter\n * @param {?} _elRef\n * @param {?} _vcRef\n * @param {?} _renderer\n * @param {?} _cfr\n * @param {?} ngZone\n * @param {?} _service\n * @param {?} _calendar\n */\nconstructor(\nprivate _parserFormatter: NgbDateParserFormatter,\nprivate _elRef: ElementRef,\nprivate _vcRef: ViewContainerRef,\nprivate _renderer: Renderer2,\nprivate _cfr: ComponentFactoryResolver, ngZone: NgZone,\nprivate _service: NgbDatepickerService,\nprivate _calendar: NgbCalendar) {\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement);\n      }\n    });\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this._onTouched = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._validatorChange = fn; };\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elRef.nativeElement, 'disabled', isDisabled);\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(isDisabled);\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): {[key: string]: any} {\n    const /** @type {?} */ value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    if (!this._calendar.isValid(value)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && NgbDate.from(value).before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && NgbDate.from(value).after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) {\n    const /** @type {?} */ ngbDate = value ? new NgbDate(value.year, value.month, value.day) : null;\n    this._model = this._calendar.isValid(value) ? ngbDate : null;\n    this._writeModelValue(this._model);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nmanualDateChange(value: string) {\n    this._model = this._service.toValidDate(this._parserFormatter.parse(value), null);\n    this._onChange(this._model ? this._model.toStruct() : (value === '' ? null : value));\n    this._writeModelValue(this._model);\n  }\n/**\n * @return {?}\n */\nisOpen() { return !!this._cRef; }\n/**\n * Opens the datepicker with the selected date indicated by the ngModel value.\n * @return {?}\n */\nopen() {\n    if (!this.isOpen()) {\n      const /** @type {?} */ cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._cRef.instance.writeValue(this._model);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this.close();\n      });\n    }\n  }\n/**\n * Closes the datepicker popup.\n * @return {?}\n */\nclose() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n    }\n  }\n/**\n * Toggles the datepicker popup (opens when closed and closes when opened).\n * @return {?}\n */\ntoggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Navigates current view to provided date.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided calendar will open current month.\n * Use 'startDate' input as an alternative\n * @param {?=} date\n * @return {?}\n */\nnavigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n/**\n * @return {?}\n */\nonBlur() { this._onTouched(); }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n/**\n * @param {?} datepickerInstance\n * @return {?}\n */\nprivate _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n     'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n/**\n * @param {?} nativeElement\n * @return {?}\n */\nprivate _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n  }\n/**\n * @param {?} datepickerInstance\n * @return {?}\n */\nprivate _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nprivate _writeModelValue(model: NgbDate) {\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(model);\n      this._onTouched();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {'(change)': 'manualDateChange($event.target.value)', '(keyup.esc)': 'close()', '(blur)': 'onBlur()'},\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDateParserFormatter, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: NgbDatepickerService, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'displayMonths': [{ type: Input },],\n'firstDayOfWeek': [{ type: Input },],\n'markDisabled': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'navigation': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'placement': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'startDate': [{ type: Input },],\n'navigate': [{ type: Output },],\n};\n}\n\nfunction NgbInputDatepicker_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbInputDatepicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbInputDatepicker.ctorParameters;\n/** @type {?} */\nNgbInputDatepicker.propDecorators;\n/** @type {?} */\nNgbInputDatepicker.prototype._cRef;\n/** @type {?} */\nNgbInputDatepicker.prototype._model;\n/** @type {?} */\nNgbInputDatepicker.prototype._zoneSubscription;\n/**\n * Reference for the custom template for the day display\n * @type {?}\n */\nNgbInputDatepicker.prototype.dayTemplate;\n/**\n * Number of months to display\n * @type {?}\n */\nNgbInputDatepicker.prototype.displayMonths;\n/**\n * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n * @type {?}\n */\nNgbInputDatepicker.prototype.firstDayOfWeek;\n/**\n * Callback to mark a given date as disabled.\n * 'Current' contains the month that will be displayed in the view\n * @type {?}\n */\nNgbInputDatepicker.prototype.markDisabled;\n/**\n * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n * @type {?}\n */\nNgbInputDatepicker.prototype.minDate;\n/**\n * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n * @type {?}\n */\nNgbInputDatepicker.prototype.maxDate;\n/**\n * Navigation type: `select` (default with select boxes for month and year), `arrows`\n * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n * @type {?}\n */\nNgbInputDatepicker.prototype.navigation;\n/**\n * The way to display days that don't belong to current month: `visible` (default),\n * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n * @type {?}\n */\nNgbInputDatepicker.prototype.outsideDays;\n/**\n * Placement of a datepicker popup. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"bottom-left\",\n * \"bottom-right\" etc.\n * @type {?}\n */\nNgbInputDatepicker.prototype.placement;\n/**\n * Whether to display days of the week\n * @type {?}\n */\nNgbInputDatepicker.prototype.showWeekdays;\n/**\n * Whether to display week numbers\n * @type {?}\n */\nNgbInputDatepicker.prototype.showWeekNumbers;\n/**\n * Date to open calendar with.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided, calendar will open with current month.\n * Use 'navigateTo(date)' as an alternative\n * @type {?}\n */\nNgbInputDatepicker.prototype.startDate;\n/**\n * An event fired when navigation happens and currently displayed month changes.\n * See NgbDatepickerNavigateEvent for the payload info.\n * @type {?}\n */\nNgbInputDatepicker.prototype.navigate;\n/** @type {?} */\nNgbInputDatepicker.prototype._onChange;\n/** @type {?} */\nNgbInputDatepicker.prototype._onTouched;\n/** @type {?} */\nNgbInputDatepicker.prototype._validatorChange;\n/** @type {?} */\nNgbInputDatepicker.prototype._parserFormatter;\n/** @type {?} */\nNgbInputDatepicker.prototype._elRef;\n/** @type {?} */\nNgbInputDatepicker.prototype._vcRef;\n/** @type {?} */\nNgbInputDatepicker.prototype._renderer;\n/** @type {?} */\nNgbInputDatepicker.prototype._cfr;\n/** @type {?} */\nNgbInputDatepicker.prototype._service;\n/** @type {?} */\nNgbInputDatepicker.prototype._calendar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Positioning {\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nprivate getStyle(element: HTMLElement, prop: string): string { return window.getComputedStyle(element)[prop]; }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate offsetParent(element: HTMLElement): HTMLElement {\n    let /** @type {?} */ offsetParentEl = /** @type {?} */(( <HTMLElement>element.offsetParent)) || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = /** @type {?} */(( <HTMLElement>offsetParentEl.offsetParent));\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n/**\n * @param {?} element\n * @param {?=} round\n * @return {?}\n */\nposition(element: HTMLElement, round = true): ClientRect {\n    let /** @type {?} */ elPosition: ClientRect;\n    let /** @type {?} */ parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const /** @type {?} */ offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n/**\n * @param {?} element\n * @param {?=} round\n * @return {?}\n */\noffset(element: HTMLElement, round = true): ClientRect {\n    const /** @type {?} */ elBcr = element.getBoundingClientRect();\n    const /** @type {?} */ viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let /** @type {?} */ elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @return {?}\n */\npositionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const /** @type {?} */ hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const /** @type {?} */ targetElBCR = targetElement.getBoundingClientRect();\n    const /** @type {?} */ placementPrimary = placement.split('-')[0] || 'top';\n    const /** @type {?} */ placementSecondary = placement.split('-')[1] || 'center';\n\n    let /** @type {?} */ targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top - targetElement.offsetHeight;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n}\n\nconst /** @type {?} */ positionService = new Positioning();\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @return {?}\n */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean): void {\n  const /** @type {?} */ pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n * @abstract\n */\nexport abstract class NgbDateParserFormatter {\n/**\n * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n * partial. They must return null if the value can't be parsed.\n * @abstract\n * @param {?} value the value to parse\n * @return {?}\n */\nparse(value: string) {}\n/**\n * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n * and try their best to provide a partial result if the given date is incomplete or invalid.\n * @abstract\n * @param {?} date the date to format as a string\n * @return {?}\n */\nformat(date: NgbDateStruct) {}\n}\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n/**\n * @param {?} value\n * @return {?}\n */\nparse(value: string): NgbDateStruct {\n    if (value) {\n      const /** @type {?} */ dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nformat(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {NavigationEvent} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n   date: NgbDate;\n   disabled: boolean;\n   maxDate: NgbDate;\n   minDate: NgbDate;\n   months: number;\n   showSelect: boolean;\n   showWeekNumbers: boolean;\n\n   navigate = new EventEmitter<NavigationEvent>();\n   select = new EventEmitter<NgbDate>();\n/**\n * @param {?} i18n\n * @param {?} _calendar\n */\nconstructor(public i18n: NgbDatepickerI18n,\nprivate _calendar: NgbCalendar) {}\n/**\n * @param {?} event\n * @return {?}\n */\ndoNavigate(event: NavigationEvent) { this.navigate.emit(event); }\n/**\n * @return {?}\n */\nnextDisabled() {\n    return this.disabled || (this.maxDate && this._calendar.getNext(this.date, 'm').after(this.maxDate));\n  }\n/**\n * @return {?}\n */\nprevDisabled() {\n    const /** @type {?} */ prevDate = this._calendar.getPrev(this.date, 'm');\n    return this.disabled || (this.minDate && prevDate.year <= this.minDate.year && prevDate.month < this.minDate.month);\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nselectDate(date: NgbDate) { this.select.emit(date); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-navigation',\n  host: {'class': 'd-flex justify-content-between', '[class.collapsed]': '!showSelect'},\n  styles: [`\n    :host {\n      height: 2rem;\n      line-height: 1.85rem;\n    }\n    :host.collapsed {\n      margin-bottom: -2rem;        \n    }\n    .ngb-dp-navigation-chevron::before {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.75em;\n      transform: rotate(-135deg);\n      -webkit-transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n      width: 0.75em;\n      margin: 0 0 0 0.5rem;\n    }    \n    .ngb-dp-navigation-chevron.right:before {\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin: 0 0.5rem 0 0;\n    }\n    .btn-link {\n      cursor: pointer;\n      outline: 0;\n    }\n    .btn-link[disabled] {\n      cursor: not-allowed;\n      opacity: .65;\n    }    \n  `],\n  template: `\n    <button type=\"button\" class=\"btn-link\" (click)=\"!!doNavigate(navigation.PREV)\" [disabled]=\"prevDisabled()\">\n      <span class=\"ngb-dp-navigation-chevron\"></span>    \n    </button>\n    \n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"d-block\" [style.width.rem]=\"months * 9\"\n      [date]=\"date\"\n      [minDate]=\"minDate\"\n      [maxDate]=\"maxDate\"\n      [disabled] = \"disabled\"\n      (select)=\"selectDate($event)\">\n    </ngb-datepicker-navigation-select>\n    \n    <button type=\"button\" class=\"btn-link\" (click)=\"!!doNavigate(navigation.NEXT)\" [disabled]=\"nextDisabled()\">\n      <span class=\"ngb-dp-navigation-chevron right\"></span>\n    </button>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'months': [{ type: Input },],\n'showSelect': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'navigate': [{ type: Output },],\n'select': [{ type: Output },],\n};\n}\n\nfunction NgbDatepickerNavigation_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerNavigation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerNavigation.ctorParameters;\n/** @type {?} */\nNgbDatepickerNavigation.propDecorators;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.navigation;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.date;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.disabled;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.maxDate;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.minDate;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.months;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.showSelect;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.showWeekNumbers;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.navigate;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.select;\n/** @type {?} */\nNgbDatepickerNavigation.prototype.i18n;\n/** @type {?} */\nNgbDatepickerNavigation.prototype._calendar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel, WeekViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nexport class NgbDatepickerMonthView {\n   dayTemplate: TemplateRef<DayTemplateContext>;\n   disabled: boolean;\n   month: MonthViewModel;\n   outsideDays: 'visible' | 'hidden' | 'collapsed';\n   selectedDate: NgbDate;\n   showWeekdays;\n   showWeekNumbers;\n\n   select = new EventEmitter<NgbDate>();\n/**\n * @param {?} i18n\n */\nconstructor(public i18n: NgbDatepickerI18n) {}\n/**\n * @param {?} day\n * @return {?}\n */\ndoSelect(day: DayViewModel) {\n    if (!this.isDisabled(day) && !this.isHidden(day)) {\n      this.select.emit(NgbDate.from(day.date));\n    }\n  }\n/**\n * @param {?} day\n * @param {?} month\n * @return {?}\n */\n_getDayContext(day: any, month: any) {\n    return {\n      date: {year: day.date.year, month: day.date.month, day: day.date.day},\n      currentMonth: month.number,\n      disabled: this.isDisabled(day),\n      selected: this.isSelected(day.date)\n    };\n  }\n/**\n * @param {?} day\n * @return {?}\n */\nisDisabled(day: DayViewModel) { return this.disabled || day.disabled; }\n/**\n * @param {?} date\n * @return {?}\n */\nisSelected(date: NgbDate) { return this.selectedDate && this.selectedDate.equals(date); }\n/**\n * @param {?} week\n * @return {?}\n */\nisCollapsed(week: WeekViewModel) {\n    return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&\n        week.days[week.days.length - 1].date.month !== this.month.number;\n  }\n/**\n * @param {?} day\n * @return {?}\n */\nisHidden(day: DayViewModel) {\n    return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-month-view',\n  host: {'class': 'd-block'},\n  styles: [`\n    .ngb-dp-weekday, .ngb-dp-week-number {\n      line-height: 2rem;\n    }\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\n      width: 2rem;\n      height: 2rem;      \n    }\n    .ngb-dp-day {\n      cursor: pointer;\n    }\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\n      cursor: default;\n    }\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week d-flex\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small text-center text-info font-italic\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!isCollapsed(week)\" class=\"ngb-dp-week d-flex\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" [class.disabled]=\"isDisabled(day)\"\n         [class.hidden]=\"isHidden(day)\">\n          <ng-template [ngIf]=\"!isHidden(day)\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\"\n            [ngOutletContext]=\"_getDayContext(day, month)\">\n            </ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'disabled': [{ type: Input },],\n'month': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'selectedDate': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\nfunction NgbDatepickerMonthView_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerMonthView.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerMonthView.ctorParameters;\n/** @type {?} */\nNgbDatepickerMonthView.propDecorators;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.dayTemplate;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.disabled;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.month;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.outsideDays;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.selectedDate;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.showWeekdays;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.showWeekNumbers;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.select;\n/** @type {?} */\nNgbDatepickerMonthView.prototype.i18n;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, NavigationEvent} from './datepicker-view-model';\nimport {toInteger} from '../util/util';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nconst /** @type {?} */ NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n/**\n * A lightweight and highly configurable datepicker directive\n */\nexport class NgbDatepicker implements OnChanges,\n    OnInit, ControlValueAccessor {\n  _date: NgbDate;\n  _maxDate: NgbDate;\n  _minDate: NgbDate;\n\n  model: NgbDate;\n  months: MonthViewModel[] = [];\n\n  /**\n   * Reference for the custom template for the day display\n   */\n   dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n   displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n   firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n   markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n   minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n   maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n   navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n   outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n   showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n   showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n   startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n   navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  disabled = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _service\n * @param {?} _calendar\n * @param {?} i18n\n * @param {?} config\n */\nconstructor(\nprivate _service: NgbDatepickerService,\nprivate _calendar: NgbCalendar,\npublic i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig) {\n    this.dayTemplate = config.dayTemplate;\n    this.displayMonths = config.displayMonths;\n    this.firstDayOfWeek = config.firstDayOfWeek;\n    this.markDisabled = config.markDisabled;\n    this.minDate = config.minDate;\n    this.maxDate = config.maxDate;\n    this.navigation = config.navigation;\n    this.outsideDays = config.outsideDays;\n    this.showWeekdays = config.showWeekdays;\n    this.showWeekNumbers = config.showWeekNumbers;\n    this.startDate = config.startDate;\n  }\n/**\n * @return {?}\n */\ngetHeaderHeight() {\n    const /** @type {?} */ h = this.showWeekdays ? 6.25 : 4.25;\n    return this.displayMonths === 1 || this.navigation !== 'select' ? h - 2 : h;\n  }\n/**\n * @return {?}\n */\ngetHeaderMargin() {\n    const /** @type {?} */ m = this.showWeekdays ? 2 : 0;\n    return this.displayMonths !== 1 || this.navigation !== 'select' ? m + 2 : m;\n  }\n/**\n * Navigates current view to provided date.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided calendar will open current month.\n * Use 'startDate' input as an alternative\n * @param {?=} date\n * @return {?}\n */\nnavigateTo(date?: {year: number, month: number}) {\n    this._setViewWithinLimits(this._service.toValidDate(date));\n    this._updateData();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._setDates();\n    this.navigateTo(this._date);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._setDates();\n    this._setViewWithinLimits(this._date);\n\n    if (changes['displayMonths']) {\n      this.displayMonths = toInteger(this.displayMonths);\n    }\n\n    // we have to force rebuild all months only if any of these inputs changes\n    if (['startDate', 'minDate', 'maxDate', 'navigation', 'firstDayOfWeek', 'markDisabled', 'displayMonths'].some(\n            input => !!changes[input])) {\n      this._updateData(true);\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nonDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n\n    this.onTouched();\n    this.writeValue(date);\n    this.onChange({year: date.year, month: date.month, day: date.day});\n\n    // switch current month\n    if (this._date.month !== this.months[0].number && this.displayMonths === 1) {\n      this._updateData();\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nonNavigateDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n    this._updateData();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._setViewWithinLimits(this._calendar.getPrev(this.months[0].firstDate, 'm'));\n        break;\n      case NavigationEvent.NEXT:\n        this._setViewWithinLimits(this._calendar.getNext(this.months[0].firstDate, 'm'));\n        break;\n    }\n\n    this._updateData();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) { this.model = this._service.toValidDate(value, null); }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n/**\n * @return {?}\n */\nprivate _setDates() {\n    this._maxDate = NgbDate.from(this.maxDate);\n    this._minDate = NgbDate.from(this.minDate);\n    this._date = this._service.toValidDate(this.startDate);\n\n    if (!this._calendar.isValid(this._minDate)) {\n      this._minDate = this._calendar.getPrev(this._date, 'y', 10);\n      this.minDate = {year: this._minDate.year, month: this._minDate.month, day: this._minDate.day};\n    }\n\n    if (!this._calendar.isValid(this._maxDate)) {\n      this._maxDate = this._calendar.getNext(this._date, 'y', 11);\n      this._maxDate = this._calendar.getPrev(this._maxDate);\n      this.maxDate = {year: this._maxDate.year, month: this._maxDate.month, day: this._maxDate.day};\n    }\n\n    if (this._minDate && this._maxDate && this._maxDate.before(this._minDate)) {\n      throw new Error(`'maxDate' ${this._maxDate} should be greater than 'minDate' ${this._minDate}`);\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nprivate _setViewWithinLimits(date: NgbDate) {\n    if (this._minDate && date.before(this._minDate)) {\n      this._date = new NgbDate(this._minDate.year, this._minDate.month, 1);\n    } else if (this._maxDate && date.after(this._maxDate)) {\n      this._date = new NgbDate(this._maxDate.year, this._maxDate.month, 1);\n    } else {\n      this._date = new NgbDate(date.year, date.month, 1);\n    }\n  }\n/**\n * @param {?=} force\n * @return {?}\n */\nprivate _updateData(force = false) {\n    const /** @type {?} */ newMonths = [];\n    for (let /** @type {?} */ i = 0; i < this.displayMonths; i++) {\n      const /** @type {?} */ newDate = this._calendar.getNext(this._date, 'm', i);\n      const /** @type {?} */ index = this.months.findIndex(month => month.firstDate.equals(newDate));\n\n      if (force || index === -1) {\n        newMonths.push(\n            this._service.generateMonthViewModel(\n                newDate, this._minDate, this._maxDate, toInteger(this.firstDayOfWeek), this.markDisabled));\n      } else {\n        newMonths.push(this.months[index]);\n      }\n    }\n\n    const /** @type {?} */ newDate = newMonths[0].firstDate;\n    const /** @type {?} */ oldDate = this.months[0] ? this.months[0].firstDate : null;\n\n    this.months = newMonths;\n\n    // emitting navigation event if the first month changes\n    if (!newDate.equals(oldDate)) {\n      this.navigate.emit({\n        current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n        next: {year: newDate.year, month: newDate.month}\n      });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  host: {'class': 'd-inline-block rounded'},\n  styles: [`\n    :host {\n      border: 1px solid rgba(0, 0, 0, 0.125);\n    }\n    .ngb-dp-header {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n    }\n    .ngb-dp-month {\n      pointer-events: none;\n    }\n    ngb-datepicker-month-view {\n      pointer-events: auto;\n    }\n    .ngb-dp-month:first-child {\n      margin-left: 0 !important;\n    }    \n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n    }    \n  `],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\">\n       <div ngbDatepickerDayView [date]=\"date\" [currentMonth]=\"currentMonth\" [selected]=\"selected\" [disabled]=\"disabled\"></div>\n    </ng-template>\n    \n    <div class=\"ngb-dp-header bg-faded pt-1 rounded-top\" [style.height.rem]=\"getHeaderHeight()\" \n      [style.marginBottom.rem]=\"-getHeaderMargin()\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"months[0]?.firstDate\"\n        [minDate]=\"_minDate\"\n        [maxDate]=\"_maxDate\"\n        [months]=\"months.length\"\n        [disabled]=\"disabled\"\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [showSelect]=\"navigation === 'select'\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months d-flex px-1 pb-1\">\n      <ng-template ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n        <div class=\"ngb-dp-month d-block ml-3\">            \n          <div *ngIf=\"navigation !== 'select' || displayMonths > 1\" class=\"ngb-dp-month-name text-center\">\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [selectedDate]=\"model\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            [disabled]=\"disabled\"\n            [outsideDays]=\"displayMonths === 1 ? outsideDays : 'hidden'\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerService, },\n{type: NgbCalendar, },\n{type: NgbDatepickerI18n, },\n{type: NgbDatepickerConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'displayMonths': [{ type: Input },],\n'firstDayOfWeek': [{ type: Input },],\n'markDisabled': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'navigation': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'startDate': [{ type: Input },],\n'navigate': [{ type: Output },],\n};\n}\n\nfunction NgbDatepicker_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepicker.ctorParameters;\n/** @type {?} */\nNgbDatepicker.propDecorators;\n/** @type {?} */\nNgbDatepicker.prototype._date;\n/** @type {?} */\nNgbDatepicker.prototype._maxDate;\n/** @type {?} */\nNgbDatepicker.prototype._minDate;\n/** @type {?} */\nNgbDatepicker.prototype.model;\n/** @type {?} */\nNgbDatepicker.prototype.months;\n/**\n * Reference for the custom template for the day display\n * @type {?}\n */\nNgbDatepicker.prototype.dayTemplate;\n/**\n * Number of months to display\n * @type {?}\n */\nNgbDatepicker.prototype.displayMonths;\n/**\n * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n * @type {?}\n */\nNgbDatepicker.prototype.firstDayOfWeek;\n/**\n * Callback to mark a given date as disabled.\n * 'Current' contains the month that will be displayed in the view\n * @type {?}\n */\nNgbDatepicker.prototype.markDisabled;\n/**\n * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n * @type {?}\n */\nNgbDatepicker.prototype.minDate;\n/**\n * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n * @type {?}\n */\nNgbDatepicker.prototype.maxDate;\n/**\n * Navigation type: `select` (default with select boxes for month and year), `arrows`\n * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n * @type {?}\n */\nNgbDatepicker.prototype.navigation;\n/**\n * The way to display days that don't belong to current month: `visible` (default),\n * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n * @type {?}\n */\nNgbDatepicker.prototype.outsideDays;\n/**\n * Whether to display days of the week\n * @type {?}\n */\nNgbDatepicker.prototype.showWeekdays;\n/**\n * Whether to display week numbers\n * @type {?}\n */\nNgbDatepicker.prototype.showWeekNumbers;\n/**\n * Date to open calendar with.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided, calendar will open with current month.\n * Use 'navigateTo(date)' as an alternative\n * @type {?}\n */\nNgbDatepicker.prototype.startDate;\n/**\n * An event fired when navigation happens and currently displayed month changes.\n * See NgbDatepickerNavigateEvent for the payload info.\n * @type {?}\n */\nNgbDatepicker.prototype.navigate;\n/** @type {?} */\nNgbDatepicker.prototype.disabled;\n/** @type {?} */\nNgbDatepicker.prototype.onChange;\n/** @type {?} */\nNgbDatepicker.prototype.onTouched;\n/** @type {?} */\nNgbDatepicker.prototype._service;\n/** @type {?} */\nNgbDatepicker.prototype._calendar;\n/** @type {?} */\nNgbDatepicker.prototype.i18n;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n\nconst /** @type {?} */ WEEKDAYS_SHORT = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nconst /** @type {?} */ MONTHS_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst /** @type {?} */ MONTHS_FULL = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November',\n  'December'\n];\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n * @abstract\n */\nexport abstract class NgbDatepickerI18n {\n/**\n * Returns the short weekday name to display in the heading of the month view.\n * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n * @abstract\n * @param {?} weekday\n * @return {?}\n */\ngetWeekdayShortName(weekday: number) {}\n/**\n * Returns the short month name to display in the date picker navigation.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n * @abstract\n * @param {?} month\n * @return {?}\n */\ngetMonthShortName(month: number) {}\n/**\n * Returns the full month name to display in the date picker navigation.\n * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n * @abstract\n * @param {?} month\n * @return {?}\n */\ngetMonthFullName(month: number) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDatepickerI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerI18n.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerI18n.ctorParameters;\n}\n\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n/**\n * @param {?} weekday\n * @return {?}\n */\ngetWeekdayShortName(weekday: number): string { return WEEKDAYS_SHORT[weekday - 1]; }\n/**\n * @param {?} month\n * @return {?}\n */\ngetMonthShortName(month: number): string { return MONTHS_SHORT[month - 1]; }\n/**\n * @param {?} month\n * @return {?}\n */\ngetMonthFullName(month: number): string { return MONTHS_FULL[month - 1]; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDatepickerI18nDefault_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerI18nDefault.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerI18nDefault.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDatepickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerConfig.ctorParameters;\n/** @type {?} */\nNgbDatepickerConfig.prototype.dayTemplate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.displayMonths;\n/** @type {?} */\nNgbDatepickerConfig.prototype.firstDayOfWeek;\n/** @type {?} */\nNgbDatepickerConfig.prototype.markDisabled;\n/** @type {?} */\nNgbDatepickerConfig.prototype.minDate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.maxDate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.navigation;\n/** @type {?} */\nNgbDatepickerConfig.prototype.outsideDays;\n/** @type {?} */\nNgbDatepickerConfig.prototype.showWeekdays;\n/** @type {?} */\nNgbDatepickerConfig.prototype.showWeekNumbers;\n/** @type {?} */\nNgbDatepickerConfig.prototype.startDate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgbDate} from './ngb-date';\n\nexport type DayViewModel = {\n  date: NgbDate,\n  disabled: boolean\n}\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[]\n}\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\nexport type NavigationEvent = number;\nexport let NavigationEvent: any = {};\nNavigationEvent.PREV = 0;\nNavigationEvent.NEXT = 1;\nNavigationEvent[NavigationEvent.PREV] = \"PREV\";\nNavigationEvent[NavigationEvent.NEXT] = \"NEXT\";\n\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nexport class NgbDatepickerService {\n/**\n * @param {?} _calendar\n */\nconstructor(private _calendar: NgbCalendar) {}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @param {?} firstDayOfWeek\n * @param {?} markDisabled\n * @return {?}\n */\ngenerateMonthViewModel(\n      date: NgbDate, minDate: NgbDate, maxDate: NgbDate, firstDayOfWeek: number,\n      markDisabled: (date: NgbDate, current: {month: number, year: number}) => boolean): MonthViewModel {\n    const /** @type {?} */ month: MonthViewModel = {firstDate: null, number: date.month, year: date.year, weeks: [], weekdays: []};\n\n    date = this._getFirstViewDate(date, firstDayOfWeek);\n\n    // month has weeks\n    for (let /** @type {?} */ w = 0; w < this._calendar.getWeeksPerMonth(); w++) {\n      const /** @type {?} */ days: DayViewModel[] = [];\n\n      // week has days\n      for (let /** @type {?} */ d = 0; d < this._calendar.getDaysPerWeek(); d++) {\n        if (w === 0) {\n          month.weekdays.push(this._calendar.getWeekday(date));\n        }\n\n        const /** @type {?} */ newDate = new NgbDate(date.year, date.month, date.day);\n\n        let /** @type {?} */ disabled = (minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate));\n        if (!disabled && markDisabled) {\n          disabled = markDisabled(newDate, {month: month.number, year: month.year});\n        }\n\n        // saving first date of the month\n        if (month.firstDate === null && date.month === month.number) {\n          month.firstDate = newDate;\n        }\n\n        days.push({date: newDate, disabled: disabled});\n\n        date = this._calendar.getNext(date);\n      }\n\n      month.weeks.push(\n          {number: this._calendar.getWeekNumber(days.map(day => NgbDate.from(day.date)), firstDayOfWeek), days: days});\n    }\n\n    return month;\n  }\n/**\n * @param {?} date\n * @param {?=} defaultValue\n * @return {?}\n */\ntoValidDate(date: {year: number, month: number, day?: number}, defaultValue?: NgbDate): NgbDate {\n    const /** @type {?} */ ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nprivate _getFirstViewDate(date: NgbDate, firstDayOfWeek: number): NgbDate {\n    const /** @type {?} */ currentMonth = date.month;\n    let /** @type {?} */ today = new NgbDate(date.year, date.month, date.day);\n    let /** @type {?} */ yesterday = this._calendar.getPrev(today);\n\n    const /** @type {?} */ firstDayOfCurrentMonthIsAlsoFirstDayOfWeek =\n        () => { return today.month !== yesterday.month && firstDayOfWeek === this._calendar.getWeekday(today); };\n\n    const /** @type {?} */ reachedTheFirstDayOfTheLastWeekOfPreviousMonth =\n        () => { return today.month !== currentMonth && firstDayOfWeek === this._calendar.getWeekday(today); };\n\n    // going back in time\n    while (!reachedTheFirstDayOfTheLastWeekOfPreviousMonth() && !firstDayOfCurrentMonthIsAlsoFirstDayOfWeek()) {\n      today = new NgbDate(yesterday.year, yesterday.month, yesterday.day);\n      yesterday = this._calendar.getPrev(yesterday);\n    }\n\n    return today;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbCalendar, },\n];\n}\n\nfunction NgbDatepickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerService.ctorParameters;\n/** @type {?} */\nNgbDatepickerService.prototype._calendar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n/**\n * @param {?} jsDate\n * @return {?}\n */\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction toJSDate(date: NgbDate) {\n  const /** @type {?} */ jsDate = new Date(date.year, date.month - 1, date.day);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n/**\n * @abstract\n */\nexport abstract class NgbCalendar {\n/**\n * @abstract\n * @return {?}\n */\ngetDaysPerWeek() {}\n/**\n * @abstract\n * @return {?}\n */\ngetMonths() {}\n/**\n * @abstract\n * @return {?}\n */\ngetWeeksPerMonth() {}\n/**\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetWeekday(date: NgbDate) {}\n/**\n * @abstract\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetNext(date: NgbDate, period?: NgbPeriod, number?: number) {}\n/**\n * @abstract\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetPrev(date: NgbDate, period?: NgbPeriod, number?: number) {}\n/**\n * @abstract\n * @param {?} week\n * @param {?} firstDayOfWeek\n * @return {?}\n */\ngetWeekNumber(week: NgbDate[], firstDayOfWeek: number) {}\n/**\n * @abstract\n * @return {?}\n */\ngetToday() {}\n/**\n * @abstract\n * @param {?} date\n * @return {?}\n */\nisValid(date: NgbDate) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCalendar_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCalendar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCalendar.ctorParameters;\n}\n\nexport class NgbCalendarGregorian extends NgbCalendar {\n/**\n * @return {?}\n */\ngetDaysPerWeek() { return 7; }\n/**\n * @return {?}\n */\ngetMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n/**\n * @return {?}\n */\ngetWeeksPerMonth() { return 6; }\n/**\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let /** @type {?} */ jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n/**\n * @param {?} date\n * @param {?=} period\n * @param {?=} number\n * @return {?}\n */\ngetPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n/**\n * @param {?} date\n * @return {?}\n */\ngetWeekday(date: NgbDate) {\n    let /** @type {?} */ jsDate = toJSDate(date);\n    let /** @type {?} */ day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n/**\n * @param {?} week\n * @param {?} firstDayOfWeek\n * @return {?}\n */\ngetWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const /** @type {?} */ thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let /** @type {?} */ date = week[thursdayIndex];\n\n    const /** @type {?} */ jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const /** @type {?} */ time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n/**\n * @return {?}\n */\ngetToday(): NgbDate { return fromJSDate(new Date()); }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    const /** @type {?} */ jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCalendarGregorian_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCalendarGregorian.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCalendarGregorian.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class NgbDate {\n/**\n * @param {?} date\n * @return {?}\n */\nstatic from(date: {year: number, month: number, day?: number}) {\n    return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} day\n */\nconstructor(public year: number,\npublic month: number,\npublic day: number) {}\n/**\n * @param {?} other\n * @return {?}\n */\nequals(other: NgbDate) {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n/**\n * @param {?} other\n * @return {?}\n */\nbefore(other: NgbDate) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n/**\n * @param {?} other\n * @return {?}\n */\nafter(other: NgbDate) {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n/**\n * @return {?}\n */\ntoStruct() { return {year: this.year, month: this.month, day: this.day}; }\n/**\n * @return {?}\n */\ntoString() { return `${this.year}-${this.month}-${this.day}`; }\n}\n\nfunction NgbDate_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDate.prototype.year;\n/** @type {?} */\nNgbDate.prototype.month;\n/** @type {?} */\nNgbDate.prototype.day;\n}\n\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\nexport class NgbCollapseModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule, providers: []}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbCollapse], exports: [NgbCollapse]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCollapseModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCollapseModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCollapseModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, Input} from '@angular/core';\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n   collapsed = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collapsed': [{ type: Input, args: ['ngbCollapse', ] },],\n};\n}\n\nfunction NgbCollapse_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCollapse.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCollapse.ctorParameters;\n/** @type {?} */\nNgbCollapse.propDecorators;\n/**\n * A flag indicating collapsed (true) or open (false) state.\n * @type {?}\n */\nNgbCollapse.prototype.collapsed;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES, NgbSlideEvent} from './carousel';\nimport {NgbCarouselConfig} from './carousel-config';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\nexport class NgbCarouselModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule, providers: [NgbCarouselConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCarouselModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCarouselModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCarouselModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Directive,\n  TemplateRef,\n  ContentChildren,\n  QueryList,\n  Input,\n  OnDestroy,\n  AfterContentChecked,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbCarouselConfig} from './carousel-config';\n\nlet /** @type {?} */ nextId = 0;\n/**\n * Represents an individual slide to be used within a carousel.\n */\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n   id = `ngb-slide-${nextId++}`;\n/**\n * @param {?} tplRef\n */\nconstructor(public tplRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ng-template[ngbSlide]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\nfunction NgbSlide_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbSlide.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbSlide.ctorParameters;\n/** @type {?} */\nNgbSlide.propDecorators;\n/**\n * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n * Will be auto-generated if not provided.\n * @type {?}\n */\nNgbSlide.prototype.id;\n/** @type {?} */\nNgbSlide.prototype.tplRef;\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\nexport class NgbCarousel implements AfterContentChecked,\n    OnDestroy, OnInit {\n   slides: QueryList<NgbSlide>;\nprivate _slideChangeInterval;\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n   interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n   wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n   keyboard: boolean;\n\n  /**\n   * The active slide id.\n   */\n   activeId: string;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n   slide = new EventEmitter<NgbSlideEvent>();\n/**\n * @param {?} config\n */\nconstructor(config: NgbCarouselConfig) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    let /** @type {?} */ activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n/**\n * @return {?}\n */\nngOnInit() { this._startTimer(); }\n/**\n * @return {?}\n */\nngOnDestroy() { clearInterval(this._slideChangeInterval); }\n/**\n * Navigate to a slide with the specified identifier.\n * @param {?} slideId\n * @return {?}\n */\nselect(slideId: string) {\n    this.cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId));\n    this._restartTimer();\n  }\n/**\n * Navigate to the next slide.\n * @return {?}\n */\nprev() {\n    this.cycleToPrev();\n    this._restartTimer();\n  }\n/**\n * Navigate to the next slide.\n * @return {?}\n */\nnext() {\n    this.cycleToNext();\n    this._restartTimer();\n  }\n/**\n * Stops the carousel from cycling through items.\n * @return {?}\n */\npause() { this._stopTimer(); }\n/**\n * Restarts cycling through the carousel slides from left to right.\n * @return {?}\n */\ncycle() { this._startTimer(); }\n/**\n * @return {?}\n */\ncycleToNext() { this.cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n/**\n * @return {?}\n */\ncycleToPrev() { this.cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n/**\n * @param {?} slideIdx\n * @param {?} direction\n * @return {?}\n */\ncycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let /** @type {?} */ selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide) {\n      if (selectedSlide.id !== this.activeId) {\n        this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      }\n      this.activeId = selectedSlide.id;\n    }\n  }\n/**\n * @return {?}\n */\nkeyPrev() {\n    if (this.keyboard) {\n      this.prev();\n    }\n  }\n/**\n * @return {?}\n */\nkeyNext() {\n    if (this.keyboard) {\n      this.next();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _restartTimer() {\n    this._stopTimer();\n    this._startTimer();\n  }\n/**\n * @return {?}\n */\nprivate _startTimer() {\n    if (this.interval > 0) {\n      this._slideChangeInterval = setInterval(() => { this.cycleToNext(); }, this.interval);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _stopTimer() { clearInterval(this._slideChangeInterval); }\n/**\n * @param {?} slideId\n * @return {?}\n */\nprivate _getSlideById(slideId: string): NgbSlide {\n    let /** @type {?} */ slideWithId: NgbSlide[] = this.slides.filter(slide => slide.id === slideId);\n    return slideWithId.length ? slideWithId[0] : null;\n  }\n/**\n * @param {?} slideId\n * @return {?}\n */\nprivate _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n/**\n * @param {?} currentSlideId\n * @return {?}\n */\nprivate _getNextSlide(currentSlideId: string): string {\n    const /** @type {?} */ slideArr = this.slides.toArray();\n    const /** @type {?} */ currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const /** @type {?} */ isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n/**\n * @param {?} currentSlideId\n * @return {?}\n */\nprivate _getPrevSlide(currentSlideId: string): string {\n    const /** @type {?} */ slideArr = this.slides.toArray();\n    const /** @type {?} */ currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const /** @type {?} */ isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n/**\n * @param {?} currentActiveSlideId\n * @param {?} nextActiveSlideId\n * @return {?}\n */\nprivate _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const /** @type {?} */ currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const /** @type {?} */ nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pause()',\n    '(mouseleave)': 'cycle()',\n    '(keydown.arrowLeft)': 'keyPrev()',\n    '(keydown.arrowRight)': 'keyNext()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\" \n          (click)=\"cycleToSelected(slide.id, _getSlideEventDirection(activeId, slide.id))\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"left carousel-control-prev\" role=\"button\" (click)=\"cycleToPrev()\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"right carousel-control-next\" role=\"button\" (click)=\"cycleToNext()\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Next</span>\n    </a>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbCarouselConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slides': [{ type: ContentChildren, args: [NgbSlide, ] },],\n'interval': [{ type: Input },],\n'wrap': [{ type: Input },],\n'keyboard': [{ type: Input },],\n'activeId': [{ type: Input },],\n'slide': [{ type: Output },],\n};\n}\n\nfunction NgbCarousel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCarousel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCarousel.ctorParameters;\n/** @type {?} */\nNgbCarousel.propDecorators;\n/** @type {?} */\nNgbCarousel.prototype.slides;\n/** @type {?} */\nNgbCarousel.prototype._slideChangeInterval;\n/**\n * Amount of time in milliseconds before next slide is shown.\n * @type {?}\n */\nNgbCarousel.prototype.interval;\n/**\n * Whether can wrap from the last to the first slide.\n * @type {?}\n */\nNgbCarousel.prototype.wrap;\n/**\n * A flag for allowing navigation via keyboard\n * @type {?}\n */\nNgbCarousel.prototype.keyboard;\n/**\n * The active slide id.\n * @type {?}\n */\nNgbCarousel.prototype.activeId;\n/**\n * A carousel slide event fired when the slide transition is completed.\n * See NgbSlideEvent for payload details\n * @type {?}\n */\nNgbCarousel.prototype.slide;\n}\n\n\n/**\n* The payload of the slide event fired when the slide transition is completed\n*/\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\nexport type NgbSlideEventDirection = number;\nexport let NgbSlideEventDirection: any = {};\nNgbSlideEventDirection.LEFT =  /** @type {?} */(( <any>'left'));\nNgbSlideEventDirection.RIGHT =  /** @type {?} */(( <any>'right'));\nNgbSlideEventDirection[NgbSlideEventDirection.LEFT] = \"LEFT\";\nNgbSlideEventDirection[NgbSlideEventDirection.RIGHT] = \"RIGHT\";\n\n\nexport const /** @type {?} */ NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbCarouselConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbCarouselConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbCarouselConfig.ctorParameters;\n/** @type {?} */\nNgbCarouselConfig.prototype.interval;\n/** @type {?} */\nNgbCarouselConfig.prototype.wrap;\n/** @type {?} */\nNgbCarouselConfig.prototype.keyboard;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbRadio, NgbActiveLabel, NgbRadioGroup} from './radio';\n\nexport {NgbRadio, NgbActiveLabel, NgbRadioGroup} from './radio';\n\nconst /** @type {?} */ NGB_RADIO_DIRECTIVES = [NgbRadio, NgbActiveLabel, NgbRadioGroup];\nexport class NgbButtonsModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule, providers: []}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: NGB_RADIO_DIRECTIVES, exports: NGB_RADIO_DIRECTIVES}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbButtonsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbButtonsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbButtonsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, forwardRef, Optional, Input, Renderer2, ElementRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst /** @type {?} */ NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\nexport class NgbRadioGroup implements ControlValueAccessor {\nprivate _radios: Set<NgbRadio> = new Set<NgbRadio>();\nprivate _value = null;\nprivate _disabled: boolean;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} radio\n * @return {?}\n */\nonRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n/**\n * @return {?}\n */\nonRadioValueUpdate() { this._updateRadiosValue(); }\n/**\n * @param {?} radio\n * @return {?}\n */\nregister(radio: NgbRadio) { this._radios.add(radio); }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n/**\n * @param {?} radio\n * @return {?}\n */\nunregister(radio: NgbRadio) { this._radios.delete(radio); }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n/**\n * @return {?}\n */\nprivate _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n/**\n * @return {?}\n */\nprivate _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngbRadioGroup]',\n  host: {'data-toggle': 'buttons', 'class': 'btn-group', 'role': 'group'},\n  providers: [NGB_RADIO_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbRadioGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRadioGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRadioGroup.ctorParameters;\n/** @type {?} */\nNgbRadioGroup.prototype._radios;\n/** @type {?} */\nNgbRadioGroup.prototype._value;\n/** @type {?} */\nNgbRadioGroup.prototype._disabled;\n/** @type {?} */\nNgbRadioGroup.prototype.onChange;\n/** @type {?} */\nNgbRadioGroup.prototype.onTouched;\n}\n\nexport class NgbActiveLabel {\n/**\n * @param {?} _renderer\n * @param {?} _elRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elRef: ElementRef) {}\n/**\n * @param {?} isActive\n * @return {?}\n */\nset active(isActive: boolean) {\n    if (isActive) {\n      this._renderer.addClass(this._elRef.nativeElement, 'active');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'active');\n    }\n  }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset disabled(isDisabled: boolean) {\n    if (isDisabled) {\n      this._renderer.addClass(this._elRef.nativeElement, 'disabled');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'disabled');\n    }\n  }\n/**\n * @param {?} isFocused\n * @return {?}\n */\nset focused(isFocused: boolean) {\n    if (isFocused) {\n      this._renderer.addClass(this._elRef.nativeElement, 'focus');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'focus');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'label.btn'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction NgbActiveLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbActiveLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbActiveLabel.ctorParameters;\n/** @type {?} */\nNgbActiveLabel.prototype._renderer;\n/** @type {?} */\nNgbActiveLabel.prototype._elRef;\n}\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\nexport class NgbRadio implements OnDestroy {\nprivate _checked: boolean;\nprivate _disabled: boolean;\nprivate _value: any = null;\n/**\n * You can specify model value of a given radio by binding to the value property.\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    this._value = value;\n    const /** @type {?} */ stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n    if (this._group) {\n      this._group.onRadioValueUpdate();\n    }\n  }\n/**\n * A flag indicating if a given radio button is checked.\n * @param {?} value\n * @return {?}\n */\nset checked(value: boolean) {\n    this._checked = this._element.nativeElement.hasAttribute('checked') ? true : value;\n  }\n/**\n * A flag indicating if a given radio button is disabled.\n * @param {?} isDisabled\n * @return {?}\n */\nset disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n/**\n * @param {?} isFocused\n * @return {?}\n */\nset focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n  }\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @return {?}\n */\nget checked() { return this._checked; }\n/**\n * @return {?}\n */\nget disabled() { return (this._group && this._group.disabled) || this._disabled; }\n/**\n * @param {?} _group\n * @param {?} _label\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(\nprivate _group: NgbRadioGroup,\nprivate _label: NgbActiveLabel,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\n    if (this._group) {\n      this._group.register(this);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._group) {\n      this._group.unregister(this);\n    }\n  }\n/**\n * @return {?}\n */\nonChange() {\n    if (this._group) {\n      this._group.onRadioChange(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nupdateValue(value) {\n    this._checked = (this.value === value && value !== null);\n    this._label.active = this._checked;\n  }\n/**\n * @return {?}\n */\nupdateDisabled() {\n    let /** @type {?} */ disabled = (this._group && this._group.disabled) || this._disabled;\n    if (this._label) {\n      this._label.disabled = disabled;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbRadioGroup, decorators: [{ type: Optional }, ]},\n{type: NgbActiveLabel, decorators: [{ type: Optional }, ]},\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input, args: ['value', ] },],\n'checked': [{ type: Input, args: ['checked', ] },],\n'disabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction NgbRadio_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbRadio.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbRadio.ctorParameters;\n/** @type {?} */\nNgbRadio.propDecorators;\n/** @type {?} */\nNgbRadio.prototype._checked;\n/** @type {?} */\nNgbRadio.prototype._disabled;\n/** @type {?} */\nNgbRadio.prototype._value;\n/** @type {?} */\nNgbRadio.prototype._group;\n/** @type {?} */\nNgbRadio.prototype._label;\n/** @type {?} */\nNgbRadio.prototype._renderer;\n/** @type {?} */\nNgbRadio.prototype._element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\nimport {NgbAlertConfig} from './alert-config';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\nexport class NgbAlertModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule, providers: [NgbAlertConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbAlertModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAlertModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAlertModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n/**\n * Alerts can be used to provide feedback messages.\n */\nexport class NgbAlert {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an ×) will be displayed.\n   */\n   dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n   */\n   type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n   close = new EventEmitter();\n/**\n * @param {?} config\n */\nconstructor(config: NgbAlertConfig) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n/**\n * @return {?}\n */\ncloseHandler() { this.close.emit(null); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeHandler()\">\n            <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbAlertConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dismissible': [{ type: Input },],\n'type': [{ type: Input },],\n'close': [{ type: Output },],\n};\n}\n\nfunction NgbAlert_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAlert.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAlert.ctorParameters;\n/** @type {?} */\nNgbAlert.propDecorators;\n/**\n * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n * form of an ×) will be displayed.\n * @type {?}\n */\nNgbAlert.prototype.dismissible;\n/**\n * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n * @type {?}\n */\nNgbAlert.prototype.type;\n/**\n * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n * @type {?}\n */\nNgbAlert.prototype.close;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbAlertConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAlertConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAlertConfig.ctorParameters;\n/** @type {?} */\nNgbAlertConfig.prototype.dismissible;\n/** @type {?} */\nNgbAlertConfig.prototype.type;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nimport {NgbAccordionConfig} from './accordion-config';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst /** @type {?} */ NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\nexport class NgbAccordionModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule, providers: [NgbAccordionConfig]}; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbAccordionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAccordionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAccordionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet /** @type {?} */ nextId = 0;\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\nexport class NgbPanelTitle {\n/**\n * @param {?} templateRef\n */\nconstructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ng-template[ngbPanelTitle]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgbPanelTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPanelTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPanelTitle.ctorParameters;\n/** @type {?} */\nNgbPanelTitle.prototype.templateRef;\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\nexport class NgbPanelContent {\n/**\n * @param {?} templateRef\n */\nconstructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ng-template[ngbPanelContent]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgbPanelContent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPanelContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPanelContent.ctorParameters;\n/** @type {?} */\nNgbPanelContent.prototype.templateRef;\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\nexport class NgbPanel {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n   disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n   id = `ngb-panel-${nextId++}`;\n\n  /**\n   *  The title for the panel.\n   */\n   title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n   */\n   type: string;\n\n   contentTpl: NgbPanelContent;\n   titleTpl: NgbPanelTitle;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'ngb-panel'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'id': [{ type: Input },],\n'title': [{ type: Input },],\n'type': [{ type: Input },],\n'contentTpl': [{ type: ContentChild, args: [NgbPanelContent, ] },],\n'titleTpl': [{ type: ContentChild, args: [NgbPanelTitle, ] },],\n};\n}\n\nfunction NgbPanel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbPanel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbPanel.ctorParameters;\n/** @type {?} */\nNgbPanel.propDecorators;\n/**\n *  A flag determining whether the panel is disabled or not.\n *  When disabled, the panel cannot be toggled.\n * @type {?}\n */\nNgbPanel.prototype.disabled;\n/**\n *  An optional id for the panel. The id should be unique.\n *  If not provided, it will be auto-generated.\n * @type {?}\n */\nNgbPanel.prototype.id;\n/**\n *  The title for the panel.\n * @type {?}\n */\nNgbPanel.prototype.title;\n/**\n *  Accordion's types of panels to be applied per panel basis.\n *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n * @type {?}\n */\nNgbPanel.prototype.type;\n/** @type {?} */\nNgbPanel.prototype.contentTpl;\n/** @type {?} */\nNgbPanel.prototype.titleTpl;\n}\n\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\nexport class NgbAccordion implements AfterContentChecked {\nprivate _states: Map<string, boolean> = new Map<string, boolean>();\nprivate _panelRefs: Map<string, NgbPanel> = new Map<string, NgbPanel>();\n\n   panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n   activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n   closeOtherPanels: boolean;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n   */\n   type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n   panelChange = new EventEmitter<NgbPanelChangeEvent>();\n/**\n * @param {?} config\n */\nconstructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n/**\n * Programmatically toggle a panel with a given id.\n * @param {?} panelId\n * @return {?}\n */\ntoggle(panelId: string) {\n    const /** @type {?} */ panel = this._panelRefs.get(panelId);\n\n    if (panel && !panel.disabled) {\n      const /** @type {?} */ nextState = !this._states.get(panelId);\n      let /** @type {?} */ defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panelId, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this._states.set(panelId, nextState);\n\n        if (this.closeOtherPanels) {\n          this._closeOthers(panelId);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n    this._updateStates();\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n/**\n * \\@internal\n * @param {?} panelId\n * @return {?}\n */\nisOpen(panelId: string): boolean { return this._states.get(panelId); }\n/**\n * @param {?} panelId\n * @return {?}\n */\nprivate _closeOthers(panelId: string) {\n    this._states.forEach((state, id) => {\n      if (id !== panelId) {\n        this._states.set(id, false);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _updateActiveIds() {\n    this.activeIds =\n        this.panels.toArray().filter(panel => this.isOpen(panel.id) && !panel.disabled).map(panel => panel.id);\n  }\n/**\n * @return {?}\n */\nprivate _updateStates() {\n    this._states.clear();\n    this._panelRefs.clear();\n    this.panels.toArray().forEach((panel) => {\n      this._states.set(panel.id, this.activeIds.indexOf(panel.id) > -1 && !panel.disabled);\n      this._panelRefs.set(panel.id, panel);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n  <div class=\"card\">\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div role=\"tab\" id=\"{{panel.id}}-header\"\n        [class]=\"'card-header ' + (panel.type ? 'card-'+panel.type: type ? 'card-'+type : '')\" [class.active]=\"isOpen(panel.id)\">\n        <a href (click)=\"!!toggle(panel.id)\" [class.text-muted]=\"panel.disabled\" [attr.tabindex]=\"(panel.disabled ? '-1' : null)\"\n          [attr.aria-expanded]=\"isOpen(panel.id)\" [attr.aria-controls]=\"(isOpen(panel.id) ? panel.id : null)\"\n          [attr.aria-disabled]=\"panel.disabled\">\n          {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </div>\n      <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\" class=\"card-block\" *ngIf=\"isOpen(panel.id)\">\n        <ng-template [ngTemplateOutlet]=\"panel.contentTpl.templateRef\"></ng-template>\n      </div>\n    </ng-template>\n  </div>\n`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbAccordionConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'panels': [{ type: ContentChildren, args: [NgbPanel, ] },],\n'activeIds': [{ type: Input },],\n'closeOtherPanels': [{ type: Input, args: ['closeOthers', ] },],\n'type': [{ type: Input },],\n'panelChange': [{ type: Output },],\n};\n}\n\nfunction NgbAccordion_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAccordion.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAccordion.ctorParameters;\n/** @type {?} */\nNgbAccordion.propDecorators;\n/**\n * A map that stores each panel state\n * @type {?}\n */\nNgbAccordion.prototype._states;\n/**\n * A map that stores references to all panels\n * @type {?}\n */\nNgbAccordion.prototype._panelRefs;\n/** @type {?} */\nNgbAccordion.prototype.panels;\n/**\n * An array or comma separated strings of panel identifiers that should be opened\n * @type {?}\n */\nNgbAccordion.prototype.activeIds;\n/**\n *  Whether the other panels should be closed when a panel is opened\n * @type {?}\n */\nNgbAccordion.prototype.closeOtherPanels;\n/**\n *  Accordion's types of panels to be applied globally.\n *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n * @type {?}\n */\nNgbAccordion.prototype.type;\n/**\n * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n * @type {?}\n */\nNgbAccordion.prototype.panelChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbAccordionConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAccordionConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAccordionConfig.ctorParameters;\n/** @type {?} */\nNgbAccordionConfig.prototype.closeOthers;\n/** @type {?} */\nNgbAccordionConfig.prototype.type;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n/**\n * @param {?} value\n * @param {?} max\n * @param {?=} min\n * @return {?}\n */\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n"],"names":["Key","nextId","NGB_DATEPICKER_VALUE_ACCESSOR"],"mappings":";;;;;;;;;;;;;;;;AuECA;;;;AAIA,mBALC,KAAA;IAMC,MAAF,CALS,QAAA,CAAS,KAAC,KAAQ,EAAG,EAAA,CAAG,CAAC;AAMlC,CAAC;;;;;AAKD,kBARC,KAAA;IASC,MAAF,CARS,CAAA,KAAE,KAAS,SAAA,IAAa,KAAA,KAAU,IAAA,CAQ3C,GARmD,KAAA,KAAS,GAAI,EAAA,CAAG;AASnE,CAAC;;;;;;;AAOD,yBAbC,KAAA,EAAA,GAAA,EAAA,GAAA;IAAA,oBAAA,EAAA,OAAA;IAcC,MAAF,CAbS,IAAA,CAAK,GAAC,CAAG,IAAC,CAAI,GAAC,CAAG,KAAC,EAAM,GAAA,CAAI,EAAE,GAAA,CAAI,CAAC;AAc7C,CAAC;;;;;AAKD,kBAhBC,KAAA;IAiBC,MAAF,CAhBS,OAAO,KAAA,KAAU,QAAA,CAAS;AAiBnC,CAAC;;;;;AAKD,kBAnBC,KAAA;IAoBC,MAAF,CAnBS,CAAA,KAAE,CAAK,SAAC,CAAS,KAAC,CAAK,CAAC,CAAC;AAoBlC,CAAC;;;;;AAKD,mBAtBC,KAAA;IAuBC,MAAF,CAtBS,OAAO,KAAA,KAAU,QAAA,IAAY,QAAA,CAAS,KAAC,CAAK,IAAI,IAAA,CAAK,KAAC,CAAK,KAAC,CAAK,KAAK,KAAA,CAAM;AAuBrF,CAAC;;;;;AAKD,mBAzBC,KAAA;IA0BC,MAAF,CAzBS,KAAA,KAAU,SAAA,IAAa,KAAA,KAAU,IAAA,CAAK;AA0B/C,CAAC;;;;;AAKD,mBA5BC,KAAA;IA6BC,EAAF,CAAA,CAAM,QA5BC,CAAQ,KAAC,CAAK,CA4BrB,CA5BuB,CA4BvB;QACI,MAAJ,CA5BW,CAAA,MAAA,KAAU,CAAA,CAAE,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;IA6BjC,CAAG;IA5BH,IAAA,CAAS,CAAT;QA6BI,MAAJ,CA5BW,EAAA,CAAG;IA6Bd,CAAG;AACH,CAAC;;;;;AAKD,sBA/BC,IAAA;IAgCC,MAAF,CA/BS,IAAA,CAAK,OAAC,CAAO,0BAAC,EAA2B,MAAA,CAAO,CAAC;AAgC1D,CAAC;ADpED;;;;;AAKA;IAAA;QACE,IAAF,CAAA,WAAa,GAEG,KAAA,CAAM;IAQtB,CAAC;;CAXD;AAKO,kBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADCF,IAAI,MAAA,GAAS,CAAA,CAAE;;;;AAIf;;;;IAIA,uBADqB,WAA6B;QAA7B,IAArB,CAAA,WAAqB,GAAA,WAAA,CAA6B;IAAlD,CAAmD;;CAHnD;AAIO,aAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,4BAAA,EAA6B,EAAC,EAAG;CAErE,CADC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAID,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EALA,CAKA,CAAC;AAGF;;;AAeA;;;;IAIA,yBAjBqB,WAA6B;QAA7B,IAArB,CAAA,WAAqB,GAAA,WAAA,CAA6B;IAAlD,CAAmD;;CAanD;AAZO,eAAP,CAAA,UAAO,GAAoC;IAkB3C,EAjBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,8BAAA,EAA+B,EAAC,EAAG;CAkBvE,CAjBC;;;;AAED,eAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAoBD,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EArBA,CAqBA,CAAC;AAGF;;;;AAgBA;IAAA;;;;;QAKG,IAAH,CAAA,QAAW,GA9BG,KAAA,CAAM;;;;;QAoCjB,IAAH,CAAA,EAAK,GA9BG,eAAA,MAAc,EAAQ,CAAE;IA6DhC,CAAC;;CA1CD;AAJO,QAAP,CAAA,UAAO,GAAoC;IA+B3C,EA9BE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,WAAA,EAAY,EAAC,EAAG;CA+BpD,CA9BC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAiCA,EAjCA,CAiCA,CAAC;AA/BK,QAAP,CAAA,cAAO,GAAyD;IAiChE,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC7B,IAAI,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiCvB,OAAO,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC1B,MAAM,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiCzB,YAAY,EAhCE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,eAAE,EAAe,EAAG,EAAE;IAiCjE,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE;CAiC5D,CAhCC;AAmCF;;;;AA+DA;;;;IA6BA,sBAjEG,MAAmB;QA9BZ,IAAV,CAAA,OAAU,GAAgC,IAAI,GAAA,EAAoB,CAAG;QAK3D,IAAV,CAAA,UAAU,GAAoC,IAAI,GAAA,EAAqB,CAAG;;;;QAsEvE,IAAH,CAAA,SAAY,GA/DsB,EAAA,CAAG;;;;QA+ElC,IAAH,CAAA,WAAc,GA/DG,IAAI,YAAA,EAAiC,CAAG;QAoErD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,WAAW,CAAC;IAC/C,CAAG;;;;;;IAMH,6BAlEG,GAkEH,UAlEG,OAAA;QAmEC,IAAJ,gBAAA,CAlEU,KAAA,GAAQ,IAAA,CAAK,UAAC,CAAU,GAAC,CAAG,OAAC,CAAO,CAAC;QAoE3C,EAAJ,CAAA,CAAQ,KAlEC,IAAQ,CAAA,KAAE,CAAK,QAAC,CAkEzB,CAlEkC,CAkElC;YACM,IAAN,gBAAA,CAlEY,SAAA,GAAY,CAAA,IAAE,CAAI,OAAC,CAAO,GAAC,CAAG,OAAC,CAAO,CAAC;YAmE7C,IAAN,gBAAA,CAlEU,kBAAA,GAAmB,KAAA,CAAM;YAoE7B,IAAI,CAlEC,WAAC,CAAW,IAAC,CAmEd,EAAC,OAlEC,EAAQ,OAAA,EAAS,SAAA,EAAW,SAAA,EAAW,cAAA,EAAgB,cAAQ,kBAAA,GAAmB,IAAA,CAAK,CAiEnG,CAjEoG,EAAE,CAAC,CAAC;YAoElG,EAAN,CAAA,CAAU,CAlEC,kBAAC,CAkEZ,CAlE6B,CAkE7B;gBACQ,IAAI,CAlEC,OAAC,CAAO,GAAC,CAAG,OAAC,EAAQ,SAAA,CAAU,CAAC;gBAoErC,EAAR,CAAA,CAAY,IAlEC,CAAI,gBAAC,CAkElB,CAlEmC,CAkEnC;oBACU,IAAI,CAlEC,YAAC,CAAY,OAAC,CAAO,CAAC;gBAmErC,CAAS;gBACD,IAAI,CAlEC,gBAAC,EAAgB,CAAE;YAmEhC,CAAO;QACP,CAAK;IACL,CAAG;;;;IAIH,4CApEG,GAoEH;;QAEI,EAAJ,CAAA,CAAQ,QApEC,CAAQ,IAAC,CAAI,SAAC,CAAS,CAoEhC,CApEkC,CAoElC;YACM,IAAI,CApEC,SAAC,GAAW,IAAA,CAAK,SAAC,CAAS,KAAC,CAAK,SAAC,CAAS,CAAC;QAqEvD,CAAK;QACD,IAAI,CApEC,aAAC,EAAa,CAAE;;QAuErB,EAAJ,CAAA,CAAQ,IApEC,CAAI,SAAC,CAAS,MAAC,GAAQ,CAAA,IAAK,IAAA,CAAK,gBAAC,CAoE3C,CApE4D,CAoE5D;YACM,IAAI,CApEC,YAAC,CAAY,IAAC,CAAI,SAAC,CAAS,CAAC,CAAC,CAAC,CAAC;YAqErC,IAAI,CApEC,gBAAC,EAAgB,CAAE;QAqE9B,CAAK;IACL,CAAG;;;;;;IAMH,6BArEG,GAqEH,UArEG,OAAA,IAAkC,MAqErC,CArE4C,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,OAAC,CAAO,CAAC,CAqEtE,CArEuE;;;;;IAEpE,mCAAA,GAAA,UAAA,OAAA;QAAA,iBA8EA;QALC,IAAI,CAxEC,OAAC,CAAO,OAAC,CAAO,UAAC,KAAC,EAAM,EAAA;YAyE3B,EAAN,CAAA,CAAU,EAxEC,KAAM,OAAA,CAwEjB,CAxE0B,CAwE1B;gBACQ,KAAI,CAxEC,OAAC,CAAO,GAAC,CAAG,EAAC,EAAG,KAAA,CAAM,CAAC;YAyEpC,CAAO;QACP,CAAK,CAxEC,CAAC;IAyEP,CAAG;;;;IAtEA,uCAAA,GAAA;QAAA,iBA6EA;QAFC,IAAI,CA1EC,SAAC;YA2EF,IAAI,CA1EC,MAAC,CAAM,OAAC,EAAO,CAAE,MAAC,CAAM,UAAA,KAAC,IAAQ,OAAA,KAAA,CAAK,MAAC,CAAM,KAAC,CAAK,EAAC,CAAE,IAAI,CAAA,KAAE,CAAK,QAAC,EAAjC,CAAiC,CAAQ,CAAC,GAAC,CAAG,UAAA,KAAC,IAAQ,OAAA,KAAA,CAAM,EAAC,EAAP,CAAO,CAAE,CAAC;IA2E/G,CAAG;;;;IAxEA,oCAAA,GAAA;QAAA,iBAmFA;QANC,IAAI,CA5EC,OAAC,CAAO,KAAC,EAAK,CAAE;QA6ErB,IAAI,CA5EC,UAAC,CAAU,KAAC,EAAK,CAAE;QA6ExB,IAAI,CA5EC,MAAC,CAAM,OAAC,EAAO,CAAE,OAAC,CAAO,UAAC,KAAC;YA6E9B,KAAI,CA5EC,OAAC,CAAO,GAAC,CAAG,KAAC,CAAK,EAAC,EAAG,KAAA,CAAK,SAAC,CAAS,OAAC,CAAO,KAAC,CAAK,EAAC,CAAE,GAAG,CAAA,CAAE,IAAI,CAAA,KAAE,CAAK,QAAC,CAAQ,CAAC;YA6ErF,KAAI,CA5EC,UAAC,CAAU,GAAC,CAAG,KAAC,CAAK,EAAC,EAAG,KAAA,CAAM,CAAC;QA6E3C,CAAK,CA5EC,CAAC;IA6EP,CAAG;;CA5GH;AAiCO,YAAP,CAAA,UAAO,GAAoC;IA6E3C,EA5EE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA6EvB,QAAQ,EA5EE,eAAA;gBA6EV,QAAQ,EA5EE,cAAA;gBA6EV,IAAI,EA5EE,EAAA,MAAE,EAAO,SAAA,EAAW,6BAAA,EAA+B,mBAAA,EAAoB;gBA6E7E,QAAQ,EA5EE,49BA4FX;aACA,EA5EC,EAAG;CA6EJ,CA5EC;;;;AAED,YAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA+ED,EAAC,IAAI,EAAE,kBAAkB,GAAG;CAC3B,EAhFA,CAgFA,CAAC;AA7EK,YAAP,CAAA,cAAO,GAAyD;IA+EhE,QAAQ,EA9EE,CAAA,EAAG,IAAA,EAAM,eAAA,EAAiB,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;IA+EzD,WAAW,EA9EE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+E9B,kBAAkB,EA9EE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE;IA+E9D,MAAM,EA9EE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+EzB,aAAa,EA9EE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CA+EhC,CA9EC;ADzPF,IAAM,wBAAA,GAA2B,CAAA,YAAE,EAAa,QAAA,EAAU,aAAA,EAAe,eAAA,CAAgB,CAAC;AAC1F;IAAA;;;;;IAGG,0BAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,kBAAA,EAAoB,SAAA,EAAW,CAAA,kBAAE,CAAkB,EAAC,CAAC,CACjH,CADkH;;CAHlH;AAIO,kBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,wBAAA,EAA0B,OAAA,EAAS,wBAAA,EAA0B,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAEhI,CADC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADrBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,WAAa,GAEG,IAAA,CAAK;QADnB,IAAF,CAAA,IAAM,GAEG,SAAA,CAAU;IAOnB,CAAC;;CAXD;AAKO,cAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADPF;;;AAGA;;;;IAiBA,kBAAG,MAAmB;;;;QAJnB,IAAH,CAAA,KAAQ,GAEG,IAAI,YAAA,EAAa,CAAE;QAG1B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAG;;;;IAIH,+BAFG,GAEH,cAFmB,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,CAAC,CAEzC,CAF0C;;CAtB1C;AAuBO,QAAP,CAAA,UAAO,GAAoC;IAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAGvB,QAAQ,EAFE,WAAA;gBAGV,eAAe,EAFE,uBAAA,CAAwB,MAAC;gBAG1C,QAAQ,EAFE,2VASP;aACJ,EAFC,EAAG;CAGJ,CAFC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAKD,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,EANA,CAMA,CAAC;AAHK,QAAP,CAAA,cAAO,GAAyD;IAKhE,aAZE,EAQa,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAKhC,MAAM,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAKzB,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAK1B,CAJC;ADjDF;IAAA;;;;;IAGG,sBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,cAAA,EAAgB,SAAA,EAAW,CAAA,cAAE,CAAc,EAAC,CAAC,CACzG,CAD0G;;CAH1G;AAIO,cAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,QAAE,CAAQ,EAAE,OAAA,EAAS,CAAA,QAAE,CAAQ,EAAE,OAAA,EAAS,CAAA,YAAE,CAAY,EAAE,eAAA,EAAiB,CAAA,QAAE,CAAQ,EAAC,EAAC,EAAG;CAEjI,CADC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADjBF,IAAM,wBAAA,GAA2B;IAC/B,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,aAAA,EAAA,CAAA,CAAc;IAC5C,KAAK,EAAE,IAAA;CACR,CAAC;;;;;AAKF;IAAA;QAGU,IAAV,CAAA,OAAU,GAAyB,IAAI,GAAA,EAAa,CAAG;QAC7C,IAAV,CAAA,MAAU,GAAS,IAAA,CAAK;QAUtB,IAAF,CAAA,QAAU,GAJG,UAAA,CAAI,IAIjB,CAJyB,CAAG;QAK1B,IAAF,CAAA,SAAW,GAJG,cAId,CAJoB,CAAG;IAyEvB,CAAC;IA7ED,sBAAG,mCAAA;;;;aAAH,cAAmB,MAAnB,CAA0B,IAAA,CAAK,SAAC,CAAS,CAAzC,CAA0C;;;;;aAK1C,UAJG,UAAA,IAAmC,IAAA,CAAK,gBAAC,CAAgB,UAAC,CAAU,CAAC,CAIxE,CAJyE;;;OAD/B;;;;;IAa1C,qCAPG,GAOH,UAPG,KAAA;QAQC,IAAI,CAPC,UAAC,CAAU,KAAC,CAAK,KAAC,CAAK,CAAC;QAQ7B,IAAI,CAPC,QAAC,CAAQ,KAAC,CAAK,KAAC,CAAK,CAAC;IAQ/B,CAAG;;;;IAIH,0CATG,GASH,cATyB,IAAA,CAAK,kBAAC,EAAkB,CAAE,CASnD,CAToD;;;;;IAcpD,gCAZG,GAYH,UAZG,KAAA,IAA2B,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,KAAC,CAAK,CAAC,CAYtD,CAZuD;;;;;IAiBvD,wCAfG,GAeH,UAfG,EAAA,IAAiD,IAAA,CAAK,QAAC,GAAU,EAAA,CAAG,CAevE,CAfwE;;;;;IAoBxE,yCAlBG,GAkBH,UAlBG,EAAA,IAAwC,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAkB/D,CAlBgE;;;;;IAuBhE,wCArBG,GAqBH,UArBG,UAAA;QAsBC,IAAI,CArBC,SAAC,GAAW,UAAA,CAAW;QAsB5B,IAAI,CArBC,qBAAC,EAAqB,CAAE;IAsBjC,CAAG;;;;;IAKH,kCAxBG,GAwBH,UAxBG,KAAA,IAA6B,IAAA,CAAK,OAAC,CAAO,MAAC,CAAM,KAAC,CAAK,CAAC,CAwB3D,CAxB4D;;;;;IA6B5D,kCA3BG,GA2BH,UA3BG,KAAA;QA4BC,IAAI,CA3BC,MAAC,GAAQ,KAAA,CAAM;QA4BpB,IAAI,CA3BC,kBAAC,EAAkB,CAAE;IA4B9B,CAAG;;;;IAzBA,0CAAA,GAAA;QAAA,iBAA+F;QAAjE,IAAA,CAAK,OAAC,CAAO,OAAC,CAAO,UAAC,KAAC,IAAS,OAAA,KAAA,CAAM,WAAC,CAAW,KAAC,CAAI,MAAC,CAAM,EAA9B,CAA8B,CAAC,CAAC;IAAjG,CAAkG;;;;IAC/F,6CAAA,GAAA,cAAiC,IAAA,CAAK,OAAC,CAAO,OAAC,CAAO,UAAC,KAAC,IAAS,OAAA,KAAA,CAAM,cAAC,EAAc,EAArB,CAAqB,CAAE,CAAC,CAA5F,CAA6F;;CAvC7F;AAwCO,aAAP,CAAA,UAAO,GAAoC;IAiC3C,EAhCE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAiCvB,QAAQ,EAhCE,iBAAA;gBAiCV,IAAI,EAhCE,EAAA,aAAE,EAAc,SAAA,EAAW,OAAA,EAAS,WAAA,EAAa,MAAA,EAAQ,OAAA,EAAQ;gBAiCvE,SAAS,EAhCE,CAAA,wBAAE,CAAwB;aAiCtC,EAhCC,EAAG;CAiCJ,CAhCC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAmCA,EAnCA,CAmCA,CAAC;AAGF;;;;;IAyBA,wBAxDsB,SAAW,EAAmB,MAAQ;QAAtC,IAAtB,CAAA,SAAsB,GAAA,SAAA,CAAW;QAAmB,IAApD,CAAA,MAAoD,GAAA,MAAA,CAAQ;IAA5D,CAAuE;IA8DvE,sBA5DG,kCAAA;;;;;aA4DH,UA5DG,QAAA;YA6DC,EAAJ,CAAA,CAAQ,QA5DC,CA4DT,CA5DkB,CA4DlB;gBACM,IAAI,CA5DC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,QAAA,CAAS,CAAC;YA6DnE,CAAK;YA5DL,IAAA,CAAW,CAAX;gBA6DM,IAAI,CA5DC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,QAAA,CAAS,CAAC;YA6DtE,CAAK;QACL,CAAG;;;OAAA;IAKH,sBA/DG,oCAAA;;;;;aA+DH,UA/DG,UAAA;YAgEC,EAAJ,CAAA,CAAQ,UA/DC,CA+DT,CA/DoB,CA+DpB;gBACM,IAAI,CA/DC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,UAAA,CAAW,CAAC;YAgErE,CAAK;YA/DL,IAAA,CAAW,CAAX;gBAgEM,IAAI,CA/DC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,UAAA,CAAW,CAAC;YAgExE,CAAK;QACL,CAAG;;;OAAA;IAKH,sBAlEG,mCAAA;;;;;aAkEH,UAlEG,SAAA;YAmEC,EAAJ,CAAA,CAAQ,SAlEC,CAkET,CAlEmB,CAkEnB;gBACM,IAAI,CAlEC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,OAAA,CAAQ,CAAC;YAmElE,CAAK;YAlEL,IAAA,CAAW,CAAX;gBAmEM,IAAI,CAlEC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,OAAA,CAAQ,CAAC;YAmErE,CAAK;QACL,CAAG;;;OAAA;;CA3DH;AANO,cAAP,CAAA,UAAO,GAAoC;IAmE3C,EAlEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,WAAA,EAAY,EAAC,EAAG;CAmEpD,CAlEC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAqED,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAvEA,CAuEA,CAAC;AAGF;;;AAiBA;;;;;;;IA8DA,kBA7Fe,MAAQ,EAAwB,MAAQ,EACzC,SAAW,EAAmB,QAAU;QADvC,IAAf,CAAA,MAAe,GAAA,MAAA,CAAQ;QAAwB,IAA/C,CAAA,MAA+C,GAAA,MAAA,CAAQ;QACzC,IAAd,CAAA,SAAc,GAAA,SAAA,CAAW;QAAmB,IAA5C,CAAA,QAA4C,GAAA,QAAA,CAAU;QA/C5C,IAAV,CAAA,MAAU,GAAc,IAAA,CAAK;QAgJzB,EAAJ,CAAA,CAAQ,IAAI,CAAC,MAAM,CAAnB,CAAqB,CAArB;YACM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjC,CAAK;IACL,CAAG;IA7DH,sBAhFG,2BAAA;;;;aAsHH,cArFgB,MAqFhB,CArFuB,IAAA,CAAK,MAAC,CAAM,CAqFnC,CArFoC;;;;;;aA+CpC,UAhFG,KAAA;YAiFC,IAAI,CAhFC,MAAC,GAAQ,KAAA,CAAM;YAiFpB,IAAJ,gBAAA,CAhFU,WAAA,GAAc,KAAA,GAAQ,KAAA,CAAM,QAAC,EAAQ,GAAI,EAAA,CAAG;YAiFlD,IAAI,CAhFC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,QAAC,CAAQ,aAAC,EAAc,OAAA,EAAS,WAAA,CAAY,CAAC;YAkF9E,EAAJ,CAAA,CAAQ,IAhFC,CAAI,MAAC,CAgFd,CAhFqB,CAgFrB;gBACM,IAAI,CAhFC,MAAC,CAAM,kBAAC,EAAkB,CAAE;YAiFvC,CAAK;QACL,CAAG;;;OAAA;IAMH,sBAhFG,6BAAA;;;;aA4GH,cAvFkB,MAuFlB,CAvFyB,IAAA,CAAK,QAAC,CAAQ,CAuFvC,CAvFwC;;;;;;aA2DxC,UAhFG,KAAA;YAiFC,IAAI,CAhFC,QAAC,GAAU,IAAA,CAAK,QAAC,CAAQ,aAAC,CAAa,YAAC,CAAY,SAAC,CAAS,GAAG,IAAA,GAAO,KAAA,CAAM;QAiFvF,CAAG;;;OAAA;IAMH,sBAhFG,8BAAA;;;;aAwGH,cAzFmB,MAyFnB,CAzF0B,CAAA,IAAE,CAAI,MAAC,IAAS,IAAA,CAAK,MAAC,CAAM,QAAC,CAyFvD,IAzFmE,IAAA,CAAK,SAAC,CAAS,CAyFlF,CAzFmF;;;;;;aAiEnF,UAhFG,UAAA;YAiFC,IAAI,CAhFC,SAAC,GAAW,UAAA,KAAe,KAAA,CAAM;YAiFtC,IAAI,CAhFC,cAAC,EAAc,CAAE;QAiF1B,CAAG;;;OAAA;IAKH,sBAnFG,6BAAA;;;;;aAmFH,UAnFG,SAAA;YAoFC,EAAJ,CAAA,CAAQ,IAnFC,CAAI,MAAC,CAmFd,CAnFqB,CAmFrB;gBACM,IAAI,CAnFC,MAAC,CAAM,OAAC,GAAS,SAAA,CAAU;YAoFtC,CAAK;QACL,CAAG;;;OAAA;;;;IA+BH,8BAlGG,GAkGH;QACI,EAAJ,CAAA,CAAQ,IAlGC,CAAI,MAAC,CAkGd,CAlGqB,CAkGrB;YACM,IAAI,CAlGC,MAAC,CAAM,UAAC,CAAU,IAAC,CAAI,CAAC;QAmGnC,CAAK;IACL,CAAG;;;;IAIH,2BApGG,GAoGH;QACI,EAAJ,CAAA,CAAQ,IApGC,CAAI,MAAC,CAoGd,CApGqB,CAoGrB;YACM,IAAI,CApGC,MAAC,CAAM,aAAC,CAAa,IAAC,CAAI,CAAC;QAqGtC,CAAK;IACL,CAAG;;;;;IAKH,8BAvGG,GAuGH,UAvGG,KAAA;QAwGC,IAAI,CAvGC,QAAC,GAuGV,CAvGoB,IAAE,CAAI,KAAC,KAAS,KAAA,IAAS,KAAA,KAAU,IAAA,CAAK,CAAC;QAwGzD,IAAI,CAvGC,MAAC,CAAM,MAAC,GAAQ,IAAA,CAAK,QAAC,CAAQ;IAwGvC,CAAG;;;;IAIH,iCAzGG,GAyGH;QACI,IAAJ,gBAAA,CAzGQ,QAAA,GAAW,CAAA,IAAE,CAAI,MAAC,IAAS,IAAA,CAAK,MAAC,CAAM,QAAC,CAyGhD,IAzG4D,IAAA,CAAK,SAAC,CAAS;QA0GvE,EAAJ,CAAA,CAAQ,IAzGC,CAAI,MAAC,CAyGd,CAzGqB,CAyGrB;YACM,IAAI,CAzGC,MAAC,CAAM,QAAC,GAAU,QAAA,CAAS;QA0GtC,CAAK;IACL,CAAG;;CAvGH;AADO,QAAP,CAAA,UAAO,GAAoC;IA0G3C,EAzGE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA0GvB,QAAQ,EAzGE,mBAAA;gBA0GV,IAAI,EAzGE;oBA0GJ,WAAW,EAzGE,SAAA;oBA0Gb,YAAY,EAzGE,UAAA;oBA0Gd,UAAU,EAzGE,YAAA;oBA0GZ,SAAS,EAzGE,gBAAA;oBA0GX,QAAQ,EAzGE,iBAAA;iBA0GX;aACF,EAzGC,EAAG;CA0GJ,CAzGC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA4GD,EAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;IACzD,EAAC,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;IAC1D,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAhHA,CAgHA,CAAC;AA1GK,QAAP,CAAA,cAAO,GAAyD;IA4GhE,OAAO,EA3GE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;IA4G7C,SAAS,EA3GE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,SAAE,EAAS,EAAG,EAAE;IA4GjD,UAAU,EA3GE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,UAAE,EAAU,EAAG,EAAE;CA4GlD,CA3GC;AD5MF,IAAM,oBAAA,GAAuB,CAAA,QAAE,EAAS,cAAA,EAAgB,aAAA,CAAc,CAAC;AACvE;IAAA;;;;;IAGG,wBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,gBAAA,EAAkB,SAAA,EAAW,EAAA,EAAG,CAAC,CAC7F,CAD8F;;CAH9F;AAIO,gBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,oBAAA,EAAsB,OAAA,EAAS,oBAAA,EAAqB,EAAC,EAAG;CAE/F,CADC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADjBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,QAAU,GAEG,IAAA,CAAK;QADhB,IAAF,CAAA,IAAM,GAEG,IAAA,CAAK;QADZ,IAAF,CAAA,QAAU,GAEG,IAAA,CAAK;IAOlB,CAAC;;CAZD;AAMO,iBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADFF,IAAIC,QAAA,GAAS,CAAA,CAAE;;;;AAIf;;;;IASA,kBADqB,MAAwB;QAAxB,IAArB,CAAA,MAAqB,GAAA,MAAA,CAAwB;;;;;QAH1C,IAAH,CAAA,EAAK,GAEG,eAAAA,QAAc,EAAQ,CAAE;IAChC,CAA8C;;CAR9C;AASO,QAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,uBAAA,EAAwB,EAAC,EAAG;CAEhE,CADC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAID,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EALA,CAKA,CAAC;AAFK,QAAP,CAAA,cAAO,GAAyD;IAIhE,IAAI,EAHE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAItB,CAHC;AAMF;;;AAuBA;;;;IAiCA,qBAxBG,MAAmB;;;;;QAoBnB,IAAH,CAAA,KAAQ,GAtBG,IAAI,YAAA,EAA2B,CAAG;QA2BzC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IACpC,CAAG;;;;IAIH,2CA1BG,GA0BH;QACI,IAAJ,gBAAA,CA1BQ,WAAA,GAAc,IAAA,CAAK,aAAC,CAAa,IAAC,CAAI,QAAC,CAAQ,CAAC;QA2BpD,IAAI,CA1BC,QAAC,GAAU,WAAA,GAAc,WAAA,CAAY,EAAC,GA0B/C,CA1BmD,IAAE,CAAI,MAAC,CAAM,MAAC,GAAQ,IAAA,CAAK,MAAC,CAAM,KAAC,CAAK,EAAC,GAAI,IAAA,CAAK,CAAC;IA2BtG,CAAG;;;;IAIH,8BA5BG,GA4BH,cA5Be,IAAA,CAAK,WAAC,EAAW,CAAE,CA4BlC,CA5BmC;;;;IAgCnC,iCA9BG,GA8BH,cA9BkB,aAAA,CAAc,IAAC,CAAI,oBAAC,CAAoB,CAAC,CA8B3D,CA9B4D;;;;;;IAoC5D,4BA/BG,GA+BH,UA/BG,OAAA;QAgCC,IAAI,CA/BC,eAAC,CAAe,OAAC,EAAQ,IAAA,CAAK,uBAAC,CAAuB,IAAC,CAAI,QAAC,EAAS,OAAA,CAAQ,CAAC,CAAC;QAgCpF,IAAI,CA/BC,aAAC,EAAa,CAAE;IAgCzB,CAAG;;;;;IAKH,0BA/BG,GA+BH;QACI,IAAI,CA/BC,WAAC,EAAW,CAAE;QAgCnB,IAAI,CA/BC,aAAC,EAAa,CAAE;IAgCzB,CAAG;;;;;IAKH,0BA/BG,GA+BH;QACI,IAAI,CA/BC,WAAC,EAAW,CAAE;QAgCnB,IAAI,CA/BC,aAAC,EAAa,CAAE;IAgCzB,CAAG;;;;;IAKH,2BA/BG,GA+BH,cA/BY,IAAA,CAAK,UAAC,EAAU,CAAE,CA+B9B,CA/B+B;;;;;IAoC/B,2BA/BG,GA+BH,cA/BY,IAAA,CAAK,WAAC,EAAW,CAAE,CA+B/B,CA/BgC;;;;IAmChC,iCAjCG,GAiCH,cAjCkB,IAAA,CAAK,eAAC,CAAe,IAAC,CAAI,aAAC,CAAa,IAAC,CAAI,QAAC,CAAQ,EAAE,sBAAA,CAAuB,IAAC,CAAI,CAAC,CAiCvG,CAjCwG;;;;IAqCxG,iCAnCG,GAmCH,cAnCkB,IAAA,CAAK,eAAC,CAAe,IAAC,CAAI,aAAC,CAAa,IAAC,CAAI,QAAC,CAAQ,EAAE,sBAAA,CAAuB,KAAC,CAAK,CAAC,CAmCxG,CAnCyG;;;;;;IAyCzG,qCAvCG,GAuCH,UAvCG,QAAA,EAAA,SAAA;QAwCC,IAAJ,gBAAA,CAvCQ,aAAA,GAAgB,IAAA,CAAK,aAAC,CAAa,QAAC,CAAQ,CAAC;QAwCjD,EAAJ,CAAA,CAAQ,aAvCC,CAuCT,CAvCuB,CAuCvB;YACM,EAAN,CAAA,CAAU,aAvCC,CAAa,EAAC,KAAM,IAAA,CAAK,QAAC,CAuCrC,CAvC8C,CAuC9C;gBACQ,IAAI,CAvCC,KAAC,CAAK,IAAC,CAAI,EAAC,IAAC,EAAK,IAAA,CAAK,QAAC,EAAS,OAAA,EAAS,aAAA,CAAc,EAAC,EAAG,SAAA,EAAW,SAAA,EAAU,CAAC,CAAC;YAwChG,CAAO;YACD,IAAI,CAvCC,QAAC,GAAU,aAAA,CAAc,EAAC,CAAE;QAwCvC,CAAK;IACL,CAAG;;;;IAIH,6BAzCG,GAyCH;QACI,EAAJ,CAAA,CAAQ,IAzCC,CAAI,QAAC,CAyCd,CAzCuB,CAyCvB;YACM,IAAI,CAzCC,IAAC,EAAI,CAAE;QA0ClB,CAAK;IACL,CAAG;;;;IAIH,6BA3CG,GA2CH;QACI,EAAJ,CAAA,CAAQ,IA3CC,CAAI,QAAC,CA2Cd,CA3CuB,CA2CvB;YACM,IAAI,CA3CC,IAAC,EAAI,CAAE;QA4ClB,CAAK;IACL,CAAG;;;;IAzCA,mCAAA,GAAA;QA8CC,IAAI,CA7CC,UAAC,EAAU,CAAE;QA8ClB,IAAI,CA7CC,WAAC,EAAW,CAAE;IA8CvB,CAAG;;;;IA3CA,iCAAA,GAAA;QAAA,iBAmDA;QAHC,EAAJ,CAAA,CAAQ,IA/CC,CAAI,QAAC,GAAU,CAAA,CA+CxB,CA/C2B,CA+C3B;YACM,IAAI,CA/CC,oBAAC,GAAsB,WAAA,CAAY,cAAQ,KAAA,CAAK,WAAC,EAAW,CAAE,CA+CzE,CA/C0E,EAAG,IAAA,CAAK,QAAC,CAAQ,CAAC;QAgD5F,CAAK;IACL,CAAG;;;;IA7CA,gCAAA,GAAA,cAAsB,aAAA,CAAc,IAAC,CAAI,oBAAC,CAAoB,CAAC,CAAlE,CAAmE;;;;;IAEhE,mCAAA,GAAA,UAAA,OAAA;QAqDC,IAAJ,gBAAA,CApDQ,WAAA,GAA0B,IAAA,CAAK,MAAC,CAAM,MAAC,CAAM,UAAA,KAAC,IAAQ,OAAA,KAAA,CAAM,EAAC,KAAM,OAAA,EAAb,CAAa,CAAQ,CAAC;QAqDhF,MAAJ,CApDW,WAAA,CAAY,MAAC,GAAQ,WAAA,CAAY,CAAC,CAAC,GAAG,IAAA,CAAK;IAqDtD,CAAG;;;;;IAlDA,sCAAA,GAAA,UAAA,OAAA;QAwDC,MAAJ,CAvDW,IAAA,CAAK,MAAC,CAAM,OAAC,EAAO,CAAE,OAAC,CAAO,IAAC,CAAI,aAAC,CAAa,OAAC,CAAO,CAAC,CAAC;IAwDtE,CAAG;;;;;IArDA,mCAAA,GAAA,UAAA,cAAA;QA2DC,IAAJ,gBAAA,CA1DU,QAAA,GAAW,IAAA,CAAK,MAAC,CAAM,OAAC,EAAO,CAAE;QA2DvC,IAAJ,gBAAA,CA1DU,eAAA,GAAkB,IAAA,CAAK,gBAAC,CAAgB,cAAC,CAAc,CAAC;QA2D9D,IAAJ,gBAAA,CA1DU,WAAA,GAAc,eAAA,KAAoB,QAAA,CAAS,MAAC,GAAQ,CAAA,CAAE;QA4D5D,MAAJ,CA1DW,WAAA,GA0DX,CA1DyB,IAAE,CAAI,IAAC,GAAM,QAAA,CAAS,CAAC,CAAC,CAAC,EAAC,GAAI,QAAA,CAAS,QAAC,CAAQ,MAAC,GAAQ,CAAA,CAAE,CAAC,EAAC,CA0DtF;YACyB,QAAQ,CA1DC,eAAC,GAAiB,CAAA,CAAE,CAAC,EAAC,CAAE;IA2D1D,CAAG;;;;;IAxDA,mCAAA,GAAA,UAAA,cAAA;QA8DC,IAAJ,gBAAA,CA7DU,QAAA,GAAW,IAAA,CAAK,MAAC,CAAM,OAAC,EAAO,CAAE;QA8DvC,IAAJ,gBAAA,CA7DU,eAAA,GAAkB,IAAA,CAAK,gBAAC,CAAgB,cAAC,CAAc,CAAC;QA8D9D,IAAJ,gBAAA,CA7DU,YAAA,GAAe,eAAA,KAAoB,CAAA,CAAE;QA+D3C,MAAJ,CA7DW,YAAA,GA6DX,CA7D0B,IAAE,CAAI,IAAC,GAAM,QAAA,CAAS,QAAC,CAAQ,MAAC,GAAQ,CAAA,CAAE,CAAC,EAAC,GAAI,QAAA,CAAS,CAAC,CAAC,CAAC,EAAC,CA6DvF;YAC0B,QAAQ,CA7DC,eAAC,GAAiB,CAAA,CAAE,CAAC,EAAC,CAAE;IA8D3D,CAAG;;;;;;IA3DA,6CAAA,GAAA,UAAA,oBAAA,EAAA,iBAAA;QAkEC,IAAJ,gBAAA,CAjEU,qBAAA,GAAwB,IAAA,CAAK,gBAAC,CAAgB,oBAAC,CAAoB,CAAC;QAkE1E,IAAJ,gBAAA,CAjEU,kBAAA,GAAqB,IAAA,CAAK,gBAAC,CAAgB,iBAAC,CAAiB,CAAC;QAmEpE,MAAJ,CAjEW,qBAAA,GAAwB,kBAAA,GAAqB,sBAAA,CAAuB,KAAC,GAAO,sBAAA,CAAuB,IAAC,CAAI;IAkEnH,CAAG;;CAlMH;AAkIO,WAAP,CAAA,UAAO,GAAoC;IAkE3C,EAjEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAkEvB,QAAQ,EAjEE,cAAA;gBAkEV,QAAQ,EAjEE,aAAA;gBAkEV,IAAI,EAjEE;oBAkEJ,OAAO,EAjEE,gBAAA;oBAkET,iBAzBQ,EAxCW,SAAA;oBAkEnB,UAzBU,EAxCE,GAAA;oBAkEZ,cAzBY,EAxCI,SAAA;oBAyClB,cAAA,EAxCkB,SAAA;oBAkEhB,qBAAqB,EAjEE,WAAA;oBAkEvB,sBAzBS,EAxCe,WAAA;iBAkEzB;gBACD,QAAQ,EAjEE,s7BAmFP;aACJ,EAjEC,EAAG;CAkEJ,CAjEC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAoED,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EArEA,CAqEA,CAAC;AAlEK,WAAP,CAAA,cAAO,GAAyD;IAoEhE,QAAQ,EAnEE,CAAA,EAAG,IAAA,EAAM,eAAA,EAAiB,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;IAoEzD,UAAU,EAnEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoE7B,MAAM,EAnEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoEzB,UAAU,EAnEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoE7B,UAAU,EAnEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoE7B,OAAO,EAnEE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAoE1B,CAnEC;AAsEF,IA+DW,sBAAsB,GAAQ,EAAE,CAAC;AAC5C,sBAAsB,CAAC,IAAI,GAA3B,CApIc,MAAC,CAAA,CAAA;AAqIf,sBAAsB,CAAC,KAAK,GAA5B,CApIe,OAAC,CAAA,CAAA;AAqIhB,sBAAsB,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC7D,sBAAsB,CAAC,sBAAsB,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AAG/D,IAtIa,uBAAA,GAA0B,CAAA,WAAE,EAAY,QAAA,CAAS,CAsI9D;ADrXA;IAAA;;;;;IAGG,yBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,iBAAA,EAAmB,SAAA,EAAW,CAAA,iBAAE,CAAiB,EAAC,CAAC,CAC/G,CADgH;;CAHhH;AAIO,iBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,uBAAA,EAAyB,OAAA,EAAS,uBAAA,EAAyB,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAE9H,CADC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADnBF;;;AAGA;IAAA;;;;QAIG,IAAH,CAAA,SAAY,GAEG,KAAA,CAAM;IAcrB,CAAC;;CApBD;AAOO,WAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBADvB,QAAQ,EAEE,eAAA;gBADV,QAAQ,EAEE,aAAA;gBADV,IAAI,EAEE,EAAA,kBAAE,EAAmB,MAAA,EAAQ,cAAA,EAAgB,YAAA,EAAa;aADjE,EAEC,EAAG;CADJ,CAEC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;AACK,WAAP,CAAA,cAAO,GAAyD;IAChE,WAAW,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE;CACtD,CAAC;ADnBF;IAAA;;;;;IAGG,yBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,iBAAA,EAAmB,SAAA,EAAW,EAAA,EAAG,CAAC,CAC9F,CAD+F;;CAH/F;AAIO,iBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,WAAE,CAAW,EAAE,OAAA,EAAS,CAAA,WAAE,CAAW,EAAC,EAAC,EAAG;CAEjF,CADC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADfF;;;;;;IAaA,iBATqB,IAAM,EAAe,KAAO,EAAe,GAAK;QAAhD,IAArB,CAAA,IAAqB,GAAA,IAAA,CAAM;QAAe,IAA1C,CAAA,KAA0C,GAAA,KAAA,CAAO;QAAe,IAAhE,CAAA,GAAgE,GAAA,GAAA,CAAK;IAArE,CAA4E;;;;;IAJzE,YAAA,GAKH,UALG,IAAA;QAMC,MAAJ,CALW,IAAA,GAAO,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,EAAM,IAAA,CAAK,GAAC,GAAK,IAAA,CAAK,GAAC,GAAK,CAAA,CAAE,GAAG,IAAA,CAAK;IAMrF,CAAG;;;;;IAaH,wBAdG,GAcH,UAdG,KAAA;QAeC,MAAJ,CAdW,KAAA,IAAS,IAAA,CAAK,IAAC,KAAQ,KAAA,CAAM,IAAC,IAAO,IAAA,CAAK,KAAC,KAAS,KAAA,CAAM,KAAC,IAAQ,IAAA,CAAK,GAAC,KAAO,KAAA,CAAM,GAAC,CAAG;IAerG,CAAG;;;;;IAKH,wBAjBG,GAiBH,UAjBG,KAAA;QAkBC,EAAJ,CAAA,CAAQ,CAjBC,KAAC,CAiBV,CAjBgB,CAiBhB;YACM,MAAN,CAjBa,KAAA,CAAM;QAkBnB,CAAK;QAED,EAAJ,CAAA,CAAQ,IAjBC,CAAI,IAAC,KAAQ,KAAA,CAAM,IAAC,CAiB7B,CAjBkC,CAiBlC;YACM,EAAN,CAAA,CAAU,IAjBC,CAAI,KAAC,KAAS,KAAA,CAAM,KAAC,CAiBhC,CAjBsC,CAiBtC;gBACQ,MAAR,CAjBe,IAAA,CAAK,GAAC,KAAO,KAAA,CAAM,GAAC,GAAK,KAAA,GAAQ,IAAA,CAAK,GAAC,GAAK,KAAA,CAAM,GAAC,CAAG;YAkBrE,CAAO;YAjBP,IAAA,CAAa,CAAb;gBAkBQ,MAAR,CAjBe,IAAA,CAAK,KAAC,GAAO,KAAA,CAAM,KAAC,CAAK;YAkBxC,CAAO;QACP,CAAK;QAjBL,IAAA,CAAW,CAAX;YAkBM,MAAN,CAjBa,IAAA,CAAK,IAAC,GAAM,KAAA,CAAM,IAAC,CAAI;QAkBpC,CAAK;IACL,CAAG;;;;;IAKH,uBApBG,GAoBH,UApBG,KAAA;QAqBC,EAAJ,CAAA,CAAQ,CApBC,KAAC,CAoBV,CApBgB,CAoBhB;YACM,MAAN,CApBa,KAAA,CAAM;QAqBnB,CAAK;QACD,EAAJ,CAAA,CAAQ,IApBC,CAAI,IAAC,KAAQ,KAAA,CAAM,IAAC,CAoB7B,CApBkC,CAoBlC;YACM,EAAN,CAAA,CAAU,IApBC,CAAI,KAAC,KAAS,KAAA,CAAM,KAAC,CAoBhC,CApBsC,CAoBtC;gBACQ,MAAR,CApBe,IAAA,CAAK,GAAC,KAAO,KAAA,CAAM,GAAC,GAAK,KAAA,GAAQ,IAAA,CAAK,GAAC,GAAK,KAAA,CAAM,GAAC,CAAG;YAqBrE,CAAO;YApBP,IAAA,CAAa,CAAb;gBAqBQ,MAAR,CApBe,IAAA,CAAK,KAAC,GAAO,KAAA,CAAM,KAAC,CAAK;YAqBxC,CAAO;QACP,CAAK;QApBL,IAAA,CAAW,CAAX;YAqBM,MAAN,CApBa,IAAA,CAAK,IAAC,GAAM,KAAA,CAAM,IAAC,CAAI;QAqBpC,CAAK;IACL,CAAG;;;;IAIH,0BAtBG,GAsBH,cAtBe,MAsBf,CAtBsB,EAAA,IAAE,EAAK,IAAA,CAAK,IAAC,EAAK,KAAA,EAAO,IAAA,CAAK,KAAC,EAAM,GAAA,EAAK,IAAA,CAAK,GAAC,EAAG,CAAC,CAsB1E,CAtB2E;;;;IA0B3E,0BAxBG,GAwBH,cAxBe,MAwBf,CAxBsB,IAAI,CAAI,IAAC,SAAI,IAAI,CAAI,KAAC,SAAK,IAAI,CAAI,GAAI,CAAE,CAwB/D,CAxBgE;IAyBhE,cAAC;AAAD,CAAC,AApED,IAoEC;ADlED;;;;AAIA,oBAHC,MAAA;IAIC,MAAF,CAHS,IAAI,OAAA,CAAQ,MAAC,CAAM,WAAC,EAAW,EAAG,MAAA,CAAO,QAAC,EAAQ,GAAI,CAAA,EAAG,MAAA,CAAO,OAAC,EAAO,CAAE,CAAC;AAIpF,CAAC;;;;;AAKD,kBAPC,IAAA;IAQC,IAAF,gBAAA,CAPQ,MAAA,GAAS,IAAI,IAAA,CAAK,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,GAAO,CAAA,EAAG,IAAA,CAAK,GAAC,CAAG,CAAC;;IAS7D,EAAF,CAAA,CAAM,CAPC,KAAC,CAAK,MAAC,CAAM,OAAC,EAAO,CAAE,CAO9B,CAPgC,CAOhC;QACI,MAAM,CAPC,WAAC,CAAW,IAAC,CAAI,IAAC,CAAI,CAAC;IAQlC,CAAG;IACD,MAAF,CAPS,MAAA,CAAO;AAQhB,CAAC;;;;AAMD;IAAA;;;;;;IAKA,oCAZY,GAYZ,cAAA,CAZY;;;;;IAiBZ,+BAhBY,GAgBZ,cAAA,CAhBY;;;;;IAqBZ,sCApBY,GAoBZ,cAAA,CApBY;;;;;;IA0BZ,gCAzBY,GAyBZ,UAzBY,IAAA,IAyBZ,CAzBY;;;;;;;;IAiCZ,6BA/BY,GA+BZ,UA/BY,IAAA,EAAA,MAAA,EAAA,MAAA,IA+BZ,CA/BY;;;;;;;;IAuCZ,6BAtCY,GAsCZ,UAtCY,IAAA,EAAA,MAAA,EAAA,MAAA,IAsCZ,CAtCY;;;;;;;IA6CZ,mCA3CY,GA2CZ,UA3CY,IAAA,EAAA,cAAA,IA2CZ,CA3CY;;;;;IAgDZ,8BA9CY,GA8CZ,cAAA,CA9CY;;;;;;IAoDZ,6BAlDY,GAkDZ,UAlDY,IAAA,IAkDZ,CAlDY;;CALZ;AAMO,WAAP,CAAA,UAAO,GAAoC;IAmD3C,EAlDE,IAAA,EAAM,UAAA,EAAW;CAmDlB,CAlDC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAqDA,EArDA,CAqDA,CAAC;AAGF;IAnDC,wCAAA;IAmDD;;;;;;IAcA,6CAhEG,GAgEH,cAhEqB,MAgErB,CAhE4B,CAAA,CAAE,CAgE9B,CAhE+B;;;;IAoE/B,wCAlEG,GAkEH,cAlEgB,MAkEhB,CAlEuB,CAAA,CAAE,EAAE,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC,CAkE/D,CAlEgE;;;;IAsEhE,+CApEG,GAoEH,cApEuB,MAoEvB,CApE8B,CAAA,CAAE,CAoEhC,CApEiC;;;;;;;IA2EjC,sCAzEG,GAyEH,UAzEG,IAAA,EAAA,MAAA,EAAA,MAAA;QAAA,uBAAA,EAAA,YAAA;QAAA,uBAAA,EAAA,UAAA;QA0EC,IAAJ,gBAAA,CAzEQ,MAAA,GAAS,QAAA,CAAS,IAAC,CAAI,CAAC;QA2E5B,MAAJ,CAAA,CAAY,MAzEC,CAyEb,CAAA,CAAA;YACM,KAzEK,GAAA;gBA0EH,MAAR,CAzEe,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,GAAM,MAAA,EAAQ,CAAA,EAAG,CAAA,CAAE,CAAC;YA0E/C,KAzEK,GAAA;gBA0EH,MAAM,GAzEG,IAAI,IAAA,CAAK,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,GAAO,MAAA,GAAS,CAAA,EAAG,CAAA,CAAE,CAAC;gBA0EzD,KAAR,CAAc;YACR,KAzEK,GAAA;gBA0EH,MAAM,CAzEC,OAAC,CAAO,MAAC,CAAM,OAAC,EAAO,GAAI,MAAA,CAAO,CAAC;gBA0E1C,KAAR,CAAc;YACR;gBACE,MAAR,CAzEe,IAAA,CAAK;QA0EpB,CAAK;QAED,MAAJ,CAzEW,UAAA,CAAW,MAAC,CAAM,CAAC;IA0E9B,CAAG;;;;;;;IAOH,sCA9EG,GA8EH,UA9EG,IAAA,EAAA,MAAA,EAAA,MAAA;QAAA,uBAAA,EAAA,YAAA;QAAA,uBAAA,EAAA,UAAA;QAA6D,MA8EhE,CA9EuE,IAAA,CAAK,OAAC,CAAO,IAAC,EAAK,MAAA,EAAQ,CAAA,MAAE,CAAM,CAAC;IA8E3G,CA9E4G;;;;;IAmF5G,yCAjFG,GAiFH,UAjFG,IAAA;QAkFC,IAAJ,gBAAA,CAjFQ,MAAA,GAAS,QAAA,CAAS,IAAC,CAAI,CAAC;QAkF5B,IAAJ,gBAAA,CAjFQ,GAAA,GAAM,MAAA,CAAO,MAAC,EAAM,CAAE;;QAmF1B,MAAJ,CAjFW,GAAA,KAAQ,CAAA,GAAI,CAAA,GAAI,GAAA,CAAI;IAkF/B,CAAG;;;;;;IAMH,4CArFG,GAqFH,UArFG,IAAA,EAAA,cAAA;;QAuFC,EAAJ,CAAA,CAAQ,cArFC,KAAkB,CAAA,CAqF3B,CArF8B,CAqF9B;YACM,cAAc,GArFG,CAAA,CAAE;QAsFzB,CAAK;QAED,IAAJ,gBAAA,CArFU,aAAA,GAAgB,CAAA,CAAE,GAAG,CAAA,GAAI,cAAA,CAqFnC,GArFqD,CAAA,CAAE;QAsFnD,IAAJ,gBAAA,CArFQ,IAAA,GAAO,IAAA,CAAK,aAAC,CAAa,CAAC;QAuF/B,IAAJ,gBAAA,CArFU,MAAA,GAAS,QAAA,CAAS,IAAC,CAAI,CAAC;QAsF9B,MAAM,CArFC,OAAC,CAAO,MAAC,CAAM,OAAC,EAAO,GAAI,CAAA,GAqFtC,CArF0C,MAAE,CAAM,MAAC,EAAM,IAAK,CAAA,CAAE,CAAC,CAAC,CAqFlE,WAAA;QACI,IAAJ,gBAAA,CArFU,IAAA,GAAO,MAAA,CAAO,OAAC,EAAO,CAAE;QAsF9B,MAAM,CArFC,QAAC,CAAQ,CAAC,CAAC,CAAC,CAqFvB,qBAAA;QACI,MAAM,CArFC,OAAC,CAAO,CAAC,CAAC,CAAC;QAsFlB,MAAJ,CArFW,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,KAAC,CAAK,CAAC,IAAC,GAAM,MAAA,CAAO,OAAC,EAAO,CAqFxD,GArF6D,QAAA,CAAS,GAAG,CAAA,CAAE,GAAG,CAAA,CAAE;IAsFhF,CAAG;;;;IAIH,uCAvFG,GAuFH,cAvFwB,MAuFxB,CAvF+B,UAAA,CAAW,IAAI,IAAA,EAAK,CAAE,CAAC,CAuFtD,CAvFuD;;;;;IA4FvD,sCA1FG,GA0FH,UA1FG,IAAA;QA2FC,EAAJ,CAAA,CAAQ,CA1FC,IAAC,IAAO,CAAA,SAAE,CAAS,IAAC,CAAI,IAAC,CAAI,IAAI,CAAA,SAAE,CAAS,IAAC,CAAI,KAAC,CAAK,IAAI,CAAA,SAAE,CAAS,IAAC,CAAI,GAAC,CAAG,CA0FxF,CA1F0F,CA0F1F;YACM,MAAN,CA1Fa,KAAA,CAAM;QA2FnB,CAAK;QAED,IAAJ,gBAAA,CA1FU,MAAA,GAAS,QAAA,CAAS,IAAC,CAAI,CAAC;QA4F9B,MAAJ,CA1FW,CAAA,KAAE,CAAK,MAAC,CAAM,OAAC,EAAO,CAAE,IAAI,MAAA,CAAO,WAAC,EAAW,KAAM,IAAA,CAAK,IAAC,IAAO,MAAA,CAAO,QAAC,EAAQ,GAAI,CAAA,KAAM,IAAA,CAAK,KAAC;YA2FrG,MAAM,CA1FC,OAAC,EAAO,KAAM,IAAA,CAAK,GAAC,CAAG;IA2FtC,CAAG;;CAtGH,CAnDC,WAAA;AAgEM,oBAAP,CAAA,UAAO,GAAoC;IA2F3C,EA1FE,IAAA,EAAM,UAAA,EAAW;CA2FlB,CA1FC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EA6FA,EA7FA,CA6FA,CAAC;ADvMF;;;;IAIA,8BADsB,SAAW;QAAX,IAAtB,CAAA,SAAsB,GAAA,SAAA,CAAW;IAAjC,CAA6C;;;;;;;;;IAU7C,qDARG,GAQH,UACM,IAAa,EAAE,OAAgB,EAAE,OAAgB,EAAE,cAAsB,EACzE,YAAgF;QAClF,IAAJ,gBAAA,CARU,KAAA,GAAwB,EAAA,SAAE,EAAU,IAAA,EAAM,MAAA,EAAQ,IAAA,CAAK,KAAC,EAAM,IAAA,EAAM,IAAA,CAAK,IAAC,EAAK,KAAA,EAAO,EAAA,EAAI,QAAA,EAAU,EAAA,EAAG,CAAC;QAU9G,IAAI,GARG,IAAA,CAAK,iBAAC,CAAiB,IAAC,EAAK,cAAA,CAAe,CAAC;;QAWpD,GAAJ,CAAA,CAAS,IAAT,gBAAA,CARa,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,SAAC,CAAS,gBAAC,EAAgB,EAAG,CAAA,EAAE,EAAG,CAQhE;YACM,IAAN,gBAAA,CARY,IAAA,GAAuB,EAAA,CAAG;;YAWhC,GAAN,CAAA,CAAW,IAAX,gBAAA,CARe,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,SAAC,CAAS,cAAC,EAAc,EAAG,CAAA,EAAE,EAAG,CAQhE;gBACQ,EAAR,CAAA,CAAY,CARC,KAAK,CAAA,CAQlB,CARqB,CAQrB;oBACU,KAAK,CARC,QAAC,CAAQ,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,UAAC,CAAU,IAAC,CAAI,CAAC,CAAC;gBAS/D,CAAS;gBAED,IAAR,gBAAA,CARc,OAAA,GAAU,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,EAAM,IAAA,CAAK,GAAC,CAAG,CAAC;gBAU7D,IAAR,gBAAA,CARY,QAAA,GAAW,CAAA,OAAE,IAAU,OAAA,CAAQ,MAAC,CAAM,OAAC,CAAO,CAQ1D,IAAA,CAR+D,OAAE,IAAU,OAAA,CAAQ,KAAC,CAAK,OAAC,CAAO,CAAC,CAAC;gBAS3F,EAAR,CAAA,CAAY,CARC,QAAC,IAAW,YAAA,CAQzB,CARuC,CAQvC;oBACU,QAAQ,GARG,YAAA,CAAa,OAAC,EAAQ,EAAA,KAAE,EAAM,KAAA,CAAM,MAAC,EAAO,IAAA,EAAM,KAAA,CAAM,IAAC,EAAI,CAAC,CAAC;gBASpF,CAAS;;gBAGD,EAAR,CAAA,CAAY,KARC,CAAK,SAAC,KAAa,IAAA,IAAQ,IAAA,CAAK,KAAC,KAAS,KAAA,CAAM,MAAC,CAQ9D,CARqE,CAQrE;oBACU,KAAK,CARC,SAAC,GAAW,OAAA,CAAQ;gBASpC,CAAS;gBAED,IAAI,CARC,IAAC,CAAI,EAAC,IAAC,EAAK,OAAA,EAAS,QAAA,EAAU,QAAA,EAAS,CAAC,CAAC;gBAU/C,IAAI,GARG,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,CAAC;YAS5C,CAAO;YAED,KAAK,CARC,KAAC,CAAK,IAAC,CAST,EAAC,MARC,EAAO,IAAA,CAAK,SAAC,CAAS,aAAC,CAAa,IAAC,CAAI,GAAC,CAAG,UAAA,GAAC,IAAM,OAAA,OAAA,CAAQ,IAAC,CAAI,GAAC,CAAG,IAAC,CAAI,EAAtB,CAAsB,CAAC,EAAE,cAAA,CAAe,EAAE,IAAA,EAAM,IAAA,EAAK,CAAC,CAAC;QASvH,CAAK;QAED,MAAJ,CARW,KAAA,CAAM;IASjB,CAAG;;;;;;IAMH,0CAZG,GAYH,UAZG,IAAA,EAAA,YAAA;QAaC,IAAJ,gBAAA,CAZU,OAAA,GAAU,OAAA,CAAQ,IAAC,CAAI,IAAC,CAAI,CAAC;QAanC,EAAJ,CAAA,CAAQ,YAZC,KAAgB,SAAA,CAYzB,CAZoC,CAYpC;YACM,YAAY,GAZG,IAAA,CAAK,SAAC,CAAS,QAAC,EAAQ,CAAE;QAa/C,CAAK;QACD,MAAJ,CAZW,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,OAAC,CAAO,GAAG,OAAA,GAAU,YAAA,CAAa;IAapE,CAAG;;;;;;IAVA,gDAAA,GAAA,UAAA,IAAA,EAAA,cAAA;QAAA,iBAkCA;QAjBC,IAAJ,gBAAA,CAhBU,YAAA,GAAe,IAAA,CAAK,KAAC,CAAK;QAiBhC,IAAJ,gBAAA,CAhBQ,KAAA,GAAQ,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,EAAM,IAAA,CAAK,GAAC,CAAG,CAAC;QAiBzD,IAAJ,gBAAA,CAhBQ,SAAA,GAAY,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,KAAC,CAAK,CAAC;QAkB9C,IAAJ,gBAAA,CAhBU,0CAAA,GAiBF,cAhBQ,MAehB,CAfuB,KAAA,CAAM,KAAC,KAAS,SAAA,CAAU,KAAC,IAAQ,cAAA,KAAmB,KAAA,CAAK,SAAC,CAAS,UAAC,CAAU,KAAC,CAAK,CAAC,CAe9G,CAf+G,CAAE;QAkB7G,IAAJ,gBAAA,CAhBU,8CAAA,GAiBF,cAhBQ,MAehB,CAfuB,KAAA,CAAM,KAAC,KAAS,YAAA,IAAgB,cAAA,KAAmB,KAAA,CAAK,SAAC,CAAS,UAAC,CAAU,KAAC,CAAK,CAAC,CAe3G,CAf4G,CAAE;;QAmB1G,OAAO,CAhBC,8CAAC,EAA8C,IAAK,CAAA,0CAAE,EAA0C,EAAG,CAgB/G;YACM,KAAK,GAhBG,IAAI,OAAA,CAAQ,SAAC,CAAS,IAAC,EAAK,SAAA,CAAU,KAAC,EAAM,SAAA,CAAU,GAAC,CAAG,CAAC;YAiBpE,SAAS,GAhBG,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,SAAC,CAAS,CAAC;QAiBpD,CAAK;QAED,MAAJ,CAhBW,KAAA,CAAM;IAiBjB,CAAG;;CAxFH;AAyEO,oBAAP,CAAA,UAAO,GAAoC;IAiB3C,EAhBE,IAAA,EAAM,UAAA,EAAW;CAiBlB,CAhBC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAmBD,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EApBA,CAoBA,CAAC;ADjFK,IAAI,eAAe,GAAQ,EAAE,CAAC;AACrC,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;AACzB,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;AACzB,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC/C,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;ADrB/C;;;;;AAKA;IAAA;QAEE,IAAF,CAAA,aAAe,GAEG,CAAA,CAAE;QADlB,IAAF,CAAA,cAAgB,GAEG,CAAA,CAAE;QAEnB,IAAF,CAAA,UAAY,GAEiC,QAAA,CAAS;QADpD,IAAF,CAAA,WAAa,GAEuC,SAAA,CAAU;QAD5D,IAAF,CAAA,YAAc,GAEG,IAAA,CAAK;QADpB,IAAF,CAAA,eAAiB,GAEG,KAAA,CAAM;IAQ1B,CAAC;;CApBD;AAcO,mBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADzBF,IAAM,cAAA,GAAiB,CAAA,IAAE,EAAK,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,CAAK,CAAC;AAClE,IAAM,YAAA,GAAe,CAAA,KAAE,EAAM,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,CAAM,CAAC;AAC1G,IAAM,WAAA,GAAc;IAClB,SAAS,EAAE,UAAA,EAAY,OAAA,EAAS,OAAA,EAAS,KAAA,EAAO,MAAA,EAAQ,MAAA,EAAQ,QAAA,EAAU,WAAA,EAAa,SAAA,EAAW,UAAA;IAClG,UAAU;CACX,CAAC;;;;;;AAMF;IAAA;;;;;;;;;IAQA,+CAFY,GAEZ,UAFY,OAAA,IAEZ,CAFY;;;;;;;;IAUZ,6CAJY,GAIZ,UAJY,KAAA,IAIZ,CAJY;;;;;;;;IAYZ,4CANY,GAMZ,UANY,KAAA,IAMZ,CANY;;CAlBZ;AAmBO,iBAAP,CAAA,UAAO,GAAoC;IAO3C,EANE,IAAA,EAAM,UAAA,EAAW;CAOlB,CANC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EASA,EATA,CASA,CAAC;AAGF;IAPC,4CAAA;IAOD;;;;;;;IAeA,sDArBG,GAqBH,UArBG,OAAA,IAA8C,MAqBjD,CArBwD,cAAA,CAAe,OAAC,GAAS,CAAA,CAAE,CAAC,CAqBpF,CArBqF;;;;;IA0BrF,oDAxBG,GAwBH,UAxBG,KAAA,IAA0C,MAwB7C,CAxBoD,YAAA,CAAa,KAAC,GAAO,CAAA,CAAE,CAAC,CAwB5E,CAxB6E;;;;;IA6B7E,mDA3BG,GA2BH,UA3BG,KAAA,IAAyC,MA2B5C,CA3BmD,WAAA,CAAY,KAAC,GAAO,CAAA,CAAE,CAAC,CA2B1E,CA3B2E;;CAE3E,CAPC,iBAAA;AAMM,wBAAP,CAAA,UAAO,GAAoC;IA4B3C,EA3BE,IAAA,EAAM,UAAA,EAAW;CA4BlB,CA3BC;;;;AAED,wBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EA8BA,EA9BA,CA8BA,CAAC;AD3DF,IAAM,6BAAA,GAAgC;IACpC,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,aAAA,EAAA,CAAA,CAAc;IAC5C,KAAK,EAAE,IAAA;CACR,CAAC;;;;AAmBF;;;;;;;IAsFA,uBAFc,QAAU,EAA8B,SAAW,EAAoB,IAAM,EAMrF,MALQ;QADA,IAAd,CAAA,QAAc,GAAA,QAAA,CAAU;QAA8B,IAAtD,CAAA,SAAsD,GAAA,SAAA,CAAW;QAAoB,IAArF,CAAA,IAAqF,GAAA,IAAA,CAAM;QA7EzF,IAAF,CAAA,MAAQ,GAEqB,EAAA,CAAG;;;;;QAiE7B,IAAH,CAAA,QAAW,GAEG,IAAI,YAAA,EAAwC,CAAG;QAA3D,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QAAjB,IAAF,CAAA,QAAU,GAEG,UAAA,CAAI,IAFjB,CAEyB,CAAG;QAD1B,IAAF,CAAA,SAAW,GAEG,cAFd,CAEoB,CAAG;QAUnB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACtC,CAAG;;;;IAIH,uCAPG,GAOH;QACI,IAAJ,gBAAA,CAPU,CAAA,GAAI,IAAA,CAAK,YAAC,GAAc,IAAA,GAAO,IAAA,CAAK;QAQ1C,MAAJ,CAPW,IAAA,CAAK,aAAC,KAAiB,CAAA,IAAK,IAAA,CAAK,UAAC,KAAc,QAAA,GAAW,CAAA,GAAI,CAAA,GAAI,CAAA,CAAE;IAQhF,CAAG;;;;IAIH,uCATG,GASH;QACI,IAAJ,gBAAA,CATU,CAAA,GAAI,IAAA,CAAK,YAAC,GAAc,CAAA,GAAI,CAAA,CAAE;QAUpC,MAAJ,CATW,IAAA,CAAK,aAAC,KAAiB,CAAA,IAAK,IAAA,CAAK,UAAC,KAAc,QAAA,GAAW,CAAA,GAAI,CAAA,GAAI,CAAA,CAAE;IAUhF,CAAG;;;;;;;;;IASH,kCAVG,GAUH,UAVG,IAAA;QAWC,IAAI,CAVC,oBAAC,CAAoB,IAAC,CAAI,QAAC,CAAQ,WAAC,CAAW,IAAC,CAAI,CAAC,CAAC;QAW3D,IAAI,CAVC,WAAC,EAAW,CAAE;IAWvB,CAAG;;;;IAIH,gCAZG,GAYH;QACI,IAAI,CAZC,SAAC,EAAS,CAAE;QAajB,IAAI,CAZC,UAAC,CAAU,IAAC,CAAI,KAAC,CAAK,CAAC;IAahC,CAAG;;;;;IAKH,mCAfG,GAeH,UAfG,OAAA;QAgBC,IAAI,CAfC,SAAC,EAAS,CAAE;QAgBjB,IAAI,CAfC,oBAAC,CAAoB,IAAC,CAAI,KAAC,CAAK,CAAC;QAiBtC,EAAJ,CAAA,CAAQ,OAfC,CAAO,eAAC,CAAe,CAehC,CAfkC,CAelC;YACM,IAAI,CAfC,aAAC,GAAe,SAAA,CAAU,IAAC,CAAI,aAAC,CAAa,CAAC;QAgBzD,CAAK;;QAGD,EAAJ,CAAA,CAAQ,CAfC,WAAC,EAAY,SAAA,EAAW,SAAA,EAAW,YAAA,EAAc,gBAAA,EAAkB,cAAA,EAAgB,eAAA,CAAgB,CAAC,IAAC,CAgBlG,UAAA,KAAK,IAfI,OAAA,CAAA,CAAE,OAAC,CAAO,KAAC,CAAK,EAAhB,CAAgB,CAAC,CActC,CAdwC,CAcxC;YAEM,IAAI,CAfC,WAAC,CAAW,IAAC,CAAI,CAAC;QAgB7B,CAAK;IACL,CAAG;;;;;IAKH,oCAlBG,GAkBH,UAlBG,IAAA;QAmBC,IAAI,CAlBC,oBAAC,CAAoB,IAAC,CAAI,CAAC;QAoBhC,IAAI,CAlBC,SAAC,EAAS,CAAE;QAmBjB,IAAI,CAlBC,UAAC,CAAU,IAAC,CAAI,CAAC;QAmBtB,IAAI,CAlBC,QAAC,CAAQ,EAAC,IAAC,EAAK,IAAA,CAAK,IAAC,EAAK,KAAA,EAAO,IAAA,CAAK,KAAC,EAAM,GAAA,EAAK,IAAA,CAAK,GAAC,EAAG,CAAC,CAAC;;QAqBnE,EAAJ,CAAA,CAAQ,IAlBC,CAAI,KAAC,CAAK,KAAC,KAAS,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,CAAC,MAAC,IAAS,IAAA,CAAK,aAAC,KAAiB,CAAA,CAkB7E,CAlBgF,CAkBhF;YACM,IAAI,CAlBC,WAAC,EAAW,CAAE;QAmBzB,CAAK;IACL,CAAG;;;;;IAKH,4CArBG,GAqBH,UArBG,IAAA;QAsBC,IAAI,CArBC,oBAAC,CAAoB,IAAC,CAAI,CAAC;QAsBhC,IAAI,CArBC,WAAC,EAAW,CAAE;IAsBvB,CAAG;;;;;IAKH,uCAxBG,GAwBH,UAxBG,KAAA;QAyBC,MAAJ,CAAA,CAAY,KAxBC,CAwBb,CAAA,CAAA;YACM,KAxBK,eAAA,CAAgB,IAAC;gBAyBpB,IAAI,CAxBC,oBAAC,CAAoB,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,MAAC,CAAM,CAAC,CAAC,CAAC,SAAC,EAAU,GAAA,CAAI,CAAC,CAAC;gBAyBjF,KAAR,CAAc;YACR,KAxBK,eAAA,CAAgB,IAAC;gBAyBpB,IAAI,CAxBC,oBAAC,CAAoB,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,MAAC,CAAM,CAAC,CAAC,CAAC,SAAC,EAAU,GAAA,CAAI,CAAC,CAAC;gBAyBjF,KAAR,CAAc;QACd,CAAK;QAED,IAAI,CAxBC,WAAC,EAAW,CAAE;IAyBvB,CAAG;;;;;IAKH,wCA3BG,GA2BH,UA3BG,EAAA,IAAiD,IAAA,CAAK,QAAC,GAAU,EAAA,CAAG,CA2BvE,CA3BwE;;;;;IAgCxE,yCA9BG,GA8BH,UA9BG,EAAA,IAAwC,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CA8B/D,CA9BgE;;;;;IAmChE,kCAjCG,GAiCH,UAjCG,KAAA,IAAmB,IAAA,CAAK,KAAC,GAAO,IAAA,CAAK,QAAC,CAAQ,WAAC,CAAW,KAAC,EAAM,IAAA,CAAK,CAAC,CAiC1E,CAjC2E;;;;;IAsC3E,wCApCG,GAoCH,UApCG,UAAA,IAAuC,IAAA,CAAK,QAAC,GAAU,UAAA,CAAW,CAoCrE,CApCsE;;;;IAEnE,iCAAA,GAAA;QAuCC,IAAI,CAtCC,QAAC,GAAU,OAAA,CAAQ,IAAC,CAAI,IAAC,CAAI,OAAC,CAAO,CAAC;QAuC3C,IAAI,CAtCC,QAAC,GAAU,OAAA,CAAQ,IAAC,CAAI,IAAC,CAAI,OAAC,CAAO,CAAC;QAuC3C,IAAI,CAtCC,KAAC,GAAO,IAAA,CAAK,QAAC,CAAQ,WAAC,CAAW,IAAC,CAAI,SAAC,CAAS,CAAC;QAwCvD,EAAJ,CAAA,CAAQ,CAtCC,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,QAAC,CAAQ,CAsC9C,CAtCgD,CAsChD;YACM,IAAI,CAtCC,QAAC,GAAU,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,KAAC,EAAM,GAAA,EAAK,EAAA,CAAG,CAAC;YAuC5D,IAAI,CAtCC,OAAC,GAAS,EAAA,IAAE,EAAK,IAAA,CAAK,QAAC,CAAQ,IAAC,EAAK,KAAA,EAAO,IAAA,CAAK,QAAC,CAAQ,KAAC,EAAM,GAAA,EAAK,IAAA,CAAK,QAAC,CAAQ,GAAC,EAAG,CAAC;QAuCpG,CAAK;QAED,EAAJ,CAAA,CAAQ,CAtCC,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,QAAC,CAAQ,CAsC9C,CAtCgD,CAsChD;YACM,IAAI,CAtCC,QAAC,GAAU,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,KAAC,EAAM,GAAA,EAAK,EAAA,CAAG,CAAC;YAuC5D,IAAI,CAtCC,QAAC,GAAU,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,QAAC,CAAQ,CAAC;YAuCtD,IAAI,CAtCC,OAAC,GAAS,EAAA,IAAE,EAAK,IAAA,CAAK,QAAC,CAAQ,IAAC,EAAK,KAAA,EAAO,IAAA,CAAK,QAAC,CAAQ,KAAC,EAAM,GAAA,EAAK,IAAA,CAAK,QAAC,CAAQ,GAAC,EAAG,CAAC;QAuCpG,CAAK;QAED,EAAJ,CAAA,CAAQ,IAtCC,CAAI,QAAC,IAAW,IAAA,CAAK,QAAC,IAAW,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM,IAAC,CAAI,QAAC,CAAQ,CAsC7E,CAtC+E,CAsC/E;YACM,MAtCM,IAAI,KAAA,CAAM,eAAC,IAAa,CAAI,QAAC,0CAAQ,IAAqC,CAAI,QAAS,CAAE,CAAC;QAuCtG,CAAK;IACL,CAAG;;;;;IApCA,4CAAA,GAAA,UAAA,IAAA;QA0CC,EAAJ,CAAA,CAAQ,IAzCC,CAAI,QAAC,IAAW,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,QAAC,CAAQ,CAyCnD,CAzCqD,CAyCrD;YACM,IAAI,CAzCC,KAAC,GAAO,IAAI,OAAA,CAAQ,IAAC,CAAI,QAAC,CAAQ,IAAC,EAAK,IAAA,CAAK,QAAC,CAAQ,KAAC,EAAM,CAAA,CAAE,CAAC;QA0C3E,CAAK;QAzCL,IAAA,CAAW,EAAX,CAAA,CAAW,IAAK,CAAI,QAAC,IAAW,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,QAAC,CAAQ,CAAzD,CAA2D,CAA3D;YA0CM,IAAI,CAzCC,KAAC,GAAO,IAAI,OAAA,CAAQ,IAAC,CAAI,QAAC,CAAQ,IAAC,EAAK,IAAA,CAAK,QAAC,CAAQ,KAAC,EAAM,CAAA,CAAE,CAAC;QA0C3E,CAAK;QAzCL,IAAA,CAAW,CAAX;YA0CM,IAAI,CAzCC,KAAC,GAAO,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,EAAK,IAAA,CAAK,KAAC,EAAM,CAAA,CAAE,CAAC;QA0CzD,CAAK;IACL,CAAG;;;;;IAvCA,mCAAA,GAAA,UAAA,KAAA;QAAA,sBAAA,EAAA,aAAA;QA6CC,IAAJ,gBAAA,CA5CU,SAAA,GAAY,EAAA,CAAG;gCACZ,CAAA;YA6CP,IAAN,gBAAA,CA5CY,SAAA,GAAU,OAAK,SAAC,CAAS,OAAC,CAAO,OAAK,KAAC,EAAM,GAAA,EAAK,CAAA,CAAE,CAAC;YA6C3D,IAAN,gBAAA,CA5CY,KAAA,GAAQ,OAAK,MAAC,CAAM,SAAC,CAAS,UAAA,KAAC,IAAQ,OAAA,KAAA,CAAM,SAAC,CAAS,MAAC,CAAM,SAAC,CAAO,EAA/B,CAA+B,CAAC,CAAC;YA8C9E,EAAN,CAAA,CAAU,KA5CC,IAAQ,KAAA,KAAU,CAAA,CAAE,CA4C/B,CA5CiC,CA4CjC;gBACQ,SAAS,CA5CC,IAAC,CA6CP,OA5CK,QAAC,CAAQ,sBAAC,CA6CX,SAAO,EA5CE,OAAK,QAAC,EAAS,OAAK,QAAC,EAAS,SAAA,CAAU,OAAK,cAAC,CAAc,EAAE,OAAK,YAAC,CAAY,CAAC,CAAC;YA6C3G,CAAO;YA5CP,IAAA,CAAa,CAAb;gBA6CQ,SAAS,CA5CC,IAAC,CAAI,OAAK,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC;YA6C3C,CAAO;QACP,CAAK;;QAXD,GAAJ,CAAA,CAAS,IAAT,gBAAA,CA5Ca,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,aAAC,EAAc,CAAA,EAAE;oBA4C9C,gBAAA,CA5Ca,CAAA;SAuDR;QAED,IAAJ,gBAAA,CA5CU,OAAA,GAAU,SAAA,CAAU,CAAC,CAAC,CAAC,SAAC,CAAS;QA6CvC,IAAJ,gBAAA,CA5CU,OAAA,GAAU,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,GAAG,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,CAAC,SAAC,GAAW,IAAA,CAAK;QA8CjE,IAAI,CA5CC,MAAC,GAAQ,SAAA,CAAU;;QA+CxB,EAAJ,CAAA,CAAQ,CA5CC,OAAC,CAAO,MAAC,CAAM,OAAC,CAAO,CA4ChC,CA5CkC,CA4ClC;YACM,IAAI,CA5CC,QAAC,CAAQ,IAAC,CAAI;gBA6CjB,OAAO,EA5CE,OAAA,GAAU,EAAA,IAAE,EAAK,OAAA,CAAQ,IAAC,EAAK,KAAA,EAAO,OAAA,CAAQ,KAAC,EAAK,GAAG,IAAA;gBA6ChE,IAAI,EA5CE,EAAA,IAAE,EAAK,OAAA,CAAQ,IAAC,EAAK,KAAA,EAAO,OAAA,CAAQ,KAAC,EAAK;aA6CjD,CA5CC,CAAC;QA6CT,CAAK;IACL,CAAG;;CAzRH;AA8OO,aAAP,CAAA,UAAO,GAAoC;IA6C3C,EA5CE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA6CvB,QAAQ,EA5CE,eAAA;gBA6CV,QAAQ,EA5CE,gBAAA;gBA6CV,IAAI,EA5CE,EAAA,OAAE,EAAQ,wBAAA,EAAyB;gBA6CzC,MAAM,EA5CE,CAAA,sdAiEP,CA5CC;gBA6CF,QAAQ,EA5CE,2yDAmFT;gBACD,SAAS,EA5CE,CAAA,6BAAE,EAA8B,oBAAA,CAAqB;aA6CjE,EA5CC,EAAG;CA6CJ,CA5CC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA+CD,EAAC,IAAI,EAAE,oBAAoB,GAAG;IAC9B,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,mBAAmB,GAAG;CAC5B,EAnDA,CAmDA,CAAC;AA7CK,aAAP,CAAA,cAAO,GAAyD;IA+ChE,aAAa,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+ChC,eAAe,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+ClC,gBAAgB,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+CnC,cAAc,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+CjC,SAAS,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+C5B,SAAS,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+C5B,YAAY,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+C/B,aAAa,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+ChC,cAAc,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+CjC,iBAAiB,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+CpC,WAAW,EA9CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+C9B,UAAU,EA9CE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CA+C7B,CA9CC;ADhXF;;;;IAaA,gCAAqB,IAAM;QAAN,IAArB,CAAA,IAAqB,GAAA,IAAA,CAAM;QAJxB,IAAH,CAAA,MAAS,GAEG,IAAI,YAAA,EAAqB,CAAG;IAExC,CAA6C;;;;;IAK7C,yCAHG,GAGH,UAHG,GAAA;QAIC,EAAJ,CAAA,CAAQ,CAHC,IAAC,CAAI,UAAC,CAAU,GAAC,CAAG,IAAI,CAAA,IAAE,CAAI,QAAC,CAAQ,GAAC,CAAG,CAGpD,CAHsD,CAGtD;YACM,IAAI,CAHC,MAAC,CAAM,IAAC,CAAI,OAAC,CAAO,IAAC,CAAI,GAAC,CAAG,IAAC,CAAI,CAAC,CAAC;QAI/C,CAAK;IACL,CAAG;;;;;;IAMH,+CAPG,GAOH,UAPG,GAAA,EAAA,KAAA;QAQC,MAAJ,CAPW;YAQL,IAAI,EAPE,EAAA,IAAE,EAAK,GAAA,CAAI,IAAC,CAAI,IAAC,EAAK,KAAA,EAAO,GAAA,CAAI,IAAC,CAAI,KAAC,EAAM,GAAA,EAAK,GAAA,CAAI,IAAC,CAAI,GAAC,EAAG;YAQrE,YAAY,EAPE,KAAA,CAAM,MAAC;YAQrB,QAAQ,EAPE,IAAA,CAAK,UAAC,CAAU,GAAC,CAAG;YAQ9B,QAAQ,EAPE,IAAA,CAAK,UAAC,CAAU,GAAC,CAAG,IAAC,CAAI;SAQpC,CAPC;IAQN,CAAG;;;;;IAKH,2CAVG,GAUH,UAVG,GAAA,IAA+B,MAUlC,CAVyC,IAAA,CAAK,QAAC,IAAW,GAAA,CAAI,QAAC,CAAQ,CAUvE,CAVwE;;;;;IAexE,2CAbG,GAaH,UAbG,IAAA,IAA2B,MAa9B,CAbqC,IAAA,CAAK,YAAC,IAAe,IAAA,CAAK,YAAC,CAAY,MAAC,CAAM,IAAC,CAAI,CAAC,CAazF,CAb0F;;;;;IAkB1F,4CAhBG,GAgBH,UAhBG,IAAA;QAiBC,MAAJ,CAhBW,IAAA,CAAK,WAAC,KAAe,WAAA,IAAe,IAAA,CAAK,IAAC,CAAI,CAAC,CAAC,CAAC,IAAC,CAAI,KAAC,KAAS,IAAA,CAAK,KAAC,CAAK,MAAC;YAiB/E,IAAI,CAhBC,IAAC,CAAI,IAAC,CAAI,IAAC,CAAI,MAAC,GAAQ,CAAA,CAAE,CAAC,IAAC,CAAI,KAAC,KAAS,IAAA,CAAK,KAAC,CAAK,MAAC,CAAM;IAiBzE,CAAG;;;;;IAKH,yCAnBG,GAmBH,UAnBG,GAAA;QAoBC,MAAJ,CAnBW,CAAA,IAAE,CAAI,WAAC,KAAe,QAAA,IAAY,IAAA,CAAK,WAAC,KAAe,WAAA,CAmBlE,IAnBkF,IAAA,CAAK,KAAC,CAAK,MAAC,KAAU,GAAA,CAAI,IAAC,CAAI,KAAC,CAAK;IAoBvH,CAAG;;CA5DH;AA0CO,sBAAP,CAAA,UAAO,GAAoC;IAoB3C,EAnBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAoBvB,QAAQ,EAnBE,2BAAA;gBAoBV,IAAI,EAnBE,EAAA,OAAE,EAAQ,SAAA,EAAU;gBAoB1B,MAAM,EAnBE,CAAA,mUAiCP,CAnBC;gBAoBF,QAAQ,EAnBE,+gCAuCT;aACF,EAnBC,EAAG;CAoBJ,CAnBC;;;;AAED,sBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAsBD,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAvBA,CAuBA,CAAC;AApBK,sBAAP,CAAA,cAAO,GAAyD;IAsBhE,aAAa,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBhC,UAAU,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB7B,OAAO,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB1B,aAAa,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBhC,cAAc,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBjC,cAAc,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBjC,iBAAiB,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBpC,QAAQ,EArBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAsB3B,CArBC;ADjGF;;;;;IAiBA,iCADqB,IAAM,EAA2B,SAAW;QAA5C,IAArB,CAAA,IAAqB,GAAA,IAAA,CAAM;QAA2B,IAAtD,CAAA,SAAsD,GAAA,SAAA,CAAW;QAf/D,IAAF,CAAA,UAAY,GAEG,eAAA,CAAgB;QAQ5B,IAAH,CAAA,QAAW,GAEG,IAAI,YAAA,EAA6B,CAAG;QAD/C,IAAH,CAAA,MAAS,GAEG,IAAI,YAAA,EAAqB,CAAG;IAExC,CAA6E;;;;;IAO7E,4CALG,GAKH,UALG,KAAA,IAAoC,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,CAKjE,CALkE;;;;IASlE,8CAPG,GAOH;QACI,MAAJ,CAPW,IAAA,CAAK,QAAC,IAOjB,CAP4B,IAAE,CAAI,OAAC,IAAU,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,IAAC,EAAK,GAAA,CAAI,CAAC,KAAC,CAAK,IAAC,CAAI,OAAC,CAAO,CAAC,CAAC;IAQzG,CAAG;;;;IAIH,8CATG,GASH;QACI,IAAJ,gBAAA,CATU,QAAA,GAAW,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,IAAC,EAAK,GAAA,CAAI,CAAC;QAUxD,MAAJ,CATW,IAAA,CAAK,QAAC,IASjB,CAT4B,IAAE,CAAI,OAAC,IAAU,QAAA,CAAS,IAAC,IAAO,IAAA,CAAK,OAAC,CAAO,IAAC,IAAO,QAAA,CAAS,KAAC,GAAO,IAAA,CAAK,OAAC,CAAO,KAAC,CAAK,CAAC;IAUxH,CAAG;;;;;IAKH,4CAZG,GAYH,UAZG,IAAA,IAA2B,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,CAAC,CAYrD,CAZsD;;CA7BtD;AA8BO,uBAAP,CAAA,UAAO,GAAoC;IAa3C,EAZE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAavB,QAAQ,EAZE,2BAAA;gBAaV,IAAI,EAZE,EAAA,OAAE,EAAQ,gCAAA,EAAkC,mBAAA,EAAqB,aAAA,EAAc;gBAarF,MAAM,EAZE,CAAA,m1BA8CP,CAZC;gBAaF,QAAQ,EAZE,gtBA4BT;aACF,EAZC,EAAG;CAaJ,CAZC;;;;AAED,uBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAeD,EAAC,IAnBC,EAAA,iBAAA,GAAA;IAoBF,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EAjBA,CAiBA,CAAC;AAbK,uBAAP,CAAA,cAAO,GAAyD;IAehE,MAAM,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAezB,UAAU,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe7B,SAAS,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe5B,SAAS,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe5B,QAAQ,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe3B,YAAY,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe/B,iBAAiB,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAepC,UAAU,EAdE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAe9B,QAAQ,EAdE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAe3B,CAdC;AD1GF;;;;;;AAMA;IAAA;IAiBA,CAAC;;;;;;;;IATD,sCAFY,GAEZ,UAFY,KAAA,IAEZ,CAFY;;;;;;;;IAUZ,uCAHY,GAGZ,UAHY,IAAA,IAGZ,CAHY;IAIZ,6BAAC;AAAD,CAAC,AAjBD,IAiBC;AACD;IAFC,6CAAA;IAED;;IA2BA,CAAC;;;;;IAtBD,yCANG,GAMH,UANG,KAAA;QAOC,EAAJ,CAAA,CAAQ,KANC,CAMT,CANe,CAMf;YACM,IAAN,gBAAA,CANY,SAAA,GAAY,KAAA,CAAM,IAAC,EAAI,CAAE,KAAC,CAAK,GAAC,CAAG,CAAC;YAO1C,EAAN,CAAA,CAAU,SANC,CAAS,MAAC,KAAU,CAAA,IAAK,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,CAM1D,CAN4D,CAM5D;gBACQ,MAAR,CANe,EAAA,IAAE,EAAK,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAE,KAAA,EAAO,IAAA,EAAM,GAAA,EAAK,IAAA,EAAK,CAAC;YAOvE,CAAO;YANP,IAAA,CAAa,EAAb,CAAA,CAAa,SAAK,CAAS,MAAC,KAAU,CAAA,IAAK,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,IAAI,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,CAA3F,CAA6F,CAA7F;gBAOQ,MAAR,CANe,EAAA,IAAE,EAAK,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAE,KAAA,EAAO,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAE,GAAA,EAAK,IAAA,EAAK,CAAC;YAO1F,CAAO;YANP,IAAA,CAAa,EAAb,CAAA,CAAa,SAAK,CAAS,MAAC,KAAU,CAAA,IAAK,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,IAAI,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,IAAI,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC,CAArH,CAAuH,CAAvH;gBAOQ,MAAR,CANe,EAAA,IAAE,EAAK,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAE,KAAA,EAAO,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAE,GAAA,EAAK,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAC,EAAC,CAAC;YAO7G,CAAO;QACP,CAAK;QACD,MAAJ,CANW,IAAA,CAAK;IAOhB,CAAG;;;;;IAKH,0CATG,GASH,UATG,IAAA;QAUC,MAAJ,CATW,IAAA;YAUA,IATC,CAAI,IAAC,UAAI,QAAI,CAAQ,IAAC,CAAI,KAAC,CAAK,GAAG,SAAA,CAAU,IAAC,CAAI,KAAC,CAAK,GAAG,EAAA,WAAG,QAAI,CAAQ,IAAC,CAAI,GAAC,CAAG,GAAG,SAAA,CAAU,IAAC,CAAI,GAAC,CAAG,GAAG,EAAA,CAAG;YAUnH,EAAE,CATC;IAUX,CAAG;IACH,gCAAC;AAAD,CAAC,AA3BD,CAFC,sBAAA,GA6BA;ADpDD;IAAA;IAoKA,CAAC;;;;;;IAlKE,8BAAA,GAAA,UAAA,OAAA,EAAA,IAAA,IAA8D,MAAjE,CAAwE,MAAA,CAAO,gBAAC,CAAgB,OAAC,CAAO,CAAC,IAAC,CAAI,CAAC,CAA/G,CAAgH;;;;;IAE7G,wCAAA,GAAA,UAAA,OAAA;QAQC,MAAJ,CAPW,CAAA,IAAE,CAAI,QAAC,CAAQ,OAAC,EAAQ,UAAA,CAAW,IAAI,QAAA,CAOlD,KAPgE,QAAA,CAAS;IAQzE,CAAG;;;;;IALA,kCAAA,GAAA,UAAA,OAAA;QAWC,IAAJ,gBAAA,CAVQ,cAAA,GAAe,CAAe,OAAC,CAAO,YAAC,CAU/C,IAV8D,QAAA,CAAS,eAAC,CAAe;QAYnF,OAAO,cAVC,IAAiB,cAAA,KAAmB,QAAA,CAAS,eAAC,IAAkB,IAAA,CAAK,kBAAC,CAAkB,cAAC,CAAc,EAAE,CAUrH;YACM,cAAc,GAApB,CAVoC,cAAC,CAAc,YAAC,CAAA,CAAY;QAWhE,CAAK;QAED,MAAJ,CAVW,cAAA,IAAkB,QAAA,CAAS,eAAC,CAAe;IAWtD,CAAG;;;;;;IAMH,8BAdG,GAcH,UAdG,OAAA,EAAA,KAAA;QAAA,sBAAA,EAAA,YAAA;QAeC,IAAJ,gBAAA,CAdQ,UAAY,CAAW;QAe3B,IAAJ,gBAAA,CAdQ,YAAA,GAA2B,EAAA,KAAE,EAAM,CAAA,EAAG,MAAA,EAAQ,CAAA,EAAG,GAAA,EAAK,CAAA,EAAG,MAAA,EAAQ,CAAA,EAAG,IAAA,EAAM,CAAA,EAAG,KAAA,EAAO,CAAA,EAAE,CAAC;QAgB3F,EAAJ,CAAA,CAAQ,IAdC,CAAI,QAAC,CAAQ,OAAC,EAAQ,UAAA,CAAW,KAAK,OAAA,CAc/C,CAdwD,CAcxD;YACM,UAAU,GAdG,OAAA,CAAQ,qBAAC,EAAqB,CAAE;QAenD,CAAK;QAdL,IAAA,CAAW,CAAX;YAeM,IAAN,gBAAA,CAdY,cAAA,GAAiB,IAAA,CAAK,YAAC,CAAY,OAAC,CAAO,CAAC;YAgBlD,UAAU,GAdG,IAAA,CAAK,MAAC,CAAM,OAAC,EAAQ,KAAA,CAAM,CAAC;YAgBzC,EAAN,CAAA,CAAU,cAdC,KAAkB,QAAA,CAAS,eAAC,CAcvC,CAduD,CAcvD;gBACQ,YAAY,GAdG,IAAA,CAAK,MAAC,CAAM,cAAC,EAAe,KAAA,CAAM,CAAC;YAe1D,CAAO;YAED,YAAY,CAdC,GAAC,IAAM,cAAA,CAAe,SAAC,CAAS;YAe7C,YAAY,CAdC,IAAC,IAAO,cAAA,CAAe,UAAC,CAAU;QAerD,CAAK;QAED,UAAU,CAdC,GAAC,IAAM,YAAA,CAAa,GAAC,CAAG;QAenC,UAAU,CAdC,MAAC,IAAS,YAAA,CAAa,GAAC,CAAG;QAetC,UAAU,CAdC,IAAC,IAAO,YAAA,CAAa,IAAC,CAAI;QAerC,UAAU,CAdC,KAAC,IAAQ,YAAA,CAAa,IAAC,CAAI;QAgBtC,EAAJ,CAAA,CAAQ,KAdC,CAcT,CAde,CAcf;YACM,UAAU,CAdC,GAAC,GAAK,IAAA,CAAK,KAAC,CAAK,UAAC,CAAU,GAAC,CAAG,CAAC;YAe5C,UAAU,CAdC,MAAC,GAAQ,IAAA,CAAK,KAAC,CAAK,UAAC,CAAU,MAAC,CAAM,CAAC;YAelD,UAAU,CAdC,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,UAAC,CAAU,IAAC,CAAI,CAAC;YAe9C,UAAU,CAdC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC;QAetD,CAAK;QAED,MAAJ,CAdW,UAAA,CAAW;IAetB,CAAG;;;;;;IAMH,4BAlBG,GAkBH,UAlBG,OAAA,EAAA,KAAA;QAAA,sBAAA,EAAA,YAAA;QAmBC,IAAJ,gBAAA,CAlBU,KAAA,GAAQ,OAAA,CAAQ,qBAAC,EAAqB,CAAE;QAmB9C,IAAJ,gBAAA,CAlBU,cAAA,GAAiB;YAmBrB,GAAG,EAlBE,MAAA,CAAO,WAAC,GAAa,QAAA,CAAS,eAAC,CAAe,SAAC;YAmBpD,IAAI,EAlBE,MAAA,CAAO,WAAC,GAAa,QAAA,CAAS,eAAC,CAAe,UAAC;SAmBtD,CAlBC;QAoBF,IAAJ,gBAAA,CAlBQ,QAAA,GAAW;YAmBb,MAAM,EAlBE,KAAA,CAAM,MAAC,IAAS,OAAA,CAAQ,YAAC;YAmBjC,KAAK,EAlBE,KAAA,CAAM,KAAC,IAAQ,OAAA,CAAQ,WAAC;YAmB/B,GAAG,EAlBE,KAAA,CAAM,GAAC,GAAK,cAAA,CAAe,GAAC;YAmBjC,MAAM,EAlBE,KAAA,CAAM,MAAC,GAAQ,cAAA,CAAe,GAAC;YAmBvC,IAAI,EAlBE,KAAA,CAAM,IAAC,GAAM,cAAA,CAAe,IAAC;YAmBnC,KAAK,EAlBE,KAAA,CAAM,KAAC,GAAO,cAAA,CAAe,IAAC;SAmBtC,CAlBC;QAoBF,EAAJ,CAAA,CAAQ,KAlBC,CAkBT,CAlBe,CAkBf;YACM,QAAQ,CAlBC,MAAC,GAAQ,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,MAAC,CAAM,CAAC;YAmB9C,QAAQ,CAlBC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,KAAC,CAAK,CAAC;YAmB5C,QAAQ,CAlBC,GAAC,GAAK,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,GAAC,CAAG,CAAC;YAmBxC,QAAQ,CAlBC,MAAC,GAAQ,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,MAAC,CAAM,CAAC;YAmB9C,QAAQ,CAlBC,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,IAAC,CAAI,CAAC;YAmB1C,QAAQ,CAlBC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,QAAC,CAAQ,KAAC,CAAK,CAAC;QAmBlD,CAAK;QAED,MAAJ,CAlBW,QAAA,CAAS;IAmBpB,CAAG;;;;;;;;IAQH,sCAxBG,GAwBH,UAxBG,WAAA,EAAA,aAAA,EAAA,SAAA,EAAA,YAAA;QA0BC,IAAJ,gBAAA,CAxBU,cAAA,GAAiB,YAAA,GAAe,IAAA,CAAK,MAAC,CAAM,WAAC,EAAY,KAAA,CAAM,GAAG,IAAA,CAAK,QAAC,CAAQ,WAAC,EAAY,KAAA,CAAM,CAAC;QAyB1G,IAAJ,gBAAA,CAxBU,WAAA,GAAc,aAAA,CAAc,qBAAC,EAAqB,CAAE;QAyB1D,IAAJ,gBAAA,CAxBU,gBAAA,GAAmB,SAAA,CAAU,KAAC,CAAK,GAAC,CAAG,CAAC,CAAC,CAAC,IAAI,KAAA,CAAM;QAyB1D,IAAJ,gBAAA,CAxBU,kBAAA,GAAqB,SAAA,CAAU,KAAC,CAAK,GAAC,CAAG,CAAC,CAAC,CAAC,IAAI,QAAA,CAAS;QA0B/D,IAAJ,gBAAA,CAxBQ,gBAAA,GAA+B;YAyBjC,QAAQ,EAxBE,WAAA,CAAY,MAAC,IAAS,aAAA,CAAc,YAAC;YAyB/C,OAAO,EAxBE,WAAA,CAAY,KAAC,IAAQ,aAAA,CAAc,WAAC;YAyB7C,KAAK,EAxBE,CAAA;YAyBP,QAAQ,EAxBE,WAAA,CAAY,MAAC,IAAS,aAAA,CAAc,YAAC;YAyB/C,MAAM,EAxBE,CAAA;YAyBR,OAAO,EAxBE,WAAA,CAAY,KAAC,IAAQ,aAAA,CAAc,WAAC;SAyB9C,CAxBC;QA0BF,MAAJ,CAAA,CAAY,gBAxBC,CAwBb,CAAA,CAAA;YACM,KAxBK,KAAA;gBAyBH,gBAAgB,CAxBC,GAAC,GAAK,cAAA,CAAe,GAAC,GAAK,aAAA,CAAc,YAAC,CAAY;gBAyBvE,KAAR,CAAc;YACR,KAxBK,QAAA;gBAyBH,gBAAgB,CAxBC,GAAC,GAAK,cAAA,CAAe,GAAC,GAAK,cAAA,CAAe,MAAC,CAAM;gBAyBlE,KAAR,CAAc;YACR,KAxBK,MAAA;gBAyBH,gBAAgB,CAxBC,IAAC,GAAM,cAAA,CAAe,IAAC,GAAM,aAAA,CAAc,WAAC,CAAW;gBAyBxE,KAAR,CAAc;YACR,KAxBK,OAAA;gBAyBH,gBAAgB,CAxBC,IAAC,GAAM,cAAA,CAAe,IAAC,GAAM,cAAA,CAAe,KAAC,CAAK;gBAyBnE,KAAR,CAAc;QACd,CAAK;QAED,MAAJ,CAAA,CAAY,kBAxBC,CAwBb,CAAA,CAAA;YACM,KAxBK,KAAA;gBAyBH,gBAAgB,CAxBC,GAAC,GAAK,cAAA,CAAe,GAAC,CAAG;gBAyB1C,KAAR,CAAc;YACR,KAxBK,QAAA;gBAyBH,gBAAgB,CAxBC,GAAC,GAAK,cAAA,CAAe,GAAC,GAAK,cAAA,CAAe,MAAC,GAAQ,aAAA,CAAc,YAAC,CAAY;gBAyB/F,KAAR,CAAc;YACR,KAxBK,MAAA;gBAyBH,gBAAgB,CAxBC,IAAC,GAAM,cAAA,CAAe,IAAC,CAAI;gBAyB5C,KAAR,CAAc;YACR,KAxBK,OAAA;gBAyBH,gBAAgB,CAxBC,IAAC,GAAM,cAAA,CAAe,IAAC,GAAM,cAAA,CAAe,KAAC,GAAO,aAAA,CAAc,WAAC,CAAW;gBAyB/F,KAAR,CAAc;YACR,KAxBK,QAAA;gBAyBH,EAAR,CAAA,CAAY,gBAxBC,KAAoB,KAAA,IAAS,gBAAA,KAAqB,QAAA,CAwB/D,CAxByE,CAwBzE;oBACU,gBAAgB,CAxBC,IAAC,GAAM,cAAA,CAAe,IAAC,GAAM,cAAA,CAAe,KAAC,GAAO,CAAA,GAAI,aAAA,CAAc,WAAC,GAAa,CAAA,CAAE;gBAyBjH,CAAS;gBAxBT,IAAA,CAAe,CAAf;oBAyBU,gBAAgB,CAxBC,GAAC,GAAK,cAAA,CAAe,GAAC,GAAK,cAAA,CAAe,MAAC,GAAQ,CAAA,GAAI,aAAA,CAAc,YAAC,GAAc,CAAA,CAAE;gBAyBjH,CAAS;gBACD,KAAR,CAAc;QACd,CAAK;QAED,gBAAgB,CAxBC,GAAC,GAAK,IAAA,CAAK,KAAC,CAAK,gBAAC,CAAgB,GAAC,CAAG,CAAC;QAyBxD,gBAAgB,CAxBC,MAAC,GAAQ,IAAA,CAAK,KAAC,CAAK,gBAAC,CAAgB,MAAC,CAAM,CAAC;QAyB9D,gBAAgB,CAxBC,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,gBAAC,CAAgB,IAAC,CAAI,CAAC;QAyB1D,gBAAgB,CAxBC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,gBAAC,CAAgB,KAAC,CAAK,CAAC;QA0B5D,MAAJ,CAxBW,gBAAA,CAAiB;IAyB5B,CAAG;IACH,kBAAC;AAAD,CAAC,AApKD,IAoKC;AAED,IAxBM,eAAA,GAAkB,IAAI,WAAA,EAAY,CAAE;;;;;;;;AAgC1C,0BACI,WAAwB,EAAE,aAA0B,EAAE,SAAiB,EAAE,YAAsB;IACjG,IAAF,gBAAA,CA/BQ,GAAA,GAAM,eAAA,CAAgB,gBAAC,CAAgB,WAAC,EAAY,aAAA,EAAe,SAAA,EAAW,YAAA,CAAa,CAAC;IAiClG,aAAa,CA/BC,KAAC,CAAK,GAAC,GAAK,GAAI,CAAG,GAAC,OAAG,CAAI;IAgCzC,aAAa,CA/BC,KAAC,CAAK,IAAC,GAAM,GAAI,CAAG,IAAC,OAAI,CAAI;AAgC7C,CAAC;ADxJD,IAAMC,+BAAA,GAAgC;IACpC,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;IACjD,KAAK,EAAE,IAAA;CACR,CAAC;AAEF,IAAM,wBAAA,GAA2B;IAC/B,OAAO,EAAE,aAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;IACjD,KAAK,EAAE,IAAA;CACR,CAAC;;;;;AAKF;;;;;;;;;;;IA4FA,4BAJc,gBAAkB,EAAgC,MAAQ,EAAoB,MAAQ,EACtF,SAAW,EAAmB,IAAM,EAA0B,MAAQ,EACtE,QAAU,EAA8B,SAAW;QAEjE,iBAaG;QAjBW,IAAd,CAAA,gBAAc,GAAA,gBAAA,CAAkB;QAAgC,IAAhE,CAAA,MAAgE,GAAA,MAAA,CAAQ;QAAoB,IAA5F,CAAA,MAA4F,GAAA,MAAA,CAAQ;QACtF,IAAd,CAAA,SAAc,GAAA,SAAA,CAAW;QAAmB,IAA5C,CAAA,IAA4C,GAAA,IAAA,CAAM;QACpC,IAAd,CAAA,QAAc,GAAA,QAAA,CAAU;QAA8B,IAAtD,CAAA,SAAsD,GAAA,SAAA,CAAW;QAtFvD,IAAV,CAAA,KAAU,GAAqC,IAAA,CAAK;;;;;QAkDjD,IAAH,CAAA,SAAY,GAEG,aAAA,CAAc;;;;;QAsB1B,IAAH,CAAA,QAAW,GAEG,IAAI,YAAA,EAAwC,CAAG;QAEnD,IAAV,CAAA,SAAU,GAAY,UAAA,CAAI,IAA1B,CAAkC,CAAG;QAC3B,IAAV,CAAA,UAAU,GAAa,cAAvB,CAA6B,CAAG;QACtB,IAAV,CAAA,gBAAU,GAAmB,cAA7B,CAAmC,CAAG;QAgBlC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjD,EAAN,CAAA,CAAU,KAAI,CAAC,KAAK,CAApB,CAAsB,CAAtB;gBACQ,gBAAgB,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YACvG,CAAO;QACP,CAAK,CAAC,CAAC;IACP,CAAG;;;;;IAKH,6CAZG,GAYH,UAZG,EAAA,IAAiD,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAYxE,CAZyE;;;;;IAiBzE,8CAfG,GAeH,UAfG,EAAA,IAAwC,IAAA,CAAK,UAAC,GAAY,EAAA,CAAG,CAehE,CAfiE;;;;;IAoBjE,sDAlBG,GAkBH,UAlBG,EAAA,IAAiD,IAAA,CAAK,gBAAC,GAAkB,EAAA,CAAG,CAkB/E,CAlBgF;;;;;;IAuBhF,6CArBG,GAqBH,UArBG,UAAA;QAsBC,IAAI,CArBC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,UAAA,EAAY,UAAA,CAAW,CAAC;QAsB9E,EAAJ,CAAA,CAAQ,IArBC,CAAI,MAAC,EAAM,CAqBpB,CArBuB,CAqBvB;YACM,IAAI,CArBC,KAAC,CAAK,QAAC,CAAQ,gBAAC,CAAgB,UAAC,CAAU,CAAC;QAsBvD,CAAK;IACL,CAAG;;;;;IAKH,qCAxBG,GAwBH,UAxBG,CAAA;QAyBC,IAAJ,gBAAA,CAxBU,KAAA,GAAQ,CAAA,CAAE,KAAC,CAAK;QA0BtB,EAAJ,CAAA,CAAQ,KAxBC,KAAS,IAAA,IAAQ,KAAA,KAAU,SAAA,CAwBpC,CAxB+C,CAwB/C;YACM,MAAN,CAxBa,IAAA,CAAK;QAyBlB,CAAK;QAED,EAAJ,CAAA,CAAQ,CAxBC,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,KAAC,CAAK,CAwBtC,CAxBwC,CAwBxC;YACM,MAAN,CAxBa,EAAA,SAAE,EAAU,EAAA,OAAE,EAAQ,CAAA,CAAE,KAAC,EAAK,EAAC,CAAC;QAyB7C,CAAK;QAED,EAAJ,CAAA,CAAQ,IAxBC,CAAI,OAAC,IAAU,OAAA,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,MAAC,CAAM,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,OAAC,CAAO,CAAC,CAwB9E,CAxBgF,CAwBhF;YACM,MAAN,CAxBa,EAAA,SAAE,EAAU,EAAA,cAAE,EAAe,IAAA,CAAK,OAAC,EAAO,EAAC,CAAC;QAyBzD,CAAK;QAED,EAAJ,CAAA,CAAQ,IAxBC,CAAI,OAAC,IAAU,OAAA,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,KAAC,CAAK,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,OAAC,CAAO,CAAC,CAwB7E,CAxB+E,CAwB/E;YACM,MAAN,CAxBa,EAAA,SAAE,EAAU,EAAA,aAAE,EAAc,IAAA,CAAK,OAAC,EAAO,EAAC,CAAC;QAyBxD,CAAK;IACL,CAAG;;;;;IAKH,uCA3BG,GA2BH,UA3BG,KAAA;QA4BC,IAAJ,gBAAA,CA3BU,OAAA,GAAU,KAAA,GAAQ,IAAI,OAAA,CAAQ,KAAC,CAAK,IAAC,EAAK,KAAA,CAAM,KAAC,EAAM,KAAA,CAAM,GAAC,CAAG,GAAG,IAAA,CAAK;QA4B/E,IAAI,CA3BC,MAAC,GAAQ,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,KAAC,CAAK,GAAG,OAAA,GAAU,IAAA,CAAK;QA4B7D,IAAI,CA3BC,gBAAC,CAAgB,IAAC,CAAI,MAAC,CAAM,CAAC;IA4BvC,CAAG;;;;;IAKH,6CA9BG,GA8BH,UA9BG,KAAA;QA+BC,IAAI,CA9BC,MAAC,GAAQ,IAAA,CAAK,QAAC,CAAQ,WAAC,CAAW,IAAC,CAAI,gBAAC,CAAgB,KAAC,CAAK,KAAC,CAAK,EAAE,IAAA,CAAK,CAAC;QA+BlF,IAAI,CA9BC,SAAC,CAAS,IAAC,CAAI,MAAC,GAAQ,IAAA,CAAK,MAAC,CAAM,QAAC,EAAQ,GA8BtD,CA9B0D,KAAE,KAAS,EAAA,GAAK,IAAA,GAAO,KAAA,CAAM,CAAC,CAAC;QA+BrF,IAAI,CA9BC,gBAAC,CAAgB,IAAC,CAAI,MAAC,CAAM,CAAC;IA+BvC,CAAG;;;;IAIH,mCAhCG,GAgCH,cAhCa,MAgCb,CAhCoB,CAAA,CAAE,IAAC,CAAI,KAAC,CAAK,CAgCjC,CAhCkC;;;;;IAqClC,iCAhCG,GAgCH;QAAA,iBAkBG;QAjBC,EAAJ,CAAA,CAAQ,CAhCC,IAAC,CAAI,MAAC,EAAM,CAgCrB,CAhCwB,CAgCxB;YACM,IAAN,gBAAA,CAhCY,EAAA,GAAK,IAAA,CAAK,IAAC,CAAI,uBAAC,CAAuB,aAAC,CAAa,CAAC;YAiC5D,IAAI,CAhCC,KAAC,GAAO,IAAA,CAAK,MAAC,CAAM,eAAC,CAAe,EAAC,CAAE,CAAC;YAkC7C,IAAI,CAhCC,kBAAC,CAAkB,IAAC,CAAI,KAAC,CAAK,QAAC,CAAQ,aAAC,CAAa,CAAC;YAiC3D,IAAI,CAhCC,KAAC,CAAK,QAAC,CAAQ,UAAC,CAAU,IAAC,CAAI,MAAC,CAAM,CAAC;YAiC5C,IAAI,CAhCC,sBAAC,CAAsB,IAAC,CAAI,KAAC,CAAK,QAAC,CAAQ,CAAC;YAiCjD,IAAI,CAhCC,8BAAC,CAA8B,IAAC,CAAI,KAAC,CAAK,QAAC,CAAQ,CAAC;YAiCzD,IAAI,CAhCC,KAAC,CAAK,QAAC,CAAQ,QAAC,EAAQ,CAAE;;YAmC/B,IAAI,CAhCC,KAAC,CAAK,QAAC,CAAQ,gBAAC,CAAgB,UAAC,YAAC;gBAiCrC,KAAI,CAhCC,UAAC,CAAU,YAAC,CAAY,CAAC;gBAiC9B,KAAI,CAhCC,SAAC,CAAS,YAAC,CAAY,CAAC;gBAiC7B,KAAI,CAhCC,KAAC,EAAK,CAAE;YAiCrB,CAAO,CAhCC,CAAC;QAiCT,CAAK;IACL,CAAG;;;;;IAKH,kCAhCG,GAgCH;QACI,EAAJ,CAAA,CAAQ,IAhCC,CAAI,MAAC,EAAM,CAgCpB,CAhCuB,CAgCvB;YACM,IAAI,CAhCC,MAAC,CAAM,MAAC,CAAM,IAAC,CAAI,MAAC,CAAM,OAAC,CAAO,IAAC,CAAI,KAAC,CAAK,QAAC,CAAQ,CAAC,CAAC;YAiC7D,IAAI,CAhCC,KAAC,GAAO,IAAA,CAAK;QAiCxB,CAAK;IACL,CAAG;;;;;IAKH,mCAhCG,GAgCH;QACI,EAAJ,CAAA,CAAQ,IAhCC,CAAI,MAAC,EAAM,CAgCpB,CAhCuB,CAgCvB;YACM,IAAI,CAhCC,KAAC,EAAK,CAAE;QAiCnB,CAAK;QAhCL,IAAA,CAAW,CAAX;YAiCM,IAAI,CAhCC,IAAC,EAAI,CAAE;QAiClB,CAAK;IACL,CAAG;;;;;;;;;IASH,uCAjCG,GAiCH,UAjCG,IAAA;QAkCC,EAAJ,CAAA,CAAQ,IAjCC,CAAI,MAAC,EAAM,CAiCpB,CAjCuB,CAiCvB;YACM,IAAI,CAjCC,KAAC,CAAK,QAAC,CAAQ,UAAC,CAAU,IAAC,CAAI,CAAC;QAkC3C,CAAK;IACL,CAAG;;;;IAIH,mCAnCG,GAmCH,cAnCa,IAAA,CAAK,UAAC,EAAU,CAAE,CAmC/B,CAnCgC;;;;;IAwChC,wCAtCG,GAsCH,UAtCG,OAAA;QAuCC,EAAJ,CAAA,CAAQ,OAtCC,CAAO,SAAC,CAAS,IAAI,OAAA,CAAQ,SAAC,CAAS,CAsChD,CAtCkD,CAsClD;YACM,IAAI,CAtCC,gBAAC,EAAgB,CAAE;QAuC9B,CAAK;IACL,CAAG;;;;IAIH,wCAxCG,GAwCH;QACI,IAAI,CAxCC,KAAC,EAAK,CAAE;QAyCb,IAAI,CAxCC,iBAAC,CAAiB,WAAC,EAAW,CAAE;IAyCzC,CAAG;;;;;IAtCA,mDAAA,GAAA,UAAA,kBAAA;QAAA,iBAoDA;QARC,CAAC,aA3CC,EAAc,eAAA,EAAiB,gBAAA,EAAkB,cAAA,EAAgB,SAAA,EAAW,SAAA,EAAW,YAAA;YA4CxF,aAAa,EA3CE,gBAAA,EAAkB,cAAA,EAAgB,iBAAA,CAAkB;aA4C/D,OA3CC,CAAO,UAAC,UAAY;YA4CpB,EAAV,CAAA,CAAc,KA3CC,CAAI,UAAC,CAAU,KAAK,SAAA,CA2CnC,CA3C8C,CA2C9C;gBACY,kBAAkB,CA3CC,UAAC,CAAU,GAAG,KAAA,CAAK,UAAC,CAAU,CAAC;YA4C9D,CAAW;QACX,CAAS,CA3CC,CAAC;QA4CP,kBAAkB,CA3CC,SAAC,GAAW,IAAA,CAAK,SAAC,IAAY,IAAA,CAAK,MAAC,CAAM;IA4CjE,CAAG;;;;;IAzCA,+CAAA,GAAA,UAAA,aAAA;QA+CC,IAAI,CA9CC,SAAC,CAAS,QAAC,CAAQ,aAAC,EAAc,eAAA,CAAgB,CAAC;QA+CxD,IAAI,CA9CC,SAAC,CAAS,QAAC,CAAQ,aAAC,EAAc,SAAA,EAAW,GAAA,CAAI,CAAC;IA+C3D,CAAG;;;;;IA5CA,2DAAA,GAAA,UAAA,kBAAA;QAAA,iBAmDA;QADC,kBAAkB,CAjDC,QAAC,CAAQ,SAAC,CAAS,UAAA,IAAC,IAAO,OAAA,KAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,IAAC,CAAI,EAAxB,CAAwB,CAAC,CAAC;IAkD5E,CAAG;;;;;IA/CA,6CAAA,GAAA,UAAA,KAAA;QAqDC,IAAI,CApDC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,OAAA,EAAS,IAAA,CAAK,gBAAC,CAAgB,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC;QAqDpG,EAAJ,CAAA,CAAQ,IApDC,CAAI,MAAC,EAAM,CAoDpB,CApDuB,CAoDvB;YACM,IAAI,CApDC,KAAC,CAAK,QAAC,CAAQ,UAAC,CAAU,KAAC,CAAK,CAAC;YAqDtC,IAAI,CApDC,UAAC,EAAU,CAAE;QAqDxB,CAAK;IACL,CAAG;;CApSH;AAiPO,kBAAP,CAAA,UAAO,GAAoC;IAqD3C,EApDE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAqDvB,QAAQ,EApDE,sBAAA;gBAqDV,QAAQ,EApDE,eAAA;gBAqDV,IAAI,EApDE,EAAA,UAAE,EAAW,uCAAA,EAAyC,aAAA,EAAe,SAAA,EAAW,QAAA,EAAU,UAAA,EAAW;gBAqD3G,SAAS,EApDE,CAAAA,+BAAE,EAA8B,wBAAA,EAA0B,oBAAA,CAAqB;aAqD3F,EApDC,EAAG;CAqDJ,CApDC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAuDD,EAAC,IAAI,EAAE,sBAAsB,GAAG;IAChC,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,MAAM,GAAG;IAChB,EAAC,IAAI,EAAE,oBAAoB,GAAG;IAC9B,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EA/DA,CA+DA,CAAC;AArDK,kBAAP,CAAA,cAAO,GAAyD;IAuDhE,aAAa,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDhC,eAAe,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDlC,gBAAgB,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDnC,cAAc,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDjC,SAAS,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuD5B,SAAS,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuD5B,YAAY,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuD/B,aAAa,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDhC,WAAW,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuD9B,cAAc,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDjC,iBAAiB,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuDpC,WAAW,EAtDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAuD9B,UAAU,EAtDE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAuD7B,CAtDC;AD5TF;IAAA;;;;;IAQA,sCAAG,GAAH,cAAc,MAAd,CAAqB,CAAA,IAAE,CAAI,QAAC,IAA5B,CAAuC,IAAE,CAAI,IAAC,CAAI,KAAC,KAAS,IAAA,CAAK,YAAC,IAAe,IAAA,CAAK,QAAC,CAAQ,CAAC,CAAhG,CAAiG;;CARjG;AASO,oBAAP,CAAA,UAAO,GAAoC;IAC3C,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBACvB,QAAQ,EAAE,wBAAA;gBACV,MAAM,EAAE,CAAA,8MAWP,CAAC;gBACF,IAAI,EAAE;oBACJ,oBAAoB,EAAE,UAAA;oBACtB,oBAAoB,EAAE,UAAA;oBACtB,oBAAoB,EAAE,WAAA;oBACtB,iBAAiB,EAAE,WAAA;oBACnB,uBAAuB,EAAE,WAAA;iBAC1B;gBACD,QAAQ,EAAE,gBAAA;aACX,EAAC,EAAG;CACJ,CAAC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAGA,EAHA,CAGA,CAAC;AADK,oBAAP,CAAA,cAAO,GAAyD;IAGhE,cAAc,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAGjC,MAAM,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAGzB,UAAU,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAG7B,UAZE,EAUU,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAG5B,CAFC;ADvCF;;;;;IAcA,uCADqB,IAAM,EAA2B,QAAU;QAA3C,IAArB,CAAA,IAAqB,GAAA,IAAA,CAAM;QAA2B,IAAtD,CAAA,QAAsD,GAAA,QAAA,CAAU;QAX9D,IAAF,CAAA,KAAO,GAEa,EAAA,CAAG;QAKpB,IAAH,CAAA,MAAS,GAEG,IAAI,YAAA,EAAqB,CAAG;QAEoC,IAAA,CAAA,MAAA,GAAA,QAAA,CAAA,SAAA,EAAA,CAAA;IAA5E,CAA4E;;;;;IAO5E,mDALG,GAKH,UALG,OAAA;QAMC,EAAJ,CAAA,CAAQ,OALC,CAAO,SAAC,CAAS,IAAI,OAAA,CAAQ,SAAC,CAAS,IAAI,OAAA,CAAQ,MAAC,CAAM,CAKnE,CALqE,CAKrE;YACM,IAAI,CALC,cAAC,EAAc,CAAE;YAMtB,IAAI,CALC,eAAC,EAAe,CAAE;QAM7B,CAAK;IACL,CAAG;;;;;IAKH,mDARG,GAQH,UARG,KAAA,IAA4B,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,CAAI,IAAC,EAAK,SAAA,CAAU,KAAC,CAAK,EAAE,CAAA,CAAE,CAAC,CAAC,CAQlG,CARmG;;;;;IAanG,kDAXG,GAWH,UAXG,IAAA,IAA0B,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,IAAI,OAAA,CAAQ,SAAC,CAAS,IAAC,CAAI,EAAE,IAAA,CAAK,IAAC,CAAI,KAAC,EAAM,CAAA,CAAE,CAAC,CAAC,CAWhG,CAXiG;;;;IAE9F,uDAAA,GAAA;QAAA,iBAyBA;QAXC,IAAI,CAbC,MAAC,GAAQ,IAAA,CAAK,QAAC,CAAQ,SAAC,EAAS,CAAE;QAexC,EAAJ,CAAA,CAAQ,IAbC,CAAI,IAAC,IAAO,IAAA,CAAK,IAAC,CAAI,IAAC,KAAQ,IAAA,CAAK,OAAC,CAAO,IAAC,CAatD,CAb2D,CAa3D;YACM,IAAN,gBAAA,CAbY,KAAA,GAAQ,IAAA,CAAK,MAAC,CAAM,SAAC,CAAS,UAAA,KAAC,IAAQ,OAAA,KAAA,KAAU,KAAA,CAAK,OAAC,CAAO,KAAC,EAAxB,CAAwB,CAAK,CAAC;YAc3E,IAAI,CAbC,MAAC,GAAQ,IAAA,CAAK,MAAC,CAAM,KAAC,CAAK,KAAC,CAAK,CAAC;QAc7C,CAAK;QAED,EAAJ,CAAA,CAAQ,IAbC,CAAI,IAAC,IAAO,IAAA,CAAK,IAAC,CAAI,IAAC,KAAQ,IAAA,CAAK,OAAC,CAAO,IAAC,CAatD,CAb2D,CAa3D;YACM,IAAN,gBAAA,CAbY,KAAA,GAAQ,IAAA,CAAK,MAAC,CAAM,SAAC,CAAS,UAAA,KAAC,IAAQ,OAAA,KAAA,KAAU,KAAA,CAAK,OAAC,CAAO,KAAC,EAAxB,CAAwB,CAAK,CAAC;YAc3E,IAAI,CAbC,MAAC,GAAQ,IAAA,CAAK,MAAC,CAAM,KAAC,CAAK,CAAC,EAAE,KAAA,GAAQ,CAAA,CAAE,CAAC;QAcpD,CAAK;IACL,CAAG;;;;IAXA,sDAAA,GAAA;QAAA,iBAiBA;QADC,IAAI,CAfC,KAAC,GAAO,KAAA,CAAM,IAAC,CAAI,EAAC,MAAC,EAAO,IAAA,CAAK,OAAC,CAAO,IAAC,GAAM,IAAA,CAAK,OAAC,CAAO,IAAC,GAAM,CAAA,EAAE,EAAE,UAAA,CAAE,EAAE,CAAA,IAAM,OAAA,KAAA,CAAK,OAAC,CAAO,IAAC,GAAM,CAAA,EAApB,CAAoB,CAAE,CAAC;IAgBlH,CAAG;;CAzDH;AA2CO,6BAAP,CAAA,UAAO,GAAoC;IAgB3C,EAfE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAgBvB,QAAQ,EAfE,kCAAA;gBAgBV,MAAM,EAfE,CAAA,kQAyBP,CAfC;gBAgBF,QAAQ,EAfE,qQAkBE;oBACR,yOAZJ,CAAF,mFAAA;aAgBC,EAfC,EAAG;CAgBJ,CAfC;;;;AAED,6BAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAkBD,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EApBA,CAoBA,CAAC;AAhBK,6BAAP,CAAA,cAAO,GAAyD;IAkBhE,MAAM,EAjBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkBzB,UAAU,EAjBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkB7B,SAAS,EAjBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkB5B,SAAS,EAjBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkB5B,QAAQ,EAjBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAkB3B,CAjBC;AD/EF;;;AAGA;IADC,oCAAA;IACD;;;;;;IAIA,yCAJG,GAIH,cAJqB,MAIrB,CAJ4B,CAAA,CAAE,CAI9B,CAJ+B;;;;IAQ/B,oCANG,GAMH,cANgB,MAMhB,CANuB,CAAA,CAAE,EAAE,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC,CAM/D,CANgE;;;;IAUhE,2CARG,GAQH,cARuB,MAQvB,CAR8B,CAAA,CAAE,CAQhC,CARiC;;;;;IAajC,kCAXG,GAWH,UAXG,IAAA;QAYC,MAAJ,CAXW,IAAA,IAAQ,QAAA,CAAS,IAAC,CAAI,IAAC,CAAI,IAAI,QAAA,CAAS,IAAC,CAAI,KAAC,CAAK,IAAI,QAAA,CAAS,IAAC,CAAI,GAAC,CAAG;YAY5E,CAAC,KAXC,CAAK,IAAC,CAAI,WAAC,CAAW,IAAC,CAAI,CAAC,OAAC,EAAO,CAAE,CAAC;IAYjD,CAAG;;;;;;IAMH,iCAfG,GAeH,UAfG,IAAA,EAAA,GAAA;QAgBC,GAAG,GAfG,CAAA,GAAE,CAAG;QAgBX,IAAJ,gBAAA,CAfQ,KAAA,GAAQ,IAAA,CAAK,qBAAC,CAAqB,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,IAAC,CAAI,CAAC;QAgB9D,EAAJ,CAAA,CAAQ,GAfC,IAAM,CAAA,CAef,CAfkB,CAelB;YACM,OAAO,GAfC,IAAM,CAAA,EAAG,CAevB;gBACQ,IAAI,GAfG,IAAA,CAAK,QAAC,CAAQ,IAAC,EAAK,IAAA,CAAK,KAAC,GAAO,CAAA,CAAE,CAAC;gBAgB3C,KAAK,GAfG,IAAA,CAAK,qBAAC,CAAqB,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,IAAC,CAAI,CAAC;gBAgB1D,GAAG,IAfI,KAAA,CAAM;YAgBrB,CAAO;QACP,CAAK;QAfL,IAAA,CAAW,EAAX,CAAA,CAAW,GAAK,GAAK,KAAA,CAArB,CAA4B,CAA5B;YAgBM,OAAO,GAfC,GAAK,KAAA,EAAO,CAe1B;gBACQ,GAAG,IAfI,KAAA,CAAM;gBAgBb,IAAI,GAfG,IAAA,CAAK,QAAC,CAAQ,IAAC,EAAK,IAAA,CAAK,KAAC,GAAO,CAAA,CAAE,CAAC;gBAgB3C,KAAK,GAfG,IAAA,CAAK,qBAAC,CAAqB,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,IAAC,CAAI,CAAC;YAgBlE,CAAO;QACP,CAAK;QACD,IAAI,CAfC,GAAC,GAAK,GAAA,CAAI;QAgBf,MAAJ,CAfW,IAAA,CAAK;IAgBhB,CAAG;;;;;;IAMH,mCAnBG,GAmBH,UAnBG,IAAA,EAAA,KAAA;QAoBC,KAAK,GAnBG,CAAA,KAAE,CAAK;QAoBf,IAAI,CAnBC,IAAC,GAAM,IAAA,CAAK,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,CAAC,KAAC,GAAO,CAAA,CAmBhD,GAnBqD,EAAA,CAAG,CAAC;QAoBrD,IAAI,CAnBC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,CAAC,CAAC,KAAC,GAAO,CAAA,CAmBtC,GAnB2C,EAAA,GAAK,EAAA,CAmBhD,GAnBsD,EAAA,CAAG,GAAG,CAAA,CAAE;QAoB1D,MAAJ,CAnBW,IAAA,CAAK;IAoBhB,CAAG;;;;;;IAMH,kCAvBG,GAuBH,UAvBG,IAAA,EAAA,SAAA;QAwBC,IAAI,CAvBC,IAAC,GAAM,CAAA,SAAE,CAAS;QAwBvB,MAAJ,CAvBW,IAAA,CAAK;IAwBhB,CAAG;;;;;;IAMH,qCA3BY,GA2BZ,UA3BY,IAAA,IA2BZ,CA3BY;;;;;;;;IAmCZ,kCAjCY,GAiCZ,UAjCY,IAAA,EAAA,MAAA,EAAA,MAAA,IAiCZ,CAjCY;;;;;;;;IAyCZ,kCAvCY,GAuCZ,UAvCY,IAAA,EAAA,MAAA,EAAA,MAAA,IAuCZ,CAvCY;;;;;;;IA8CZ,wCA5CY,GA4CZ,UA5CY,IAAA,EAAA,cAAA,IA4CZ,CA5CY;;;;;IAiDZ,mCA/CY,GA+CZ,cAAA,CA/CY;;;;;;;;IAuDZ,wCAjDY,GAiDZ,UAjDY,KAAA,IAiDZ,CAjDY;;;;;;;IAwDZ,sCAnDY,GAmDZ,UAnDY,SAAA,IAmDZ,CAnDY;;;;;;;;;;IA6DZ,gDAtDY,GAsDZ,UAtDY,KAAA,EAAA,IAAA,IAsDZ,CAtDY;;;;;IAET,6CAAA,GAAA,UAAA,IAAA,IAAqD,MAAxD,CAA+D,CAAA,EAAE,GAAI,EAAA,GAAK,IAAA,CAA1E,GAAkF,EAAA,GAAK,EAAA,CAAG,CAA1F,CAA2F;;;;;;;;;IAOxF,yCAAA,GAAA,UAAA,IAAA,EAAA,KAAA;QA4DC,MAAJ,CA3DW,IAAA,CAAK,IAAC,CAAI,IAAC,GAAM,KAAA,CAAM,GAAG,CAAA,IAAE,GAAM,CAAA,CA2D7C,GA3DkD,GAAA,GAAM,IAAA,CAAK,KAAC,CAAK,CAAC,CAAC,GAAG,EAAA,GAAK,IAAA,CA2D7E,GA3DqF,IAAA,CAAK,CAAC;IA4D3F,CAAG;;;;;;;IArDA,wCAAA,GAAA,UAAA,IAAA,IAA+C,MAAlD,CAAyD,CAAA,IAAE,GAAM,CAAA,CAAjE,GAAsE,GAAA,GAAM,IAAA,CAAK,KAAC,CAAK,CAAC,CAAC,GAAG,EAAA,GAAK,IAAA,CAAjG,GAAyG,IAAA,CAAK,CAAC,CAA/G,CAAgH;;CAtFhH,CADC,WAAA;AAwFM,gBAAP,CAAA,UAAO,GAAoC;IA6D3C,EA5DE,IAAA,EAAM,UAAA,EAAW;CA6DlB,CA5DC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EA+DA,EA/DA,CA+DA,CAAC;AD7JF;;;;AAIA,6BAHC,IAAA;IAIC,IAAF,gBAAA,CAHQ,IAAA,GAAO,IAAA,CAAK,WAAC,EAAW,CAAE;IAIhC,MAAF,CAHS,IAAA,GAAO,CAAA,KAAM,CAAA,IAAK,IAAA,GAAO,GAAA,KAAQ,CAAA,IAAK,IAAA,GAAO,GAAA,KAAQ,CAAA,CAAE;AAIhE,CAAC;;;;;;AAMD,aAPC,CAAA,EAAA,CAAA;IAQC,MAAF,CAPS,CAAA,GAAI,CAAA,GAAI,IAAA,CAAK,KAAC,CAAK,CAAC,GAAG,CAAA,CAAE,CAAC;AAQnC,CAAC;;;;;;;;;AAWD,IAPM,eAAA,GAAkB,SAAA,CAAU;AAQlC,IAPM,aAAA,GAAgB,SAAA,CAAU;AAQhC;IALC,2CAAA;IAKD;;;;;;;;;IAOA,+CAPG,GAOH,UAPG,KAAA;QAQC,IAAJ,gBAAA,CAPU,IAAA,GAAO,IAAI,IAAA,CAAK,KAAC,CAAK,CAAC;QAQ7B,IAAJ,gBAAA,CAPU,KAAA,GAAQ,IAAA,CAAK,WAAC,EAAW,EAOnC,gBAAA,CAPsC,MAAA,GAAS,IAAA,CAAK,QAAC,EAAQ,EAO7D,gBAAA,CAPgE,IAAA,GAAO,IAAA,CAAK,OAAC,EAAO,CAAE;QASlF,IAAJ,gBAAA,CAPQ,SAAA,GAAY,eAAA,GAAkB,CAAA,GAAI,GAAA,GAO1C,CAPgD,KAAE,GAAO,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,KAAC,GAAO,CAAA,CAOlF,GAPuF,CAAA,CAAE;YAQjF,CAAC,IAPC,CAAI,KAAC,CAAK,CAAC,KAAC,GAAO,CAAA,CAO7B,GAPkC,GAAA,CAAI,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,KAAC,GAAO,CAAA,CAO7D,GAPkE,GAAA,CAAI;YAQ9D,IAAI,CAPC,KAAC,CAQF,CAAC,GAPC,GAMd,CANmB,MAAE,GAAQ,CAAA,CAAE,GAAG,GAAA,CAMlC,GANyC,EAAA,GAMzC,CAN8C,MAAE,GAAQ,CAAA,IAAK,CAAA,GAAI,CAAA,GAAI,mBAAA,CAAoB,IAAC,CAAI,GAAG,CAAA,CAAE,GAAG,CAAA,CAAE,CAAC,GAAG,IAAA,CAAK,CAAC;QAQ9G,SAAS,GAPG,IAAA,CAAK,KAAC,CAAK,SAAC,CAAS,GAAG,GAAA,CAAI;QASxC,IAAJ,gBAAA,CAPU,IAAA,GAAO,SAAA,GAAY,aAAA,CAAc;QAQvC,IAAJ,gBAAA,CAPU,KAAA,GAAQ,IAAA,CAAK,KAAC,CAAK,CAAC,EAAC,GAAI,IAAA,GAAO,KAAA,CAO1C,GAPmD,OAAA,CAAQ,CAAC;QAQxD,IAAJ,gBAAA,CAPQ,MAAA,GAAS,IAAA,CAAK,IAAC,CAAI,CAAC,IAAC,GAAM,EAAA,GAAK,IAAA,CAAK,aAAC,CAAa,KAAC,CAAK,CAOjE,GAPqE,IAAA,CAAK,CAAC;QAQvE,MAAM,GAPG,IAAA,CAAK,GAAC,CAAG,MAAC,EAAO,EAAA,CAAG,CAAC;QAQ9B,IAAJ,gBAAA,CAPU,IAAA,GAAO,IAAA,CAAK,IAAC,CAAI,IAAC,GAAM,IAAA,CAAK,cAAC,CAAc,KAAC,EAAM,MAAA,CAAO,CAAC,GAAG,CAAA,CAAE;QAQtE,MAAJ,CAPW,IAAI,OAAA,CAAQ,KAAC,EAAM,MAAA,GAAS,CAAA,EAAG,IAAA,CAAK,CAAC;IAQhD,CAAG;;;;;;;IAOH,6CARG,GAQH,UARG,SAAA;QASC,IAAJ,gBAAA,CARU,KAAA,GAAQ,SAAA,CAAU,IAAC,CAAI;QAS7B,IAAJ,gBAAA,CARU,MAAA,GAAS,SAAA,CAAU,KAAC,GAAO,CAAA,CAAE;QASnC,IAAJ,gBAAA,CARU,KAAA,GAAQ,SAAA,CAAU,GAAC,CAAG;QAS5B,IAAJ,gBAAA,CARU,SAAA,GASF,KAAK,GARG,IAAA,CAAK,IAAC,CAAI,IAAC,GAAM,MAAA,CAAO,GAAG,CAAA,KAAE,GAAO,CAAA,CAOpD,GAPyD,GAAA,GAAM,IAAA,CAAK,KAAC,CAAK,CAAC,CAAC,GAAG,EAAA,GAAK,KAAA,CAOpF,GAP6F,EAAA,CAAG,GAAG,aAAA,GAAgB,CAAA,CAAE;QAUjH,IAAJ,gBAAA,CARU,GAAA,GAAM,IAAA,CAAK,KAAC,CAAK,SAAC,GAAW,GAAA,CAAI,GAAG,GAAA,EAQ9C,gBAAA,CARmD,MAAA,GAAS,GAAA,GAAM,eAAA,EAQlE,gBAAA,CACU,UAAU,GARG,IAAA,CAAK,KAAC,CAAK,MAAC,GAAQ,MAAA,CAAO,EAOlD,gBAAA,CAPoD,GAAA,GAAM,GAAA,CAAI,MAAC,EAAO,MAAA,CAAO,EAO7E,gBAAA,CAP+E,IAAA,GAAO,IAAA,CAAK,KAAC,CAAK,GAAC,GAAK,KAAA,CAAM,EAO7G,gBAAA,CAEU,KAAK,GARG,GAAA,CAAI,GAAC,EAAI,KAAA,CAAM,EAMjC,gBAAA,CANmC,IAAA,GAAO,IAAA,CAAK,KAAC,CAAK,KAAC,GAAO,IAAA,CAAK,EAMlE,gBAAA,CANoE,KAAA,GAAQ,GAAA,CAAI,KAAC,EAAM,IAAA,CAAK,EAM5F,gBAAA,CAGU,MAAM,GARG,IAAA,CAAK,KAAC,CAAK,KAAC,GAAO,GAAA,CAAI,CAAC;QASvC,IAAJ,gBAAA,CARQ,IAAA,GAAO,UAAA,GAAa,GAAA,GAAM,IAAA,GAAO,GAAA,GAAM,IAAA,GAAO,CAAA,GAAI,MAAA,CAAO;QAS7D,EAAJ,CAAA,CAAQ,CAAR,CARU,IAAC,KAAQ,CAAA,IAAK,MAAA,KAAW,CAAA,CAAE,CAQrC,CARuC,CAQvC;YACM,IAAI,EARC,CAAE;QASb,CAAK;QAED,IAAJ,gBAAA,CARU,UAAA,GAAa,eAAA,GAAkB,GAAA,GAQzC,CAR+C,IAAE,GAAM,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ/E,GARoF,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ5G,GARiH,GAAA,CAAI;YAS7G,IAAI,CARC,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ3B,GARgC,GAAA,CAAI,CAAC;QAUjC,IAAJ,gBAAA,CARU,OAAA,GAAU,GAAA,GAAM,UAAA,CAAW;QAUjC,IAAJ,gBAAA,CARU,GAAA,GAAM,eAAA,GAAkB,CAAA,GAAI,GAAA,GAQtC,CAR4C,IAAE,GAAM,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ5E,GARiF,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQzG,GAR8G,GAAA,CAAI;YAS1G,IAAI,CARC,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ3B,GARgC,GAAA,CAAI,GAAG,IAAA,CAAK,KAAC,CAAK,GAAC,GAAK,EAAA,GAQxD,CAR6D,mBAAE,CAAmB,IAAI,IAAA,CAAK,IAAC,EAAK,CAAA,EAAG,CAAA,CAAE,CAAC,GAAG,CAAA,CAAE,GAAG,CAAA,CAAE,CAAC,GAAG,CAAA,CAAE,CAAC;QAUpH,IAAJ,gBAAA,CARU,OAAA,GAAU,GAAA,GAAM,GAAA,GAAM,CAAA,GAAI,mBAAA,CAAoB,IAAI,IAAA,CAAK,IAAC,EAAK,CAAA,EAAG,CAAA,CAAE,CAAC,GAAG,CAAA,GAAI,CAAA,CAAE;QAUlF,IAAJ,gBAAA,CARU,KAAA,GAAQ,IAAA,CAAK,KAAC,CAAK,CAAC,CAAC,OAAC,GAAS,OAAA,CAQzC,GARoD,EAAA,GAAK,GAAA,CAQzD,GARgE,GAAA,CAAI,CAAC;QASjE,IAAJ,gBAAA,CARU,IAAA,GAAO,eAAA,GAAkB,CAAA,GAAI,GAAA,GAQvC,CAR6C,IAAE,GAAM,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ7E,GARkF,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ1G,GAR+G,GAAA,CAAI;YAS3G,IAAI,CARC,KAAC,CAAK,CAAC,IAAC,GAAM,CAAA,CAQ3B,GARgC,GAAA,CAAI;YAS5B,IAAI,CARC,KAAC,CASF,CAAC,GARC,GAAK,KAAA,GAAQ,GAAA,CAO3B,GAPkC,EAAA,GAOlC,CAPuC,KAAE,IAAQ,CAAA,GAAI,CAAA,GAAI,mBAAA,CAAoB,IAAI,IAAA,CAAK,IAAC,EAAK,KAAA,GAAQ,CAAA,EAAG,CAAA,CAAE,CAAC,GAAG,CAAA,CAAE,GAAG,CAAA,CAAE,CAAC;gBASzG,CAAC,CARC,CAAC;QAUX,IAAJ,gBAAA,CARU,GAAA,GAAM,GAAA,GAAM,IAAA,GAAO,CAAA,CAAE;QAU3B,MAAJ,CARW,IAAI,IAAA,CAAK,IAAC,EAAK,KAAA,GAAQ,CAAA,EAAG,GAAA,CAAI,CAAC;IAS1C,CAAG;;;;;;;;;IASH,uDAVG,GAUH,UAVG,KAAA,EAAA,IAAA;QAWC,IAAI,GAVG,IAAA,GAAO,IAAA,CAAK,KAAC,CAAK,KAAC,GAAO,EAAA,CAAG,CAAC;QAWrC,KAAK,GAVG,CAAA,CAAE,KAAC,GAAO,CAAA,CAUtB,GAV2B,EAAA,CAU3B,GAViC,CAAA,CAAE;QAW/B,IAAJ,gBAAA,CAVQ,MAAA,GAAS,EAAA,GAAK,KAAA,GAAQ,CAAA,CAAE;QAW5B,EAAJ,CAAA,CAAQ,KAVC,KAAS,EAAA,IAAM,IAAA,CAAK,kBAAC,CAAkB,IAAC,CAAI,CAUrD,CAVuD,CAUvD;YACM,MAAM,EAVC,CAAE;QAWf,CAAK;QACD,MAAJ,CAVW,MAAA,CAAO;IAWlB,CAAG;;;;;;;IAOH,yCAfG,GAeH,UAfG,IAAA,EAAA,MAAA,EAAA,MAAA;QAAA,uBAAA,EAAA,YAAA;QAAA,uBAAA,EAAA,UAAA;QAgBC,IAAI,GAfG,OAAA,CAAQ,IAAC,CAAI,IAAC,CAAI,CAAC;QAiB1B,MAAJ,CAAA,CAAY,MAfC,CAeb,CAAA,CAAA;YACM,KAfK,GAAA;gBAgBH,IAAI,GAfG,IAAA,CAAK,OAAC,CAAO,IAAC,EAAK,IAAA,CAAK,IAAC,GAAM,MAAA,CAAO,CAAC;gBAgB9C,IAAI,CAfC,KAAC,GAAO,CAAA,CAAE;gBAgBf,IAAI,CAfC,GAAC,GAAK,CAAA,CAAE;gBAgBb,MAAR,CAfe,IAAA,CAAK;YAgBd,KAfK,GAAA;gBAgBH,IAAI,GAfG,IAAA,CAAK,QAAC,CAAQ,IAAC,EAAK,IAAA,CAAK,KAAC,GAAO,MAAA,CAAO,CAAC;gBAgBhD,IAAI,CAfC,GAAC,GAAK,CAAA,CAAE;gBAgBb,MAAR,CAfe,IAAA,CAAK;YAgBd,KAfK,GAAA;gBAgBH,MAAR,CAfe,IAAA,CAAK,MAAC,CAAM,IAAC,EAAK,IAAA,CAAK,GAAC,GAAK,MAAA,CAAO,CAAC;YAgB9C;gBACE,MAAR,CAfe,IAAA,CAAK;QAgBpB,CAAK;IACL,CAAG;;;;;;;IAOH,yCApBG,GAoBH,UApBG,IAAA,EAAA,MAAA,EAAA,MAAA;QAAA,uBAAA,EAAA,YAAA;QAAA,uBAAA,EAAA,UAAA;QAA6D,MAoBhE,CApBuE,IAAA,CAAK,OAAC,CAAO,IAAC,EAAK,MAAA,EAAQ,CAAA,MAAE,CAAM,CAAC;IAoB3G,CApB4G;;;;;IAyB5G,4CAvBG,GAuBH,UAvBG,IAAA;QAwBC,IAAJ,gBAAA,CAvBU,GAAA,GAAM,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,CAAC,MAAC,EAAM,CAAE;;QAyB5C,MAAJ,CAvBW,GAAA,KAAQ,CAAA,GAAI,CAAA,GAAI,GAAA,CAAI;IAwB/B,CAAG;;;;;;IAMH,+CA3BG,GA2BH,UA3BG,IAAA,EAAA,cAAA;;QA6BC,EAAJ,CAAA,CAAQ,cA3BC,KAAkB,CAAA,CA2B3B,CA3B8B,CA2B9B;YACM,cAAc,GA3BG,CAAA,CAAE;QA4BzB,CAAK;QAED,IAAJ,gBAAA,CA3BU,aAAA,GAAgB,CAAA,CAAE,GAAG,CAAA,GAAI,cAAA,CA2BnC,GA3BqD,CAAA,CAAE;QA4BnD,IAAJ,gBAAA,CA3BU,IAAA,GAAO,IAAA,CAAK,aAAC,CAAa,CAAC;QA6BjC,IAAJ,gBAAA,CA3BU,MAAA,GAAS,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,CAAC;QA4BtC,MAAM,CA3BC,OAAC,CAAO,MAAC,CAAM,OAAC,EAAO,GAAI,CAAA,GA2BtC,CA3B0C,MAAE,CAAM,MAAC,EAAM,IAAK,CAAA,CAAE,CAAC,CAAC,CA2BlE,WAAA;QACI,IAAJ,gBAAA,CA3BU,IAAA,GAAO,MAAA,CAAO,OAAC,EAAO,CAAE;QA4B9B,IAAJ,gBAAA,CA3BU,OAAA,GAAU,IAAA,CAAK,WAAC,CAAW,IAAI,OAAA,CAAQ,IAAC,CAAI,IAAC,EAAK,CAAA,EAAG,CAAA,CAAE,CAAC,CAAC,CA2BnE,0BAAA;QACI,MAAJ,CA3BW,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,KAAC,CAAK,CAAC,IAAC,GAAM,OAAA,CAAQ,OAAC,EAAO,CA2BzD,GA3B8D,QAAA,CAAS,GAAG,CAAA,CAAE,GAAG,CAAA,CAAE;IA4BjF,CAAG;;;;IAIH,0CA7BG,GA6BH,cA7BwB,MA6BxB,CA7B+B,IAAA,CAAK,aAAC,CAAa,IAAI,IAAA,EAAK,CAAE,CAAC,CA6B9D,CA7B+D;;CAvH/D,CALC,gBAAA;AA6HM,uBAAP,CAAA,UAAO,GAAoC;IA8B3C,EA7BE,IAAA,EAAM,UAAA,EAAW;CA8BlB,CA7BC;;;;AAED,uBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAgCA,EAhCA,CAgCA,CAAC;ADjKF;IAAA;;;;;IAGG,2BAAA,GACH;QACI,MAAJ,CADW;YAEL,QAAQ,EADE,mBAAA;YAEV,SAAS,EADE;gBAET,EAAC,OADC,EAAQ,WAAA,EAAa,QAAA,EAAU,oBAAA,EAAqB;gBAEtD,EAAC,OADC,EAAQ,iBAAA,EAAmB,QAAA,EAAU,wBAAA,EAAyB;gBAEhE,EAAC,OADC,EAAQ,sBAAA,EAAwB,QAAA,EAAU,yBAAA,EAA0B,EAAE,mBAAA;aAEzE;SACF,CADC;IAEN,CAAG;;CAbH;AAaO,mBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAEtB,YAAY,EADE;oBAEZ,aAAa,EADE,sBAAA,EAAwB,uBAAA,EAAyB,6BAAA,EAA+B,oBAAA;oBAE/F,kBAAkB;iBACnB;gBACD,OAAO,EADE,CAAA,aAAE,EAAc,kBAAA,CAAmB;gBAE5C,OAAO,EADE,CAAA,YAAE,EAAa,WAAA,CAAY;gBAEpC,eAAe,EADE,CAAA,aAAE,CAAa;aAEjC,EADC,EAAG;CAEJ,CADC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADvDF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,EAAI,GAEG,KAAA,CAAM;QADX,IAAF,CAAA,SAAW,GAEG,IAAA,CAAK;IAOnB,CAAC;;CAXD;AAKO,iBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADdF;;;AAGA;;;;IA0BA,qBAAG,MAAmB;;;;QAVnB,IAAH,CAAA,KAAQ,GAEG,KAAA,CAAM;;;;;QAId,IAAH,CAAA,UAAa,GAEG,IAAI,YAAA,EAAa,CAAE;QAG/B,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACtC,CAAG;;;;;IAKH,4BACG,GADH,cACsB,MADtB,CAC6B,IAAA,CAAK,KAAC,CAAK,CADxC,CACyC;;;;;IAIzC,0BACG,GADH;QACI,EAAJ,CAAA,CAAQ,CACC,IAAC,CAAI,KAAC,CADf,CACqB,CADrB;YACM,IAAI,CACC,KAAC,GAAO,IAAA,CAAK;YAAlB,IAAI,CACC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,CAAC;QAAjC,CAAK;IACL,CAAG;;;;;IAKH,2BACG,GADH;QACI,EAAJ,CAAA,CAAQ,IACC,CAAI,KAAC,CADd,CACoB,CADpB;YACM,IAAI,CACC,KAAC,GAAO,KAAA,CAAM;YAAnB,IAAI,CACC,UAAC,CAAU,IAAC,CAAI,KAAC,CAAK,CAAC;QAAlC,CAAK;IACL,CAAG;;;;;IAKH,4BACG,GADH;QACI,EAAJ,CAAA,CAAQ,IACC,CAAI,MAAC,EAAM,CADpB,CACuB,CADvB;YACM,IAAI,CACC,KAAC,EAAK,CAAE;QAAnB,CAAK;QACL,IAAA,CAAW,CAAX;YAAM,IAAI,CACC,IAAC,EAAI,CAAE;QAAlB,CAAK;IACL,CAAG;;;;;IAKH,2CAFG,GAEH,UAFG,MAAA;QAGC,EAAJ,CAAA,CAAQ,IAFC,CAAI,SAAC,IAAY,MAAA,CAAO,MAAC,KAAU,CAAA,IAAK,CAAA,IAAE,CAAI,kBAAC,CAAkB,MAAC,CAAM,CAEjF,CAFmF,CAEnF;YACM,IAAI,CAFC,KAAC,EAAK,CAAE;QAGnB,CAAK;IACL,CAAG;;;;IAIH,yCAJG,GAIH;QACI,EAAJ,CAAA,CAAQ,IAJC,CAAI,SAAC,CAId,CAJwB,CAIxB;YACM,IAAI,CAJC,KAAC,EAAK,CAAE;QAKnB,CAAK;IACL,CAAG;IAMH,sBALG,sCAAA;;;;;;aAKH,UALG,aAAA,IAAuC,IAAA,CAAK,cAAC,GAAgB,aAAA,CAAc,CAK9E,CAL+E;;;OAAA;;;;;IAE5E,wCAAA,GAAA,UAAA,MAAA,IAAoC,MAAvC,CAA8C,CAAA,CAAE,IAAC,CAAI,cAAC,IAAiB,IAAA,CAAK,cAAC,CAAc,QAAC,CAAQ,MAAC,CAAM,MAAC,CAAM,CAAC,CAAnH,CAAoH;;CArFpH;AAsFO,WAAP,CAAA,UAAO,GAAoC;IAS3C,EARE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBASvB,QAAQ,EARE,eAAA;gBASV,QAAQ,EARE,aAAA;gBASV,IAAI,EARE;oBASJ,kBAAkB,EARE,KAAA;oBASpB,gBAAgB,EARE,IAAA;oBASlB,cAAc,EARE,UAAA;oBAShB,aAAa,EARE,uBAAA;oBASf,kBAAkB,EARE,+BAAA;iBASrB;aACF,EARC,EAAG;CASJ,CARC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAWD,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAZA,CAYA,CAAC;AATK,WAAP,CAAA,cAAO,GAAyD;IAWhE,IAAI,EAVE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAWvB,WAAW,EAVE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAW9B,OAAO,EAVE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,MAAE,EAAM,EAAG,EAAE;IAW5C,YAAY,EAVE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAW/B,CAVC;AAaF;;;AAsCA;;;;;IAKA,2BAhDqB,QAAU,EAAa,UAAY;QAAnC,IAArB,CAAA,QAAqB,GAAA,QAAA,CAAU;QAiD3B,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC;IACtD,CAAG;;;;IAIH,sCAlDG,GAkDH,cAlDiB,IAAA,CAAK,QAAC,CAAQ,MAAC,EAAM,CAAE,CAkDxC,CAlDyC;;CAuCzC;AAtCO,iBAAP,CAAA,UAAO,GAAoC;IAmD3C,EAlDE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAmDvB,QAAQ,EAlDE,qBAAA;gBAmDV,IAAI,EAlDE;oBAmDJ,OAAO,EAlDE,iBAAA;oBAmDT,eAAe,EAlDE,MAAA;oBAmDjB,sBAAsB,EAlDE,mBAAA;oBAmDxB,SAAS,EAlDE,cAAA;iBAmDZ;aACF,EAlDC,EAAG;CAmDJ,CAlDC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAqDD,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAvDA,CAuDA,CAAC;AD1LF,IAAM,uBAAA,GAA0B,CAAA,iBAAE,EAAkB,WAAA,CAAY,CAAC;AACjE;IAAA;;;;;IAGG,yBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,iBAAA,EAAmB,SAAA,EAAW,CAAA,iBAAE,CAAiB,EAAC,CAAC,CAC/G,CADgH;;CAHhH;AAIO,iBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,uBAAA,EAAyB,OAAA,EAAS,uBAAA,EAAwB,EAAC,EAAG;CAErG,CADC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADnBF;IAAA;;;CAAA;AAGO,gBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,oBAAA,EAAsB,QAAA,EAAU,EAAA,EAAI,IAAA,EAAM,EAAA,OAAE,EAAQ,0BAAA,EAA2B,EAAC,EAAC,EAAG;CADxH,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADPK,IAAI,mBAAmB,GAAQ,EAAE,CAAC;AACzC,mBAAmB,CAAC,cAAc,GAAG,CAAC,CAAC;AACvC,mBAAmB,CAAC,GAAG,GAAG,CAAC,CAAC;AAC5B,mBAAmB,CAAC,mBAAmB,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC;AAC3E,mBAAmB,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;ADOrD;;;;;IAcA,wBADsB,MAAQ,EAAoB,SAAW;QAAvC,IAAtB,CAAA,MAAsB,GAAA,MAAA,CAAQ;QAAoB,IAAlD,CAAA,SAAkD,GAAA,SAAA,CAAW;QAT1D,IAAH,CAAA,QAAW,GAEqB,IAAA,CAAK;QADlC,IAAH,CAAA,QAAW,GAEG,IAAA,CAAK;QAEhB,IAAH,CAAA,YAAe,GAEG,IAAI,YAAA,EAAa,CAAE;IAErC,CAAuE;;;;;IAOvE,sCALG,GAKH,UALG,MAAA;QAMC,EAAJ,CAAA,CAAQ,IALC,CAAI,QAAC,KAAY,IAAA,IAAQ,IAAA,CAAK,MAAC,CAAM,aAAC,KAAiB,MAAA,CAAO,MAAC,CAKxE,CAL+E,CAK/E;YACM,IAAI,CALC,OAAC,CAAO,mBAAC,CAAmB,cAAC,CAAc,CAAC;QAMvD,CAAK;IACL,CAAG;;;;;IAKH,+BARG,GAQH,UARG,MAAA;QASC,EAAJ,CAAA,CAAQ,IARC,CAAI,QAAC,IAAW,CAAA,MAAE,CAAM,gBAAC,CAQlC,CARmD,CAQnD;YACM,IAAI,CARC,OAAC,CAAO,mBAAC,CAAmB,GAAC,CAAG,CAAC;QAS5C,CAAK;IACL,CAAG;;;;;IAKH,gCAXG,GAWH,UAXG,MAAA,IAAuB,IAAA,CAAK,YAAC,CAAY,IAAC,CAAI,MAAC,CAAM,CAAC,CAWzD,CAX0D;;;;IAe1D,iCAbG,GAaH;QACI,IAAI,CAbC,YAAC,GAAc,QAAA,CAAS,aAAC,CAAa;QAc3C,IAAI,CAbC,SAAC,CAAS,QAAC,CAAQ,QAAC,CAAQ,IAAC,EAAK,YAAA,CAAa,CAAC;IAczD,CAAG;;;;IAIH,wCAfG,GAeH;QACI,EAAJ,CAAA,CAAQ,CAfC,IAAC,CAAI,MAAC,CAAM,aAAC,CAAa,QAAC,CAAQ,QAAC,CAAQ,aAAC,CAAa,CAenE,CAfqE,CAerE;YACM,IAAI,CAfC,MAAC,CAAM,aAAC,CAAa,OAAC,CAAO,CAAC,KAAC,CAAK,IAAC,CAAI,MAAC,CAAM,aAAC,EAAc,EAAA,CAAG,CAAC;QAgB9E,CAAK;IACL,CAAG;;;;IAIH,oCAjBG,GAiBH;QACI,EAAJ,CAAA,CAAQ,IAjBC,CAAI,YAAC,IAAe,QAAA,CAAS,IAAC,CAAI,QAAC,CAAQ,IAAC,CAAI,YAAC,CAAY,CAiBtE,CAjBwE,CAiBxE;YACM,IAAI,CAjBC,YAAC,CAAY,OAAC,CAAO,CAAC,KAAC,CAAK,IAAC,CAAI,YAAC,EAAa,EAAA,CAAG,CAAC;QAkB9D,CAAK;QAjBL,IAAA,CAAW,CAAX;YAkBM,QAAQ,CAjBC,IAAC,CAAI,OAAC,CAAO,CAAC,KAAC,CAAK,QAAC,CAAQ,IAAC,EAAK,EAAA,CAAG,CAAC;QAkBtD,CAAK;QAED,IAAI,CAjBC,YAAC,GAAc,IAAA,CAAK;QAkBzB,IAAI,CAjBC,SAAC,CAAS,WAAC,CAAW,QAAC,CAAQ,IAAC,EAAK,YAAA,CAAa,CAAC;IAkB5D,CAAG;;CAlEH;AAkDO,cAAP,CAAA,UAAO,GAAoC;IAkB3C,EAjBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAkBvB,QAAQ,EAjBE,kBAAA;gBAkBV,IAAI,EAjBE;oBAkBJ,SAAS,EAjBE,4DAAA;oBAkBX,MAAM,EAjBE,QAAA;oBAkBR,UAAU,EAjBE,IAAA;oBAkBZ,OAAO,EAjBE,iBAAA;oBAkBT,aAAa,EAjBE,gBAAA;oBAkBf,SAAS,EAjBE,uBAAA;iBAkBZ;gBACD,QAAQ,EAjBE,mLAqBP;aACJ,EAjBC,EAAG;CAkBJ,CAjBC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAoBD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EAtBA,CAsBA,CAAC;AAlBK,cAAP,CAAA,cAAO,GAAyD;IAoBhE,UAAU,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoB7B,UAAU,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoB7B,MAAM,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoBzB,aAAa,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoBhC,cAAc,EAnBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,SAAE,EAAS,EAAG,EAAE;CAoBtD,CAnBC;ADlFF;;;;;;IAMA,oBAJqB,KAAW,EAAU,OAAU,EAAgB,YAAgC;QAA/E,IAArB,CAAA,KAAqB,GAAA,KAAA,CAAW;QAAU,IAA1C,CAAA,OAA0C,GAAA,OAAA,CAAU;QAAgB,IAApE,CAAA,YAAoE,GAAA,YAAA,CAAgC;IAApG,CAAqG;IAOrG,iBAAC;AAAD,CAAC,AATD,IASC;AAED;;;;;;;;IAoBA,sBACM,IArBM,EAAa,SAAW,EAAkB,iBAAmB,EAA0B,SAAW,EAyBxG,wBAxB0B;QADP,IAAzB,CAAA,SAAyB,GAAA,SAAA,CAAW;QAAkB,IAAtD,CAAA,iBAAsD,GAAA,iBAAA,CAAmB;QAA0B,IAAnG,CAAA,SAAmG,GAAA,SAAA,CAAW;QA0B1G,IAAI,CAAC,cAAc,GAAG,wBAAwB,CAAC,uBAAuB,CAAI,IAAI,CAAC,CAAC;IACpF,CAAG;;;;;;IAMH,2BA5BG,GA4BH,UA5BG,OAAA,EAAA,OAAA;QA6BC,EAAJ,CAAA,CAAQ,CA5BC,IAAC,CAAI,UAAC,CA4Bf,CA5B0B,CA4B1B;YACM,IAAI,CA5BC,WAAC,GAAa,IAAA,CAAK,cAAC,CAAc,OAAC,EAAQ,OAAA,CAAQ,CAAC;YA6BzD,IAAI,CA5BC,UAAC;gBA6BF,IAAI,CA5BC,iBAAC,CAAiB,eAAC,CAAe,IAAC,CAAI,cAAC,EAAe,CAAA,EAAG,IAAA,CAAK,SAAC,EAAU,IAAA,CAAK,WAAC,CAAW,KAAC,CAAK,CAAC;QA6BjH,CAAK;QAED,MAAJ,CA5BW,IAAA,CAAK,UAAC,CAAU;IA6B3B,CAAG;;;;IAIH,4BA9BG,GA8BH;QACI,EAAJ,CAAA,CAAQ,IA9BC,CAAI,UAAC,CA8Bd,CA9ByB,CA8BzB;YACM,IAAI,CA9BC,iBAAC,CAAiB,MAAC,CAAM,IAAC,CAAI,iBAAC,CAAiB,OAAC,CAAO,IAAC,CAAI,UAAC,CAAU,QAAC,CAAQ,CAAC,CAAC;YA+BxF,IAAI,CA9BC,UAAC,GAAY,IAAA,CAAK;YAgCvB,EAAN,CAAA,CAAU,IA9BC,CAAI,WAAC,CAAW,OAAC,CA8B5B,CA9BoC,CA8BpC;gBACQ,IAAI,CA9BC,iBAAC,CAAiB,MAAC,CAAM,IAAC,CAAI,iBAAC,CAAiB,OAAC,CAAO,IAAC,CAAI,WAAC,CAAW,OAAC,CAAO,CAAC,CAAC;gBA+BxF,IAAI,CA9BC,WAAC,GAAa,IAAA,CAAK;YA+BhC,CAAO;QACP,CAAK;IACL,CAAG;;;;;;IA5BA,qCAAA,GAAA,UAAA,OAAA,EAAA,OAAA;QAmCC,EAAJ,CAAA,CAAQ,CAlCC,OAAC,CAkCV,CAlCkB,CAkClB;YACM,MAAN,CAlCa,IAAI,UAAA,CAAW,EAAC,CAAE,CAAC;QAmChC,CAAK;QAlCL,IAAA,CAAW,EAAX,CAAA,CAAW,OAAK,YAAkB,WAAA,CAAlC,CAA+C,CAA/C;YAmCM,IAAN,gBAAA,CAlCY,OAAA,GAAU,IAAA,CAAK,iBAAC,CAAiB,kBAAC,CAkC9C,gBAAA,CAAA,CAlCgF,OAAC,CAkCjF,EAlCyF,OAAA,CAAQ,CAAC;YAmC5F,MAAN,CAlCa,IAAI,UAAA,CAAW,CAAC,OAAC,CAAO,SAAC,CAAS,EAAE,OAAA,CAAQ,CAAC;QAmC1D,CAAK;QAlCL,IAAA,CAAW,CAAX;YAmCM,MAAN,CAlCa,IAAI,UAAA,CAAW,CAAC,CAAC,IAAC,CAAI,SAAC,CAAS,UAAC,CAAU,KAAC,OAAU,CAAE,CAAC,CAAC,CAAC,CAAC;QAmCzE,CAAK;IACL,CAAG;IACH,mBAAC;AAAD,CAAC,AAvED,IAuEC;ADtFD;;;;AAIA;IAAA;;;;;;;IAMA,8BAAG,GAAH,UAAG,MAAA,IAAH,CAA4B;;;;;;IAM5B,gCADG,GACH,UADG,MAAA,IACH,CAD8B;;CAX9B;AAYO,cAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,UAAA,EAAW;CAElB,CADC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;AAGF;;;AAaA;;;;;;IA4BA,qBAjBc,cAA4C,EAAU,WAAa,EACnE,gBAAiD;QAgB/D,iBAWG;QA5BW,IAAd,CAAA,cAAc,GAAA,cAAA,CAA4C;QAAU,IAApE,CAAA,WAAoE,GAAA,WAAA,CAAa;QACnE,IAAd,CAAA,gBAAc,GAAA,gBAAA,CAAiD;QAoB3D,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,MAAW,IAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAA3F,CAA6F,CAAC,CAAC;QAE3F,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACxC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC5B,CAAK,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,cAA3B,CAAmC,CAAC,CAAC;IACrC,CAAG;IA/BH,sBAZG,0CAAA;;;;;;aAYH;YACI,EAAJ,CAAA,CAAQ,IAZC,CAAI,WAAC,CAAW,YAAC,CAY1B,CAZuC,CAYvC;gBACM,MAAN,CAZa,IAAA,CAAK,WAAC,CAAW,YAAC,CAAY,QAAC,CAAQ;YAapD,CAAK;QACL,CAAG;;;;;aAKH,UAdG,QAAA,IAcH,CAduC;;;OASpC;;;;;;IAiCH,2BApBG,GAoBH,UApBG,MAAA;QAqBC,EAAJ,CAAA,CAAQ,IApBC,CAAI,cAAC,CAoBd,CApB6B,CAoB7B;YACM,IAAI,CApBC,QAAC,CAAQ,MAAC,CAAM,CAAC;YAqBtB,IAAI,CApBC,oBAAC,EAAoB,CAAE;QAqBlC,CAAK;IACL,CAAG;;;;;;IAMH,6BArBG,GAqBH,UArBG,MAAA;QAsBC,EAAJ,CAAA,CAAQ,IArBC,CAAI,cAAC,CAqBd,CArB6B,CAqB7B;YACM,IAAI,CArBC,OAAC,CAAO,MAAC,CAAM,CAAC;YAsBrB,IAAI,CArBC,oBAAC,EAAoB,CAAE;QAsBlC,CAAK;IACL,CAAG;;;;IAnBA,0CAAA,GAAA;QAwBC,IAAJ,gBAAA,CAvBU,cAAA,GAAiB,IAAA,CAAK,cAAC,CAAc,QAAC,CAAQ,aAAC,CAAa;QAwBlE,cAAc,CAvBC,UAAC,CAAU,WAAC,CAAW,cAAC,CAAc,CAAC;QAwBtD,IAAI,CAvBC,cAAC,CAAc,OAAC,EAAO,CAAE;QAUhC,EAAF,CAAA,CAAE,IARO,CAAI,gBAAC,CAQd,CAR+B,CAQ/B;YAgBM,IAAN,gBAAA,CAvBY,gBAAA,GAAmB,IAAA,CAAK,gBAAC,CAAgB,QAAC,CAAQ,aAAC,CAAa;YAwBtE,gBAAgB,CAvBC,UAAC,CAAU,WAAC,CAAW,gBAAC,CAAgB,CAAC;YAwB1D,IAAI,CAvBC,gBAAC,CAAgB,OAAC,EAAO,CAAE;QAwBtC,CAAK;QAED,EAAJ,CAAA,CAAQ,IAvBC,CAAI,WAAC,IAAc,IAAA,CAAK,WAAC,CAAW,OAAC,CAuB9C,CAvBsD,CAuBtD;YACM,IAAI,CAvBC,WAAC,CAAW,OAAC,CAAO,OAAC,EAAO,CAAE;QAwBzC,CAAK;QAED,IAAI,CAvBC,cAAC,GAAgB,IAAA,CAAK;QAwB3B,IAAI,CAvBC,gBAAC,GAAkB,IAAA,CAAK;QAwB7B,IAAI,CAvBC,WAAC,GAAa,IAAA,CAAK;IAwB5B,CAAG;;CAnFH;AA6DO,WAAP,CAAA,UAAO,GAAoC;IAwB3C,EAvBE,IAAA,EAAM,UAAA,EAAW;CAwBlB,CAvBC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA0BD,EAAC,IAAI,EAAE,YAAY,GAAG;IACtB,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,YAAY,GAAG;CACrB,EA7BA,CA6BA,CAAC;AD3HF;;;;;;IAQA,uBADc,eAAiB,EAAwB,SAAW,EACpD,yBAA2B;QAD3B,IAAd,CAAA,eAAc,GAAA,eAAA,CAAiB;QAAwB,IAAvD,CAAA,SAAuD,GAAA,SAAA,CAAW;QACpD,IAAd,CAAA,yBAAc,GAAA,yBAAA,CAA2B;QAIrC,IAAI,CAAC,gBAAgB,GAAG,yBAAyB,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;QAC5F,IAAI,CAAC,cAAc,GAAG,yBAAyB,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;IAC5F,CAAG;;;;;;;;IAQH,4BATG,GASH,UATG,SAAA,EAAA,eAAA,EAAA,OAAA,EAAA,OAAA;QAUC,IAAJ,gBAAA,CATU,iBAAA,GAAoB,OAAA,CAAQ,SAAC,IAAY,MAAA,CAAO;QAUtD,IAAJ,gBAAA,CATU,WAAA,GAAc,QAAA,CAAS,aAAC,CAAa,iBAAC,CAAiB,CAAC;QAW9D,EAAJ,CAAA,CAAQ,CATC,WAAC,CASV,CATsB,CAStB;YACM,MATM,IAAI,KAAA,CAAM,qCAAC,iBAAkC,iCAAiB,CAA6B,CAAC;QAUxG,CAAK;QAED,IAAJ,gBAAA,CATU,WAAA,GAAc,IAAI,cAAA,EAAe,CAAE;QAUzC,IAAJ,gBAAA,CATU,UAAA,GAAa,IAAA,CAAK,cAAC,CAAc,SAAC,EAAU,eAAA,EAAiB,OAAA,EAAS,WAAA,CAAY,CAAC;QAWzF,IAAJ,gBAAA,CATQ,aAA2C,CAAC;QAUhD,IAAJ,gBAAA,CATQ,eAA+C,CAAC;QAUpD,IAAJ,gBAAA,CATQ,WAAa,CAAY;QAY7B,EAAJ,CAAA,CAAQ,OATC,CAAO,QAAC,KAAY,KAAA,CAS7B,CAToC,CASpC;YACM,eAAe,GATG,IAAA,CAAK,gBAAC,CAAgB,MAAC,CAAM,IAAC,CAAI,SAAC,CAAS,CAAC;YAU/D,IAAI,CATC,eAAC,CAAe,UAAC,CAAU,eAAC,CAAe,QAAC,CAAQ,CAAC;YAU1D,WAAW,CATC,WAAC,CAAW,eAAC,CAAe,QAAC,CAAQ,aAAC,CAAa,CAAC;QAUtE,CAAK;QACD,aAAa,GATG,IAAA,CAAK,cAAC,CAAc,MAAC,CAAM,IAAC,CAAI,SAAC,EAAU,UAAA,CAAW,KAAC,CAAK,CAAC;QAU7E,IAAI,CATC,eAAC,CAAe,UAAC,CAAU,aAAC,CAAa,QAAC,CAAQ,CAAC;QAUxD,WAAW,CATC,WAAC,CAAW,aAAC,CAAa,QAAC,CAAQ,aAAC,CAAa,CAAC;QAW9D,WAAW,GATG,IAAI,WAAA,CAAY,aAAC,EAAc,UAAA,EAAY,eAAA,CAAgB,CAAC;QAW1E,WAAW,CATC,KAAC,GAAO,UAAA,MAAS,IAAU,WAAA,CAAY,KAAC,CAAK,MAAC,CAAM,CAAC,CASrE,CATsE,CAAE;QAUpE,WAAW,CATC,OAAC,GAAS,UAAA,MAAS,IAAU,WAAA,CAAY,OAAC,CAAO,MAAC,CAAM,CAAC,CASzE,CAT0E,CAAE;QAWxE,IAAI,CATC,mBAAC,CAAmB,aAAC,CAAa,QAAC,EAAS,OAAA,CAAQ,CAAC;QAW1D,MAAJ,CATW,WAAA,CAAY;IAUvB,CAAG;;;;;;IAPA,2CAAA,GAAA,UAAA,cAAA,EAAA,OAAA;QAcC,CAAC,UAbC,EAAW,UAAA,EAAY,MAAA,EAAQ,aAAA,CAAc,CAAC,OAAC,CAAO,UAAC,UAAY;YAcnE,EAAN,CAAA,CAAU,SAbC,CAAS,OAAC,CAAO,UAAC,CAAU,CAAC,CAaxC,CAb0C,CAa1C;gBACQ,cAAc,CAbC,UAAC,CAAU,GAAG,OAAA,CAAQ,UAAC,CAAU,CAAC;YAczD,CAAO;QACP,CAAK,CAbC,CAAC;IAcP,CAAG;;;;;;;;IAXA,sCAAA,GAAA,UAoBG,SAAmC,EAAE,eAAyB,EAAE,OAAY,EAC5E,OAAuB;QACzB,EAAJ,CAAA,CAAQ,CAnBC,OAAC,CAmBV,CAnBkB,CAmBlB;YACM,MAAN,CAnBa,IAAI,UAAA,CAAW,EAAC,CAAE,CAAC;QAoBhC,CAAK;QAnBL,IAAA,CAAW,EAAX,CAAA,CAAW,OAAK,YAAkB,WAAA,CAAlC,CAA+C,CAA/C;YAoBM,IAAN,gBAAA,CAnBY,OAAA,GAAU,OAAA,CAAQ,kBAAC,CAAkB,OAAC,CAAO,CAAC;YAoBpD,IAAI,CAnBC,eAAC,CAAe,UAAC,CAAU,OAAC,CAAO,CAAC;YAoBzC,MAAN,CAnBa,IAAI,UAAA,CAAW,CAAC,OAAC,CAAO,SAAC,CAAS,EAAE,OAAA,CAAQ,CAAC;QAoB1D,CAAK;QAnBL,IAAA,CAAW,EAAX,CAAA,CAAW,QAAK,CAAQ,OAAC,CAAO,CAAhC,CAAkC,CAAlC;YAWE,MAAF,CAVa,IAAI,UAAA,CAAW,CAAC,CAAC,QAAC,CAAQ,cAAC,CAAc,KAAC,OAAU,CAAE,CAAC,CAAC,CAAC,CAAC;QAoBvE,CAAK;QAnBL,IAAA,CAAW,CAAX;YAoBM,IAAN,gBAAA,CAnBY,kBAAA,GAAqB,SAAA,CAAU,uBAAC,CAAuB,OAAC,CAAO,CAAC;YAoBtE,IAAN,gBAAA,CAnBY,oBAAA,GAoBF,kBAAkB,CAnBC,gBAAC,CAAgB,CAAC,EAAC,OAAC,EAAQ,cAAA,EAAgB,QAAA,EAAU,OAAA,EAAQ,CAAC,EAAE,eAAA,CAAgB,CAAC;YAoBzG,IAAN,gBAAA,CAnBY,YAAA,GAAe,kBAAA,CAAmB,MAAC,CAAM,oBAAC,CAAoB,CAAC;YAoBrE,IAAI,CAnBC,eAAC,CAAe,UAAC,CAAU,YAAC,CAAY,QAAC,CAAQ,CAAC;YAoBvD,MAAN,CAnBa,IAAI,UAAA,CAAW,CAAC,CAAC,YAAC,CAAY,QAAC,CAAQ,aAAC,CAAa,CAAC,EAAE,YAAA,CAAa,QAAC,EAAS,YAAA,CAAa,CAAC;QAoB1G,CAAK;IACL,CAAG;;CA9FH;AA4EO,aAAP,CAAA,UAAO,GAAoC;IAoB3C,EAnBE,IAAA,EAAM,UAAA,EAAW;CAoBlB,CAnBC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAsBD,EAAC,IAAI,EAAE,cAAc,GAAG;IACxB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,wBAAwB,GAAG;CACjC,EAzBA,CAyBA,CAAC;ADvFF;;;;AAIA;;;;;;IAMA,kBAFc,UAAY,EAAkC,SAAW,EAAkB,WAAa;QAAxF,IAAd,CAAA,UAAc,GAAA,UAAA,CAAY;QAAkC,IAA5D,CAAA,SAA4D,GAAA,SAAA,CAAW;QAAkB,IAAzF,CAAA,WAAyF,GAAA,WAAA,CAAa;IAAtG,CAAoH;;;;;;;;;;IAepH,uBAPG,GAOH,UAPG,OAAA,EAAA,OAAA;QAAA,wBAAA,EAAA,YAAA;QAQC,MAAJ,CAPW,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,IAAC,CAAI,UAAC,EAAW,IAAA,CAAK,SAAC,EAAU,OAAA,EAAS,OAAA,CAAQ,CAAC;IAQpF,CAAG;;CArBH;AAeO,QAAP,CAAA,UAAO,GAAoC;IAQ3C,EAPE,IAAA,EAAM,UAAA,EAAW;CAQlB,CAPC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAUD,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,aAAa,GAAG;CACtB,EAbA,CAaA,CAAC;ADzDF;IAAA;;;;;IAGG,sBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,cAAA,EAAgB,SAAA,EAAW,CAAA,QAAE,EAAS,aAAA,CAAc,EAAC,CAAC,CAClH,CADmH;;CAHnH;AAIO,cAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAEtB,YAAY,EADE,CAAA,gBAAE,EAAiB,cAAA,CAAe;gBAEhD,eAAe,EADE,CAAA,gBAAE,EAAiB,cAAA,CAAe;gBAEnD,SAAS,EADE,CAAA,QAAE,CAAQ;aAEtB,EADC,EAAG;CAEJ,CADC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;AD7BF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QADjB,IAAF,CAAA,aAAe,GAEG,KAAA,CAAM;QADtB,IAAF,CAAA,cAAgB,GAEG,IAAA,CAAK;QADtB,IAAF,CAAA,QAAU,GAEG,IAAA,CAAK;QADhB,IAAF,CAAA,OAAS,GAEG,CAAA,CAAE;QADZ,IAAF,CAAA,QAAU,GAEG,EAAA,CAAG;QADd,IAAF,CAAA,MAAQ,GAEG,KAAA,CAAM;IAQjB,CAAC;;CAjBD;AAWO,mBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADnBF;;;AAGA;;;;IA+DA,uBAAG,MAAmB;QA9DpB,IAAF,CAAA,SAAW,GAEG,CAAA,CAAE;QADd,IAAF,CAAA,KAAO,GAEa,EAAA,CAAG;;;;QAuCpB,IAAH,CAAA,IAAO,GAEG,CAAA,CAAE;;;;;QAST,IAAH,CAAA,UAAa,GAEG,IAAI,YAAA,CAAoB,IAAE,CAAI,CAAC;QAQ3C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAG;;;;IAIH,mCAFG,GAEH,cAF2B,MAE3B,CAFkC,IAAA,CAAK,IAAC,GAAM,CAAA,CAAE,CAEhD,CAFiD;;;;IAMjD,+BAJG,GAIH,cAJuB,MAIvB,CAJ8B,IAAA,CAAK,IAAC,GAAM,IAAA,CAAK,SAAC,CAAS,CAIzD,CAJ0D;;;;;IAS1D,kCAPG,GAOH,UAPG,UAAA,IAAsC,IAAA,CAAK,YAAC,CAAY,UAAC,CAAU,CAAC,CAOvE,CAPwE;;;;;IAYxE,mCAVG,GAUH,UAVG,OAAA,IAA2C,IAAA,CAAK,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,CAAC,CAU3E,CAV4E;;;;;;IAgB5E,kCAXG,GAWH,UAXG,UAAA,IAAiC,MAWpC,CAX2C,UAAA,KAAe,CAAA,CAAE,CAAC,CAW7D,CAX8D;;;;;;;IAK3D,sCAAA,GAAA,UAAA,KAAA,EAAA,GAAA;QAcC,EAAJ,CAAA,CAAQ,IAbC,CAAI,QAAC,CAad,CAbuB,CAavB;YACM,EAAN,CAAA,CAAU,KAbC,GAAO,CAAA,CAalB,CAbqB,CAarB;gBACQ,EAAR,CAAA,CAAY,KAbC,GAAO,CAAA,CAapB,CAbuB,CAavB;oBACU,IAAI,CAbC,KAAC,CAAK,OAAC,CAAO,CAAC,CAAC,CAAC,CAAC;gBAcjC,CAAS;gBACD,IAAI,CAbC,KAAC,CAAK,OAAC,CAAO,CAAC,CAAC,CAAC;YAc9B,CAAO;YACD,EAAN,CAAA,CAAU,GAbC,GAAK,IAAA,CAAK,SAAC,CAatB,CAbgC,CAahC;gBACQ,EAAR,CAAA,CAAY,GAbC,GAab,CAbkB,IAAE,CAAI,SAAC,GAAW,CAAA,CAAE,CAatC,CAbwC,CAaxC;oBACU,IAAI,CAbC,KAAC,CAAK,IAAC,CAAI,CAAC,CAAC,CAAC,CAAC;gBAc9B,CAAS;gBACD,IAAI,CAbC,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,CAAC;YAcxC,CAAO;QACP,CAAK;IACL,CAAG;;;;;;;;;;IAHA,sCAAA,GAAA;QAcC,IAAJ,gBAAA,CAbQ,KAAA,GAAQ,CAAA,CAAE;QAcd,IAAJ,gBAAA,CAbQ,GAAA,GAAM,IAAA,CAAK,SAAC,CAAS;QAczB,IAAJ,gBAAA,CAbQ,UAAA,GAAa,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,OAAC,GAAS,CAAA,CAAE,CAAC;QAc9C,IAAJ,gBAAA,CAbQ,WAAA,GAAc,IAAA,CAAK,OAAC,GAAS,CAAA,KAAM,CAAA,GAAI,UAAA,GAAa,CAAA,GAAI,UAAA,CAAW;QAevE,EAAJ,CAAA,CAAQ,IAbC,CAAI,IAAC,IAAO,UAAA,CAarB,CAbiC,CAajC;;YAEM,GAAG,GAbG,IAAA,CAAK,OAAC,CAAO;QAczB,CAAK;QAbL,IAAA,CAAW,EAAX,CAAA,CAAW,IAAK,CAAI,SAAC,GAAW,IAAA,CAAK,IAAC,GAAM,UAAA,CAA5C,CAAwD,CAAxD;;YAeM,KAAK,GAbG,IAAA,CAAK,SAAC,GAAW,IAAA,CAAK,OAAC,CAAO;QAc5C,CAAK;QAbL,IAAA,CAAW,CAAX;;YAeM,KAAK,GAbG,IAAA,CAAK,IAAC,GAAM,UAAA,GAAa,CAAA,CAAE;YAcnC,GAAG,GAbG,IAAA,CAAK,IAAC,GAAM,WAAA,CAAY;QAcpC,CAAK;QAED,MAAJ,CAbW,CAAA,KAAE,EAAM,GAAA,CAAI,CAAC;IAcxB,CAAG;;;;;IARA,wCAAA,GAAA;QAcC,IAAJ,gBAAA,CAbQ,IAAA,GAAO,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI,IAAC,GAAM,IAAA,CAAK,OAAC,CAAO,GAAG,CAAA,CAAE;QAcnD,IAAJ,gBAAA,CAbQ,KAAA,GAAQ,IAAA,GAAO,IAAA,CAAK,OAAC,CAAO;QAchC,IAAJ,gBAAA,CAbQ,GAAA,GAAM,KAAA,GAAQ,IAAA,CAAK,OAAC,CAAO;QAe/B,MAAJ,CAbW,CAAA,KAAE,EAAM,GAAA,CAAI,CAAC;IAcxB,CAAG;;;;;IAXA,uCAAA,GAAA,UAAA,SAAA;QAiBC,IAAJ,gBAAA,CAhBU,UAAA,GAAa,IAAA,CAAK,IAAC,CAAI;QAiB7B,IAAI,CAhBC,IAAC,GAAM,eAAA,CAAgB,SAAC,EAAU,IAAA,CAAK,SAAC,EAAU,CAAA,CAAE,CAAC;QAkB1D,EAAJ,CAAA,CAAQ,IAhBC,CAAI,IAAC,KAAQ,UAAA,CAgBtB,CAhBkC,CAgBlC;YACM,IAAI,CAhBC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,IAAC,CAAI,CAAC;QAiBtC,CAAK;IACL,CAAG;;;;;IAdA,oCAAA,GAAA,UAAA,OAAA;QAoBC,IAAI,CAnBC,SAAC,GAAW,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI,cAAC,GAAgB,IAAA,CAAK,QAAC,CAAQ,CAAC;QAqBhE,EAAJ,CAAA,CAAQ,CAnBC,QAAC,CAAQ,IAAC,CAAI,SAAC,CAAS,CAmBjC,CAnBmC,CAmBnC;YACM,IAAI,CAnBC,SAAC,GAAW,CAAA,CAAE;QAoBzB,CAAK;;QAGD,IAAI,CAnBC,KAAC,CAAK,MAAC,GAAQ,CAAA,CAAE;QAoBtB,GAAJ,CAAA,CAAS,IAAT,gBAAA,CAnBa,CAAA,GAAI,CAAA,EAAG,CAAA,IAAK,IAAA,CAAK,SAAC,EAAU,CAAA,EAAE,EAAG,CAmB9C;YACM,IAAI,CAnBC,KAAC,CAAK,IAAC,CAAI,CAAC,CAAC,CAAC;QAoBzB,CAAK;;QAGD,IAAI,CAnBC,eAAC,CAAe,OAAC,CAAO,CAAC;;QAsB9B,EAAJ,CAAA,CAAQ,IAnBC,CAAI,OAAC,GAAS,CAAA,IAAK,IAAA,CAAK,SAAC,GAAW,IAAA,CAAK,OAAC,CAmBnD,CAnB2D,CAmB3D;YACM,IAAN,gBAAA,CAnBU,KAAA,GAAQ,CAAA,CAAE;YAoBd,IAAN,gBAAA,CAnBU,GAAA,GAAM,IAAA,CAAK,SAAC,CAAS;;YAsBzB,EAAN,CAAA,CAAU,IAnBC,CAAI,MAAC,CAmBhB,CAnBuB,CAmBvB;gBACQ,0BAnBmC,EAmBlC,aAnBC,EAAM,WAAA,CAA6B;YAoB7C,CAAO;YAnBP,IAAA,CAAa,CAAb;gBAoBQ,4BAnBqC,EAmBpC,aAnBC,EAAM,WAAA,CAA+B;YAoB/C,CAAO;YAED,IAAI,CAnBC,KAAC,GAAO,IAAA,CAAK,KAAC,CAAK,KAAC,CAAK,KAAC,EAAM,GAAA,CAAI,CAAC;;YAsB1C,IAAI,CAnBC,cAAC,CAAc,KAAC,EAAM,GAAA,CAAI,CAAC;QAoBtC,CAAK;;IACL,CAAG;;CAhNH;AA8LO,aAAP,CAAA,UAAO,GAAoC;IAoB3C,EAnBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAoBvB,QAAQ,EAnBE,gBAAA;gBAoBV,eAAe,EAnBE,uBAAA,CAAwB,MAAC;gBAoB1C,IAAI,EAnBE,EAAA,MAAE,EAAO,YAAA,EAAa;gBAoB5B,QAAQ,EAnBE,+2DAsDT;aACF,EAnBC,EAAG;CAoBJ,CAnBC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAsBD,EAAC,IAAI,EAAE,mBAAmB,GAAG;CAC5B,EAvBA,CAuBA,CAAC;AApBK,aAAP,CAAA,cAAO,GAAyD;IAsBhE,UAAU,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB7B,eAAe,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBlC,gBAAgB,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBnC,UAAU,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB7B,QAAQ,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB3B,gBAAgB,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBnC,SAAS,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB5B,MAAM,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsBzB,UAAU,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB7B,YAAY,EArBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAsBhC,MAAM,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAsBxB,CArBC;ADvPF;IAAA;;;;;IAGG,2BAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,mBAAA,EAAqB,SAAA,EAAW,CAAA,mBAAE,CAAmB,EAAC,CAAC,CACnH,CADoH;;CAHpH;AAIO,mBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,aAAE,CAAa,EAAE,OAAA,EAAS,CAAA,aAAE,CAAa,EAAE,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAE9G,CADC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADnBF;;;;;IAKA,iBALqB,IAAM,EAAe,KAAQ;QAA7B,IAArB,CAAA,IAAqB,GAAA,IAAA,CAAM;QAAe,IAA1C,CAAA,KAA0C,GAAA,KAAA,CAAQ;QAO9C,EAAJ,CAAA,CAAQ,CAAC,KAAK,CAAd,CAAgB,CAAhB;YACM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACxB,CAAK;IACL,CAAG;;;;IAIH,0BARG,GAQH,cARe,MAQf,CARsB,IAAA,CAAK,IAAC,KAAQ,QAAA,IAAY,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAQxE,CARyE;IASzE,cAAC;AAAD,CAAC,AAfD,IAeC;AAED,IARM,eAAA,GAAkB;IAiBtB,OAAO,EAhBE,CAAA,YAAE,EAAa,YAAA,CAAa;CAiBtC,CAhBC;;;;;;AAsBF,uBApBC,QAAA,EAAA,OAAA;IAAA,wBAAA,EAAA,yBAAA;IAqBC,IAAF,gBAAA,CApBQ,eAAA,GAAkB,CAAA,QAAE,IAAW,EAAA,CAoBvC,CApB2C,IAAC,EAAI,CAAE;IAsBhD,EAAF,CAAA,CAAM,eApBC,CAAe,MAAC,KAAU,CAAA,CAoBjC,CApBoC,CAoBpC;QACI,MAAJ,CApBW,EAAA,CAAG;IAqBd,CAAG;IAED,IAAF,gBAAA,CApBQ,cAAA,GAAiB,eAAA,CAAgB,KAAC,CAAK,KAAC,CAAK,CAAC,GAAC,CAAG,UAAA,OAAC,IAAU,OAAA,OAAA,CAAQ,KAAC,CAAK,GAAC,CAAG,EAAlB,CAAkB,CAAC,CAAC,GAAC,CAAG,UAAC,WAAC;QAqB3F,IAAJ,gBAAA,CApBQ,KAAA,GAAQ,OAAA,CAAQ,WAAC,CAAW,CAAC,CAAC,CAAC,IAAI,WAAA,CAAY;QAqBnD,MAAJ,CApBW,IAAI,OAAA,CAAQ,KAAC,CAAK,CAAC,CAAC,EAAE,KAAA,CAAM,CAAC,CAAC,CAAC,CAAC;IAqB3C,CAAG,CApBC,CAAC;IAsBH,IAAF,gBAAA,CApBQ,cAAA,GAAiB,cAAA,CAAe,MAAC,CAAM,UAAA,WAAC,IAAc,OAAA,WAAA,CAAY,QAAC,EAAQ,EAArB,CAAqB,CAAE,CAAC;IAsBpF,EAAF,CAAA,CAAM,cApBC,CAAc,MAAC,GAAQ,CAAA,CAoB9B,CApBiC,CAoBjC;QACI,MApBM,0DAAA,CAA2D;IAqBrE,CAAG;IAED,EAAF,CAAA,CAAM,cApBC,CAAc,MAAC,KAAU,CAAA,IAAK,cAAA,CAAe,MAAC,GAAQ,CAAA,CAoB7D,CApBgE,CAoBhE;QACI,MApBM,0EAAA,CAA2E;IAqBrF,CAAG;IAED,MAAF,CApBS,cAAA,CAAe;AAqBxB,CAAC;AAED,IApBM,MAAA,GAAS,cAoBf,CApBqB,CAAG;;;;;;;;;;AA8BxB,0BA5BC,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA;IA6BC,IAAF,gBAAA,CA5BQ,cAAA,GAAiB,aAAA,CAAc,QAAC,CAAQ,CAAC;IA6B/C,IAAF,gBAAA,CA5BQ,SAAA,GAAY,EAAA,CAAG;IA8BrB,EAAF,CAAA,CAAM,cA5BC,CAAc,MAAC,KAAU,CAAA,IAAK,cAAA,CAAe,CAAC,CAAC,CAAC,QAAC,EAAQ,CA4BhE,CA5BmE,CA4BnE;QACI,MAAJ,CA5BW,MAAA,CAAO;IA6BlB,CAAG;IAED,cAAc,CA5BC,OAAC,CAAO,UAAC,OAAS;QA6B/B,EAAJ,CAAA,CAAQ,OA5BC,CAAO,IAAC,KAAQ,OAAA,CAAQ,KAAC,CA4BlC,CA5BwC,CA4BxC;YACM,SAAS,CA5BC,IAAC,CAAI,QAAC,CAAQ,MAAC,CAAM,aAAC,EAAc,OAAA,CAAQ,IAAC,EAAK,QAAA,CAAS,CAAC,CAAC;QA6B7E,CAAK;QA5BL,IAAA,CAAW,CAAX;YA6BM,SAAS,CA5BC,IAAC,CA6BP,QAAQ,CA5BC,MAAC,CAAM,aAAC,EAAc,OAAA,CAAQ,IAAC,EAAK,MAAA,CAAO,EAAE,QAAA,CAAS,MAAC,CAAM,aAAC,EAAc,OAAA,CAAQ,KAAC,EAAM,OAAA,CAAQ,CAAC,CAAC;QA6BxH,CAAK;IACL,CAAG,CA5BC,CAAC;IA8BH,MAAF,CA5BS,cAAQ,SAAA,CAAU,OAAC,CAAO,UAAA,aAAC,IAAgB,OAAA,aAAA,EAAc,EAAd,CAAc,CAAE,CAAC,CA4BrE,CA5BsE,CAAE;AA6BxE,CAAC;ADtFD;;;;;AAKA;IAAA;QACE,IAAF,CAAA,SAAW,GAEwC,KAAA,CAAM;QADvD,IAAF,CAAA,QAAU,GAEG,OAAA,CAAQ;IAQrB,CAAC;;CAZD;AAMO,gBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADOF,IAAID,QAAA,GAAS,CAAA,CAAE;AACf;IAAA;QACG,IAAH,CAAA,SAAY,GAEwC,KAAA,CAAM;IAqB1D,CAAC;;CAxBD;AAMO,gBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBADvB,QAAQ,EAEE,oBAAA;gBADV,eAAe,EAEE,uBAAA,CAAwB,MAAC;gBAD1C,IAAI,EAEE,EAAA,SAAE,EAAU,qCAAA,EAAuC,MAAA,EAAQ,SAAA,EAAW,MAAA,EAAQ,IAAA,EAAK;gBADzF,QAAQ,EAEE,sHAAP;aACJ,EAEC,EAAG;CADJ,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;AACK,gBAAP,CAAA,cAAO,GAAyD;IAChE,WAAW,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAC9B,OAAO,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAC1B,IAAI,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CACtB,CAAC;AAGF;;;AAqBA;;;;;;;;;;IA4CA,oBAvBc,WAAa,EAAoB,SAAW,EAAW,QAAU,EA0BzE,wBAzB0B,EAA0B,gBAAkB,EAAkB,MAAQ,EA0BhG,MAzBQ;QAqBd,iBAkBG;QAzCW,IAAd,CAAA,WAAc,GAAA,WAAA,CAAa;QAAoB,IAA/C,CAAA,SAA+C,GAAA,SAAA,CAAW;;;;QAIvD,IAAH,CAAA,KAAQ,GAjBG,IAAI,YAAA,EAAa,CAAE;;;;QAqB3B,IAAH,CAAA,MAAS,GAjBG,IAAI,YAAA,EAAa,CAAE;QAErB,IAAV,CAAA,mBAAU,GAAsB,iBAAAA,QAAgB,EAAQ,CAAE;QAmCtD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CACjC,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAEvF,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjD,EAAN,CAAA,CAAU,KAAI,CAAC,UAAU,CAAzB,CAA2B,CAA3B;gBACQ,gBAAgB,CACZ,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAI,CAAC,SAAS,EACtF,KAAI,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC;YACvC,CAAO;QACP,CAAK,CAAC,CAAC;IACP,CAAG;;;;;;;IAOH,yBA1BG,GA0BH,UA1BG,OAAA;QA2BC,EAAJ,CAAA,CAAQ,CA1BC,IAAC,CAAI,UAAC,CA0Bf,CA1B0B,CA0B1B;YACM,IAAI,CA1BC,UAAC,GAAY,IAAA,CAAK,aAAC,CAAa,IAAC,CAAI,IAAC,CAAI,UAAC,EAAW,OAAA,CAAQ,CAAC;YA2BpE,IAAI,CA1BC,UAAC,CAAU,QAAC,CAAQ,SAAC,GAAW,IAAA,CAAK,SAAC,CAAS;YA2BpD,IAAI,CA1BC,UAAC,CAAU,QAAC,CAAQ,KAAC,GAAO,IAAA,CAAK,YAAC,CAAY;YA2BnD,IAAI,CA1BC,UAAC,CAAU,QAAC,CAAQ,EAAC,GAAI,IAAA,CAAK,mBAAC,CAAmB;YA4BvD,IAAI,CA1BC,SAAC,CAAS,YAAC,CAAY,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,kBAAA,EAAoB,IAAA,CAAK,mBAAC,CAAmB,CAAC;YA4B1G,EAAN,CAAA,CAAU,IA1BC,CAAI,SAAC,KAAa,MAAA,CA0B7B,CA1BqC,CA0BrC;gBACQ,MAAM,CA1BC,QAAC,CAAQ,aAAC,CAAa,IAAC,CAAI,SAAC,CAAS,CAAC,WAAC,CAAW,IAAC,CAAI,UAAC,CAAU,QAAC,CAAQ,aAAC,CAAa,CAAC;YA2B1G,CAAO;;YAGD,gBAAgB,CACZ,IAAI,CA1BC,WAAC,CAAW,aAAC,EAAc,IAAA,CAAK,UAAC,CAAU,QAAC,CAAQ,aAAC,EAAc,IAAA,CAAK,SAAC,EA2B9E,IAAI,CA1BC,SAAC,KAAa,MAAA,CAAO,CAAC;;;YA8B/B,IAAI,CA1BC,UAAC,CAAU,iBAAC,CAAiB,YAAC,EAAY,CAAE;YA2BjD,IAAI,CA1BC,KAAC,CAAK,IAAC,EAAI,CAAE;QA2BxB,CAAK;IACL,CAAG;;;;;IAKH,0BA1BG,GA0BH;QACI,EAAJ,CAAA,CAAQ,IA1BC,CAAI,UAAC,CA0Bd,CA1ByB,CA0BzB;YACM,IAAI,CA1BC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,kBAAA,CAAmB,CAAC;YA2BnF,IAAI,CA1BC,aAAC,CAAa,KAAC,EAAK,CAAE;YA2B3B,IAAI,CA1BC,UAAC,GAAY,IAAA,CAAK;YA2BvB,IAAI,CA1BC,MAAC,CAAM,IAAC,EAAI,CAAE;QA2BzB,CAAK;IACL,CAAG;;;;;IAKH,2BA1BG,GA0BH;QACI,EAAJ,CAAA,CAAQ,IA1BC,CAAI,UAAC,CA0Bd,CA1ByB,CA0BzB;YACM,IAAI,CA1BC,KAAC,EAAK,CAAE;QA2BnB,CAAK;QA1BL,IAAA,CAAW,CAAX;YA2BM,IAAI,CA1BC,IAAC,EAAI,CAAE;QA2BlB,CAAK;IACL,CAAG;;;;;IAKH,2BA1BG,GA0BH,cA1BsB,MA0BtB,CA1B6B,IAAA,CAAK,UAAC,IAAa,IAAA,CAAK,CA0BrD,CA1BsD;;;;IA8BtD,6BA5BG,GA4BH;QACI,IAAI,CA5BC,sBAAC,GAAwB,gBAAA,CA6B1B,IAAI,CA5BC,SAAC,EAAU,IAAA,CAAK,WAAC,CAAW,aAAC,EAAc,IAAA,CAAK,QAAC,EAAS,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI,IAAC,CAAI,EAAE,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,EA6B1G,IAAI,CA5BC,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,CAAC,CAAC;IA6BhC,CAAG;;;;IAIH,gCA9BG,GA8BH;QACI,IAAI,CA9BC,KAAC,EAAK,CAAE;QA+Bb,IAAI,CA9BC,sBAAC,EAAsB,CAAE;QA+B9B,IAAI,CA9BC,iBAAC,CAAiB,WAAC,EAAW,CAAE;IA+BzC,CAAG;;CAxIH;AA2GO,UAAP,CAAA,UAAO,GAAoC;IA+B3C,EA9BE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,cAAA,EAAgB,QAAA,EAAU,YAAA,EAAa,EAAC,EAAG;CA+B/E,CA9BC;;;;AAED,UAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAiCD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAxCA,CAwCA,CAAC;AA/BK,UAAP,CAAA,cAAO,GAAyD;IAiChE,YAAY,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC/B,cAAc,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiCjC,WAAW,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC9B,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC7B,WAAW,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC9B,OAAO,EAhCE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAiC3B,QAAQ,EAhCE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAiC3B,CAhCC;ADjMF;IAAA;;;;;IAGG,wBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,gBAAA,EAAkB,SAAA,EAAW,CAAA,gBAAE,CAAgB,EAAC,CAAC,CAC7G,CAD8G;;CAH9G;AAIO,gBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,UAAE,EAAW,gBAAA,CAAiB,EAAE,OAAA,EAAS,CAAA,UAAE,CAAU,EAAE,eAAA,EAAiB,CAAA,gBAAE,CAAgB,EAAC,EAAC,EAAG;CAEtI,CADC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADlBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,GAAK,GAEG,GAAA,CAAI;QADV,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QADjB,IAAF,CAAA,OAAS,GAEG,KAAA,CAAM;QAAhB,IAAF,CAAA,SAAW,GAEY,KAAA,CAAM;IAO7B,CAAC;;CAdD;AAQO,oBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADhBF;;;AAGA;;;;IAkCA,wBAAG,MAAmB;;;;QAJnB,IAAH,CAAA,KAAQ,GAEG,CAAA,CAAE;QAGT,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACtC,CAAG;;;;IAIH,iCAFG,GAEH,cAFe,MAEf,CAFsB,eAAA,CAAgB,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,GAAC,CAAG,CAAC,CAE5D,CAF6D;;;;IAM7D,wCAJG,GAIH,cAJsB,MAItB,CAJ6B,GAAA,GAAM,IAAA,CAAK,QAAC,EAAQ,GAAI,IAAA,CAAK,GAAC,CAAG,CAI9D,CAJ+D;;CA5C/D;AA6CO,cAAP,CAAA,UAAO,GAAoC;IAK3C,EAJE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAKvB,QAAQ,EAJE,iBAAA;gBAKV,eAAe,EAJE,uBAAA,CAAwB,MAAC;gBAK1C,QAAQ,EAJE,ycAYT;aACF,EAJC,EAAG;CAKJ,CAJC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAOD,EAAC,IAAI,EAAE,oBAAoB,GAAG;CAC7B,EARA,CAQA,CAAC;AALK,cAAP,CAAA,cAAO,GAAyD;IAOhE,KAAK,EANE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAOxB,UAfE,EASU,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAO7B,SAAS,EANE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAO5B,WAAW,EANE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAO9B,MAAM,EANE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAOzB,OAAO,EANE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAOzB,CANC;ADrEF;IAAA;;;;;IAGG,4BAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,oBAAA,EAAsB,SAAA,EAAW,CAAA,oBAAE,CAAoB,EAAC,CAAC,CACrH,CADsH;;CAHtH;AAIO,oBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,cAAE,CAAc,EAAE,OAAA,EAAS,CAAA,cAAE,CAAc,EAAE,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAEhH,CADC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADnBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,GAAK,GAEG,EAAA,CAAG;QADT,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QADjB,IAAF,CAAA,UAAY,GAEG,KAAA,CAAM;IAOrB,CAAC;;CAZD;AAMO,eAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,eAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADCF,IAAI,GAAC,GAAM,EAAA,CAAA;AACX,GAAG,CAAC,GAAE,GAAE,EAAI,CAAA;AACZ,GAAG,CAAC,IAAG,GAAE,EAAI,CAAA;AACb,GAAG,CAAC,SAAQ,GAAE,EAAI,CAAA;AAClB,GAAG,CAAC,OAAM,GAAE,EAAI,CAAA;AAChB,GAAG,CAAC,UAAS,GAAE,EAAI,CAAA;AACnB,GAAG,CAAC,SAAQ,GAAE,EAAG,CAAA;AACjB,GAAE,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AACnC,GAAG,CAAC,GAAG,CAAA,SAAU,CAAA,GAAA,WAAA,CAAA;AAajB,IANM,yBAAA,GAA4B;IAOhC,OAAO,EANE,iBAAA;IAOT,WAAW,EANE,UAAA,CAAW,cAAM,OAAA,SAAA,EAAA,CAAA,CAAU;IAOxC,KAAK,EANE,IAAA;CAOR,CANC;;;;AAUF;;;;;IAyDA,mBAPG,MAAmB,EAAyB,kBAAoB;QAApB,IAA/C,CAAA,kBAA+C,GAAA,kBAAA,CAAoB;QAhDjE,IAAF,CAAA,QAAU,GAJ0B,EAAA,CAAG;QAKrC,IAAF,CAAA,QAAU,GAJG,KAAA,CAAM;;;;;QAsChB,IAAH,CAAA,KAAQ,GAJG,IAAI,YAAA,EAAoB,CAAG;;;;;QAUnC,IAAH,CAAA,KAAQ,GAJG,IAAI,YAAA,EAAoB,CAAG;;;;;QAUnC,IAAH,CAAA,UAAa,GAJG,IAAI,YAAA,CAAoB,IAAE,CAAI,CAAC;QAM7C,IAAF,CAAA,QAAU,GAJG,UAAA,CAAI,IAIjB,CAJyB,CAAG;QAK1B,IAAF,CAAA,SAAW,GAJG,cAId,CAJoB,CAAG;QAWnB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IACpC,CAAG;;;;IAIH,iCAVG,GAUH,cAVoB,MAUpB,CAV2B,IAAI,CAAI,QAAC,gBAAQ,IAAW,CAAI,GAAI,CAAE,CAUjE,CAVkE;;;;;IAelE,yBAbG,GAaH,UAbG,KAAA;QAcC,EAAJ,CAAA,CAAQ,CAbC,IAAC,CAAI,QAAC,IAAW,CAAA,IAAE,CAAI,QAAC,CAajC,CAb0C,CAa1C;YACM,IAAI,CAbC,YAAC,CAAY,KAAC,CAAK,CAAC;QAc/B,CAAK;QACD,IAAI,CAbC,KAAC,CAAK,IAAC,CAAI,KAAC,CAAK,CAAC;IAc3B,CAAG;;;;IAIH,8BAfG,GAeH,cAfiB,IAAA,CAAK,SAAC,EAAS,CAAE,CAelC,CAfmC;;;;;IAoBnC,+BAlBG,GAkBH,UAlBG,KAAA,IAA4B,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,UAAC,IAAa,IAAA,CAAK,IAAC,KAAQ,KAAA,GAAQ,CAAA,GAAI,KAAA,CAAM,CAAC,CAkB/F,CAlBgG;;;;;IAuBhG,iCArBG,GAqBH,UArBG,KAAA;QAsBC,EAAJ,CAAA,CAAQ,GArBC,CAAG,QAAC,CAAQ,KAAC,CAAK,KAAC,CAAK,CAAC,CAqBlC,CArBoC,CAqBpC;YACM,KAAK,CArBC,cAAC,EAAc,CAAE;YAuBvB,MAAN,CAAA,CAAc,KArBC,CAAK,KAAC,CAqBrB,CAAA,CAAA;gBACQ,KArBK,GAAA,CAAI,SAAC,CAAS;gBAsBnB,KArBK,GAAA,CAAI,SAAC;oBAsBR,IAAI,CArBC,MAAC,CAAM,IAAC,CAAI,IAAC,GAAM,CAAA,CAAE,CAAC;oBAsB3B,KAAV,CAAgB;gBACR,KArBK,GAAA,CAAI,OAAC,CAAO;gBAsBjB,KArBK,GAAA,CAAI,UAAC;oBAsBR,IAAI,CArBC,MAAC,CAAM,IAAC,CAAI,IAAC,GAAM,CAAA,CAAE,CAAC;oBAsB3B,KAAV,CAAgB;gBACR,KArBK,GAAA,CAAI,IAAC;oBAsBR,IAAI,CArBC,MAAC,CAAM,CAAC,CAAC,CAAC;oBAsBf,KAAV,CAAgB;gBACR,KArBK,GAAA,CAAI,GAAC;oBAsBR,IAAI,CArBC,MAAC,CAAM,IAAC,CAAI,GAAC,CAAG,CAAC;oBAsBtB,KAAV,CAAgB;YAChB,CAAO;QACP,CAAK;IACL,CAAG;;;;;IAKH,+BAxBG,GAwBH,UAxBG,OAAA;QAyBC,EAAJ,CAAA,CAAQ,OAxBC,CAAO,MAAC,CAAM,CAwBvB,CAxByB,CAwBzB;YACM,IAAI,CAxBC,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,CAAC;QAyB7B,CAAK;IACL,CAAG;;;;IAIH,4BA1BG,GA0BH;QACI,IAAI,CA1BC,QAAC,GAAU,KAAA,CAAM,IAAC,CAAI,EAAC,MAAC,EAAO,IAAA,CAAK,GAAC,EAAG,EAAE,cA0BnD,OAAA,CA1ByD,EAAE,IAAC,EAAK,CAAA,EAAE,CAAC,EA0BpE,CA1BoE,CAAC,CAAC;QA2BlE,IAAI,CA1BC,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,CAAC;IA2BjC,CAAG;;;;;IAKH,oCA7BG,GA6BH,UA7BG,EAAA,IAAiD,IAAA,CAAK,QAAC,GAAU,EAAA,CAAG,CA6BvE,CA7BwE;;;;;IAkCxE,qCAhCG,GAgCH,UAhCG,EAAA,IAAwC,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAgC/D,CAhCgE;;;;IAoChE,yBAlCG,GAkCH;QACI,IAAI,CAlCC,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,QAAC,CAAQ,CAAC;QAmC/B,IAAI,CAlCC,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,CAAC;IAmCjC,CAAG;;;;;IAKH,oCArCG,GAqCH,UArCG,UAAA,IAAuC,IAAA,CAAK,QAAC,GAAU,UAAA,CAAW,CAqCrE,CArCsE;;;;;;IA2CtE,0BAzCG,GAyCH,UAzCG,KAAA,EAAA,cAAA;QAAA,+BAAA,EAAA,qBAAA;QA0CC,IAAJ,gBAAA,CAzCU,OAAA,GAAU,eAAA,CAAgB,KAAC,EAAM,IAAA,CAAK,GAAC,EAAI,CAAA,CAAE,CAAC;QA0CpD,EAAJ,CAAA,CAAQ,CAzCC,IAAC,CAAI,QAAC,IAAW,CAAA,IAAE,CAAI,QAAC,IAAW,IAAA,CAAK,IAAC,KAAQ,OAAA,CAyC1D,CAzCmE,CAyCnE;YACM,IAAI,CAzCC,IAAC,GAAM,OAAA,CAAQ;YA0CpB,IAAI,CAzCC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,IAAC,CAAI,CAAC;QA0CtC,CAAK;QACD,EAAJ,CAAA,CAAQ,cAzCC,CAyCT,CAzCwB,CAyCxB;YACM,IAAI,CAzCC,QAAC,CAAQ,IAAC,CAAI,IAAC,CAAI,CAAC;YA0CzB,IAAI,CAzCC,SAAC,EAAS,CAAE;QA0CvB,CAAK;QACD,IAAI,CAzCC,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,CAAC;IA0CjC,CAAG;;;;;IAKH,8BA5CG,GA4CH,UA5CG,KAAA;QA6CC,IAAI,CA5CC,MAAC,CAAM,KAAC,EAAM,KAAA,CAAM,CAAC;QA6C1B,IAAI,CA5CC,kBAAC,CAAkB,YAAC,EAAY,CAAE;IA6C3C,CAAG;;;;;IA1CA,iCAAA,GAAA,UAAA,KAAA;QAgDC,IAAJ,gBAAA,CA/CU,IAAA,GAAO,IAAA,CAAK,QAAC,GAAU,KAAA,CAAM;QAiDnC,EAAJ,CAAA,CAAQ,IA/CC,IAAO,CAAA,CA+ChB,CA/CmB,CA+CnB;YACM,MAAN,CA/Ca,GAAA,CAAI;QAgDjB,CAAK;QACD,EAAJ,CAAA,CAAQ,IA/CC,GAAM,CAAA,IAAK,IAAA,GAAO,CAAA,CA+C3B,CA/C8B,CA+C9B;YACM,MAAN,CA/Ca,MAAA,CAAO,QAAC,CAAQ,CAAC,IAAC,GAAM,GAAA,CA+CrC,CA/C0C,OAAC,CAAO,CAAC,CAAC,CAAC,CAAC;QAgDtD,CAAK;QAED,MAAJ,CA/CW,CAAA,CAAE;IAgDb,CAAG;;;;;IA7CA,gCAAA,GAAA,UAAA,SAAA;QAAA,iBAqDA;QAFC,IAAI,CAlDC,QAAC,GAAU,SAAA,CAAU;QAmD1B,IAAI,CAlDC,QAAC,CAAQ,OAAC,CAAO,UAAC,OAAC,EAAQ,KAAA,IAAU,OAAA,OAAA,CAAQ,IAAC,GAAM,KAAA,CAAK,aAAC,CAAa,KAAC,CAAK,EAAxC,CAAwC,CAAC,CAAC;IAmDxF,CAAG;;CArMH;AAoJO,SAAP,CAAA,UAAO,GAAoC;IAmD3C,EAlDE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAmDvB,QAAQ,EAlDE,YAAA;gBAmDV,eAAe,EAlDE,uBAAA,CAAwB,MAAC;gBAmD1C,IAAI,EAlDE;oBAmDJ,OAAO,EAlDE,eAAA;oBAmDT,UAAU,EAlDE,GAAA;oBAmDZ,MAAM,EAlDE,QAAA;oBAmDR,eAAe,EAlDE,GAAA;oBAmDjB,sBAAsB,EAlDE,KAAA;oBAmDxB,sBAAsB,EAlDE,UAAA;oBAmDxB,uBAAuB,EAlDE,iBAAA;oBAmDzB,sBAAsB,EAlDE,wBAAA;oBAmDxB,QAAQ,EAlDE,cAAA;oBAmDV,WAAW,EAlDE,uBAAA;oBAmDb,cAAc,EAlDE,SAAA;iBAmDjB;gBACD,QAAQ,EAlDE,+hBA0DT;gBACD,SAAS,EAlDE,CAAA,yBAAE,CAAyB;aAmDvC,EAlDC,EAAG;CAmDJ,CAlDC;;;;AAED,SAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAqDD,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAvDA,CAuDA,CAAC;AAnDK,SAAP,CAAA,cAAO,GAAyD;IAqDhE,KAAK,EApDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqDxB,MAAM,EApDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqDzB,UAAU,EApDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqD7B,YAAY,EApDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqD/B,cAAc,EApDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE,EAAE,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;IAqD/E,OAAO,EApDE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAqD3B,OAAO,EApDE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAqD3B,YAAY,EApDE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAqD/B,CApDC;AD1OF;IAAA;;;;;IAGG,uBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,eAAA,EAAiB,SAAA,EAAW,CAAA,eAAE,CAAe,EAAC,CAAC,CAC3G,CAD4G;;CAH5G;AAIO,eAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,SAAE,CAAS,EAAE,OAAA,EAAS,CAAA,SAAE,CAAS,EAAE,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAEtG,CADC;;;;AAED,eAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADnBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,OAAS,GAE+B,OAAA,CAAQ;QAD9C,IAAF,CAAA,IAAM,GAEqB,MAAA,CAAO;IAOlC,CAAC;;CAXD;AAKO,eAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,eAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADFF,IAAIA,QAAA,GAAS,CAAA,CAAE;;;;AAIf;;;;IAIA,qBADqB,WAA6B;QAA7B,IAArB,CAAA,WAAqB,GAAA,WAAA,CAA6B;IAAlD,CAAmD;;CAHnD;AAIO,WAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,0BAAA,EAA2B,EAAC,EAAG;CAEnE,CADC;;;;AAED,WAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAID,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EALA,CAKA,CAAC;AAGF;;;AAeA;;;;IAIA,uBAjBqB,WAA6B;QAA7B,IAArB,CAAA,WAAqB,GAAA,WAAA,CAA6B;IAAlD,CAAmD;;CAanD;AAZO,aAAP,CAAA,UAAO,GAAoC;IAkB3C,EAjBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,4BAAA,EAA6B,EAAC,EAAG;CAkBrE,CAjBC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAoBD,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EArBA,CAqBA,CAAC;AAGF;;;AAeA;IAAA;;;;QAIG,IAAH,CAAA,EAAK,GA9BW,aAAAA,QAAY,EAAQ,CAAE;;;;QAsCnC,IAAH,CAAA,QAAW,GA9BG,KAAA,CAAM;IAiDpB,CAAC;;CA/BD;AAdO,MAAP,CAAA,UAAO,GAAoC;IA+B3C,EA9BE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,SAAA,EAAU,EAAC,EAAG;CA+BlD,CA9BC;;;;AAED,MAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAiCA,EAjCA,CAiCA,CAAC;AA/BK,MAAP,CAAA,cAAO,GAAyD;IAiChE,IAAI,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiCvB,OAAO,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC1B,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC7B,YAAY,EAhCE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE;IAiC/D,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;CAiC1D,CAhCC;AAmCF;;;AAsDA;;;;IA8BA,mBAhEG,MAAmB;;;;QA6CnB,IAAH,CAAA,aAAgB,GA9DY,IAAA,CAAK;;;;QA6E9B,IAAH,CAAA,SAAY,GA9DG,IAAI,YAAA,EAA+B,CAAG;QAmEjD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAG;;;;;;;IAOH,0BAjEG,GAiEH,UAjEG,KAAA;QAwBD,IAAF,gBAAA,CAvBQ,WAAA,GAAc,IAAA,CAAK,WAAC,CAAW,KAAC,CAAK,CAAC;QAkE1C,EAAJ,CAAA,CAAQ,WAjEC,IAAc,CAAA,WAAE,CAAW,QAAC,IAAW,IAAA,CAAK,QAAC,KAAY,WAAA,CAAY,EAAC,CAiE/E,CAjEkF,CAiElF;YACM,IAAN,gBAAA,CAjEU,kBAAA,GAAmB,KAAA,CAAM;YAmE7B,IAAI,CAjEC,SAAC,CAAS,IAAC,CAkEZ,EAAC,QAjEC,EAAS,IAAA,CAAK,QAAC,EAAS,MAAA,EAAQ,WAAA,CAAY,EAAC,EAAG,cAAA,EAAgB,cAAQ,kBAAA,GAAmB,IAAA,CAAK,CAgE5G,CAhE6G,EAAE,CAAC,CAAC;YAmE3G,EAAN,CAAA,CAAU,CAjEC,kBAAC,CAiEZ,CAjE6B,CAiE7B;gBACQ,IAAI,CAjEC,QAAC,GAAU,WAAA,CAAY,EAAC,CAAE;YAkEvC,CAAO;QACP,CAAK;IACL,CAAG;;;;IAIH,yCAnEG,GAmEH;;QAEI,IAAJ,gBAAA,CAnEQ,SAAA,GAAY,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,QAAC,CAAQ,CAAC;QAoEhD,IAAI,CAnEC,QAAC,GAAU,SAAA,GAAY,SAAA,CAAU,EAAC,GAmE3C,CAnE+C,IAAE,CAAI,IAAC,CAAI,MAAC,GAAQ,IAAA,CAAK,IAAC,CAAI,KAAC,CAAK,EAAC,GAAI,IAAA,CAAK,CAAC;IAoE9F,CAAG;;;;;IAjEA,+BAAA,GAAA,UAAA,EAAA;QAuEC,IAAJ,gBAAA,CAtEQ,UAAA,GAAuB,IAAA,CAAK,IAAC,CAAI,MAAC,CAAM,UAAA,GAAC,IAAM,OAAA,GAAA,CAAI,EAAC,KAAM,EAAA,EAAX,CAAW,CAAG,CAAC;QAuElE,MAAJ,CAtEW,UAAA,CAAW,MAAC,GAAQ,UAAA,CAAW,CAAC,CAAC,GAAG,IAAA,CAAK;IAuEpD,CAAG;;CApEH;AADO,SAAP,CAAA,UAAO,GAAoC;IAuE3C,EAtEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAuEvB,QAAQ,EAtEE,YAAA;gBAuEV,QAAQ,EAtEE,WAAA;gBAuEV,QAAQ,EAtEE,+tCA6FT;aACF,EAtEC,EAAG;CAuEJ,CAtEC;;;;AAED,SAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAyED,EAAC,IAAI,EAAE,eAAe,GAAG;CACxB,EA1EA,CA0EA,CAAC;AAvEK,SAAP,CAAA,cAAO,GAAyD;IAyEhE,MAAM,EAxEE,CAAA,EAAG,IAAA,EAAM,eAAA,EAAiB,IAAA,EAAM,CAAA,MAAE,EAAM,EAAG,EAAE;IAyErD,UAAU,EAxEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAyE7B,eAAe,EAxEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAyElC,SAAS,EAxEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAyE5B,MAAM,EAxEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAyEzB,WAAW,EAxEE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAyE9B,CAxEC;ADtMF,IAAM,qBAAA,GAAwB,CAAA,SAAE,EAAU,MAAA,EAAQ,aAAA,EAAe,WAAA,CAAY,CAAC;AAC9E;IAAA;;;;;IAGG,uBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,eAAA,EAAiB,SAAA,EAAW,CAAA,eAAE,CAAe,EAAC,CAAC,CAC3G,CAD4G;;CAH5G;AAIO,eAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,qBAAA,EAAuB,OAAA,EAAS,qBAAA,EAAuB,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAE1H,CADC;;;;AAED,eAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADrBF;;;;;;IASA,iBAHG,IAAkB,EAAQ,MAAS,EAAQ,MAAS;QAInD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IACpC,CAAG;;;;;IAKH,4BANG,GAMH,UANG,IAAA;QAAA,qBAAA,EAAA,QAAA;QAAsB,IAAA,CAAK,UAAC,CAAU,CAAC,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,GAAG,CAAA,GAAI,IAAA,CAAK,IAAC,CAMvE,GAN8E,IAAA,CAAK,CAAC;IAMpF,CANqF;;;;;IAWrF,4BATG,GASH,UATG,IAAA;QAUC,EAAJ,CAAA,CAAQ,QATC,CAAQ,IAAC,CAAI,CAStB,CATwB,CASxB;YACM,IAAI,CATC,IAAC,GAAM,CAAA,IAAE,GAAM,CAAA,GAAI,EAAA,GAAK,IAAA,GAAO,IAAA,CAS1C,GATkD,EAAA,CAAG;QAUrD,CAAK;QATL,IAAA,CAAW,CAAX;YAUM,IAAI,CATC,IAAC,GAAM,GAAA,CAAI;QAUtB,CAAK;IACL,CAAG;;;;;IAKH,8BAZG,GAYH,UAZG,IAAA;QAAA,qBAAA,EAAA,QAAA;QAAwB,IAAA,CAAK,YAAC,CAAY,CAAC,KAAC,CAAK,IAAC,CAAI,MAAC,CAAM,GAAG,CAAA,GAAI,IAAA,CAAK,MAAC,CAY7E,GAZsF,IAAA,CAAK,CAAC;IAY5F,CAZ6F;;;;;IAiB7F,8BAfG,GAeH,UAfG,MAAA;QAgBC,EAAJ,CAAA,CAAQ,QAfC,CAAQ,MAAC,CAAM,CAexB,CAf0B,CAe1B;YACM,IAAI,CAfC,MAAC,GAAQ,MAAA,GAAS,EAAA,GAAK,CAAA,GAAI,EAAA,GAAK,MAAA,GAAS,EAAA,GAAK,MAAA,GAAS,EAAA,CAAG;YAgB/D,IAAI,CAfC,UAAC,CAAU,IAAC,CAAI,KAAC,CAAK,MAAC,GAAQ,EAAA,CAAG,CAAC,CAAC;QAgB/C,CAAK;QAfL,IAAA,CAAW,CAAX;YAgBM,IAAI,CAfC,MAAC,GAAQ,GAAA,CAAI;QAgBxB,CAAK;IACL,CAAG;;;;;IAKH,8BAlBG,GAkBH,UAlBG,IAAA;QAAA,qBAAA,EAAA,QAAA;QAAwB,IAAA,CAAK,YAAC,CAAY,CAAC,KAAC,CAAK,IAAC,CAAI,MAAC,CAAM,GAAG,CAAA,GAAI,IAAA,CAAK,MAAC,CAkB7E,GAlBsF,IAAA,CAAK,CAAC;IAkB5F,CAlB6F;;;;;IAuB7F,8BArBG,GAqBH,UArBG,MAAA;QAsBC,EAAJ,CAAA,CAAQ,QArBC,CAAQ,MAAC,CAAM,CAqBxB,CArB0B,CAqB1B;YACM,IAAI,CArBC,MAAC,GAAQ,MAAA,GAAS,CAAA,GAAI,EAAA,GAAK,MAAA,GAAS,EAAA,GAAK,MAAA,GAAS,EAAA,CAAG;YAsB1D,IAAI,CArBC,YAAC,CAAY,IAAC,CAAI,KAAC,CAAK,MAAC,GAAQ,EAAA,CAAG,CAAC,CAAC;QAsBjD,CAAK;QArBL,IAAA,CAAW,CAAX;YAsBM,IAAI,CArBC,MAAC,GAAQ,GAAA,CAAI;QAsBxB,CAAK;IACL,CAAG;;;;;IAKH,yBAxBG,GAwBH,UAxBG,SAAA;QAAA,0BAAA,EAAA,gBAAA;QAyBC,MAAJ,CAxBW,QAAA,CAAS,IAAC,CAAI,IAAC,CAAI,IAAI,QAAA,CAAS,IAAC,CAAI,MAAC,CAAM,IAwBvD,CAxB2D,SAAE,GAAW,QAAA,CAAS,IAAC,CAAI,MAAC,CAAM,GAAG,IAAA,CAAK,CAAC;IAyBtG,CAAG;;;;IAIH,0BA1BG,GA0BH,cA1Be,MA0Bf,CA1BsB,CAAA,IAAI,CAAI,IAAC,IAAO,CAAA,WAAE,IAAI,CAAI,MAAC,IAAS,CAAA,WAAE,IAAI,CAAI,MAAC,IAAS,CAAA,CAAE,CAAE,CA0BlF,CA1BmF;IA2BnF,cAAC;AAAD,CAAC,AA3ED,IA2EC;AD3ED;;;;;AAKA;IAAA;QACE,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QADjB,IAAF,CAAA,QAAU,GAEG,IAAA,CAAK;QADhB,IAAF,CAAA,OAAS,GAEG,KAAA,CAAM;QADhB,IAAF,CAAA,QAAU,GAEG,CAAA,CAAE;QADb,IAAF,CAAA,UAAY,GAEG,CAAA,CAAE;QADf,IAAF,CAAA,UAAY,GAEG,CAAA,CAAE;QADf,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;QADjB,IAAF,CAAA,cAAgB,GAEG,KAAA,CAAM;QADvB,IAAF,CAAA,IAAM,GAEiC,QAAA,CAAS;IAOhD,CAAC;;CAlBD;AAYO,mBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADhBF,IAAM,6BAAA,GAAgC;IACpC,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,aAAA,EAAA,CAAA,CAAc;IAC5C,KAAK,EAAE,IAAA;CACR,CAAC;;;;AAIF;;;;IA+CA,uBAAG,MAAmB;QAYpB,IAAF,CAAA,QAAU,GAAG,UAAA,CAAI,IAAjB,CAAyB,CAAG;QAC1B,IAAF,CAAA,SAAW,GAAG,cAAd,CAAoB,CAAG;QAZnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAG;;;;;IAQH,kCAHG,GAGH,UAHG,KAAA;QAIC,IAAI,CAHC,KAAC,GAAO,KAAA,GAAQ,IAAI,OAAA,CAAQ,KAAC,CAAK,IAAC,EAAK,KAAA,CAAM,MAAC,EAAO,KAAA,CAAM,MAAC,CAAM,GAAG,IAAI,OAAA,EAAQ,CAAE;QAIzF,EAAJ,CAAA,CAAQ,CAHC,IAAC,CAAI,OAAC,IAGf,CAHyB,CAAE,KAAC,IAAQ,CAAA,QAAE,CAAQ,KAAC,CAAK,MAAC,CAAM,CAAC,CAG5D,CAH8D,CAG9D;YACM,IAAI,CAHC,KAAC,CAAK,MAAC,GAAQ,CAAA,CAAE;QAI5B,CAAK;IACL,CAAG;;;;;IAKH,wCANG,GAMH,UANG,EAAA,IAAiD,IAAA,CAAK,QAAC,GAAU,EAAA,CAAG,CAMvE,CANwE;;;;;IAWxE,yCATG,GASH,UATG,EAAA,IAAwC,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAS/D,CATgE;;;;;IAchE,wCAZG,GAYH,UAZG,UAAA,IAAuC,IAAA,CAAK,QAAC,GAAU,UAAA,CAAW,CAYrE,CAZsE;;;;;IAiBtE,kCAfG,GAeH,UAfG,IAAA;QAgBC,IAAI,CAfC,KAAC,CAAK,UAAC,CAAU,IAAC,CAAI,CAAC;QAgB5B,IAAI,CAfC,oBAAC,EAAoB,CAAE;IAgBhC,CAAG;;;;;IAKH,oCAlBG,GAkBH,UAlBG,IAAA;QAmBC,IAAI,CAlBC,KAAC,CAAK,YAAC,CAAY,IAAC,CAAI,CAAC;QAmB9B,IAAI,CAlBC,oBAAC,EAAoB,CAAE;IAmBhC,CAAG;;;;;IAKH,oCArBG,GAqBH,UArBG,IAAA;QAsBC,IAAI,CArBC,KAAC,CAAK,YAAC,CAAY,IAAC,CAAI,CAAC;QAsB9B,IAAI,CArBC,oBAAC,EAAoB,CAAE;IAsBhC,CAAG;;;;;IAKH,kCAxBG,GAwBH,UAxBG,MAAA;QAyBC,IAAI,CAxBC,KAAC,CAAK,UAAC,CAAU,SAAC,CAAS,MAAC,CAAM,CAAC,CAAC;QAyBzC,IAAI,CAxBC,oBAAC,EAAoB,CAAE;IAyBhC,CAAG;;;;;IAKH,oCA3BG,GA2BH,UA3BG,MAAA;QA4BC,IAAI,CA3BC,KAAC,CAAK,YAAC,CAAY,SAAC,CAAS,MAAC,CAAM,CAAC,CAAC;QA4B3C,IAAI,CA3BC,oBAAC,EAAoB,CAAE;IA4BhC,CAAG;;;;;IAKH,oCA9BG,GA8BH,UA9BG,MAAA;QA+BC,IAAI,CA9BC,KAAC,CAAK,YAAC,CAAY,SAAC,CAAS,MAAC,CAAM,CAAC,CAAC;QA+B3C,IAAI,CA9BC,oBAAC,EAAoB,CAAE;IA+BhC,CAAG;;;;IAIH,sCAhCG,GAgCH;QACI,EAAJ,CAAA,CAAQ,IAhCC,CAAI,QAAC,CAgCd,CAhCuB,CAgCvB;YACM,IAAI,CAhCC,UAAC,CAAU,EAAC,CAAE,CAAC;QAiC1B,CAAK;IACL,CAAG;;;;;IAKH,kCAnCG,GAmCH,UAnCG,KAAA;QAoCC,EAAJ,CAAA,CAAQ,QAnCC,CAAQ,KAAC,CAAK,CAmCvB,CAnCyB,CAmCzB;YACM,EAAN,CAAA,CAAU,IAnCC,CAAI,QAAC,CAmChB,CAnCyB,CAmCzB;gBACQ,MAAR,CAnCe,SAAA,CAAU,KAAC,GAAO,EAAA,KAAO,CAAA,GAAI,EAAA,GAAK,KAAA,GAAQ,EAAA,CAAG,CAAC;YAoC7D,CAAO;YAnCP,IAAA,CAAa,CAAb;gBAoCQ,MAAR,CAnCe,SAAA,CAAU,KAAC,GAAO,EAAA,CAAG,CAAC;YAoCrC,CAAO;QACP,CAAK;QAnCL,IAAA,CAAW,CAAX;YAoCM,MAAN,CAnCa,SAAA,CAAU,GAAC,CAAG,CAAC;QAoC5B,CAAK;IACL,CAAG;;;;;IAKH,oCAtCG,GAsCH,UAtCG,KAAA,IAA6B,MAsChC,CAtCuC,SAAA,CAAU,KAAC,CAAK,CAAC,CAsCxD,CAtCyD;;;;IA0CzD,0CAxCG,GAwCH,cAxCyB,MAwCzB,CAxCgC,EAAA,iBAAE,EAAkB,IAAA,CAAK,IAAC,KAAQ,OAAA,EAAS,iBAAA,EAAmB,IAAA,CAAK,IAAC,KAAQ,OAAA,EAAQ,CAAC,CAwCrH,CAxCsH;;;;IA4CtH,qCA1CG,GA0CH,cA1CoB,MA0CpB,CA1C2B,EAAA,QAAE,EAAS,IAAA,CAAK,IAAC,KAAQ,OAAA,EAAS,QAAA,EAAU,IAAA,CAAK,IAAC,KAAQ,OAAA,EAAQ,CAAC,CA0C9F,CA1C+F;;;;;IA+C/F,mCA5CG,GA4CH,UA5CG,OAAA;QA6CC,EAAJ,CAAA,CAAQ,OA5CC,CAAO,SAAC,CAAS,IAAI,CAAA,IAAE,CAAI,OAAC,IAAU,IAAA,CAAK,KAAC,IAAQ,CAAA,QAAE,CAAQ,IAAC,CAAI,KAAC,CAAK,MAAC,CAAM,CA4CzF,CA5C2F,CA4C3F;YACM,IAAI,CA5CC,KAAC,CAAK,MAAC,GAAQ,CAAA,CAAE;YA6CtB,IAAI,CA5CC,oBAAC,CAAoB,KAAC,CAAK,CAAC;QA6CvC,CAAK;IACL,CAAG;;;;;IA1CA,4CAAA,GAAA,UAAA,OAAA;QAAA,wBAAA,EAAA,cAAA;QAgDC,EAAJ,CAAA,CAAQ,OA/CC,CA+CT,CA/CiB,CA+CjB;YACM,IAAI,CA/CC,SAAC,EAAS,CAAE;QAgDvB,CAAK;QACD,EAAJ,CAAA,CAAQ,IA/CC,CAAI,KAAC,CAAK,OAAC,CAAO,IAAC,CAAI,OAAC,CAAO,CA+CxC,CA/C0C,CA+C1C;YACM,IAAI,CA/CC,QAAC,CAAQ,EAAC,IAAC,EAAK,IAAA,CAAK,KAAC,CAAK,IAAC,EAAK,MAAA,EAAQ,IAAA,CAAK,KAAC,CAAK,MAAC,EAAO,MAAA,EAAQ,IAAA,CAAK,KAAC,CAAK,MAAC,EAAM,CAAC,CAAC;QAgDnG,CAAK;QA/CL,IAAA,CAAW,CAAX;YAgDM,IAAI,CA/CC,QAAC,CAAQ,IAAC,CAAI,CAAC;QAgD1B,CAAK;IACL,CAAG;;CAjMH;AAmJO,aAAP,CAAA,UAAO,GAAoC;IAgD3C,EA/CE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAgDvB,QAAQ,EA/CE,gBAAA;gBAgDV,MAAM,EA/CE,CAAA,0oCAsGP,CA/CC;gBAgDF,QAAQ,EA/CE,6uHAyGT;gBACD,SAAS,EA/CE,CAAA,6BAAE,CAA6B;aAgD3C,EA/CC,EAAG;CAgDJ,CA/CC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAkDD,EAAC,IAAI,EAAE,mBAAmB,GAAG;CAC5B,EAnDA,CAmDA,CAAC;AAhDK,aAAP,CAAA,cAAO,GAAyD;IAkDhE,UAAU,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD7B,UAAU,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD7B,SAAS,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD5B,UAAU,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD7B,YAAY,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD/B,YAAY,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkD/B,gBAAgB,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAkDnC,MAAM,EAjDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAkDxB,CAjDC;AD/RF;IAAA;;;;;IAGG,2BAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,mBAAA,EAAqB,SAAA,EAAW,CAAA,mBAAE,CAAmB,EAAC,CAAC,CACnH,CADoH;;CAHpH;AAIO,mBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,aAAE,CAAa,EAAE,OAAA,EAAS,CAAA,aAAE,CAAa,EAAE,OAAA,EAAS,CAAA,YAAE,CAAY,EAAC,EAAC,EAAG;CAE9G,CADC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADpBF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,SAAW,GAEwC,KAAA,CAAM;QADvD,IAAF,CAAA,QAAU,GAEG,OAAA,CAAQ;IAQrB,CAAC;;CAZD;AAMO,gBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADMF,IAAIA,QAAA,GAAS,CAAA,CAAE;AACf;IAAA;QACG,IAAH,CAAA,SAAY,GAEwC,KAAA,CAAM;IAmB1D,CAAC;;CAtBD;AAKO,gBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBADvB,QAAQ,EAEE,oBAAA;gBADV,eAAe,EAEE,uBAAA,CAAwB,MAAC;gBAD1C,IAAI,EAEE,EAAA,SAAE,EAAU,qCAAA,EAAuC,MAAA,EAAQ,SAAA,EAAW,MAAA,EAAQ,IAAA,EAAK;gBADzF,QAAQ,EAEE,0EAAP;aACJ,EAEC,EAAG;CADJ,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;AACK,gBAAP,CAAA,cAAO,GAAyD;IAChE,WAAW,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAC9B,IAAI,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CACtB,CAAC;AAGF;;;AAmBA;;;;;;;;;;IAqCA,oBArBc,WAAa,EAAoB,SAAW,EAAW,QAAU,EAwBzE,wBAvB0B,EAA0B,gBAAkB,EAAkB,MAAQ,EAwBhG,MAvBQ;QAmBd,iBAkBG;QAvCW,IAAd,CAAA,WAAc,GAAA,WAAA,CAAa;QAAoB,IAA/C,CAAA,SAA+C,GAAA,SAAA,CAAW;;;;QACvD,IAAH,CAAA,KAAQ,GAfG,IAAI,YAAA,EAAa,CAAE;;;;QAmB3B,IAAH,CAAA,MAAS,GAfG,IAAI,YAAA,EAAa,CAAE;QAGrB,IAAV,CAAA,mBAAU,GAAsB,iBAAAA,QAAgB,EAAQ,CAAE;QAiCtD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CACjC,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAEvF,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjD,EAAN,CAAA,CAAU,KAAI,CAAC,UAAU,CAAzB,CAA2B,CAA3B;gBACQ,gBAAgB,CACZ,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAI,CAAC,SAAS,EACtF,KAAI,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC;YACvC,CAAO;QACP,CAAK,CAAC,CAAC;IACP,CAAG;IAMH,sBAvBG,kCAAA;;;;aAgCH,cAzBqB,MAyBrB,CAzB4B,IAAA,CAAK,WAAC,CAAW,CAyB7C,CAzB8C;;;;;;aAgB9C,UAvBG,KAAA;YAwBC,IAAI,CAvBC,WAAC,GAAa,KAAA,CAAM;YAwBzB,EAAJ,CAAA,CAAQ,CAvBC,KAAC,IAAQ,IAAA,CAAK,UAAC,CAuBxB,CAvBmC,CAuBnC;gBACM,IAAI,CAvBC,KAAC,EAAK,CAAE;YAwBnB,CAAK;QACL,CAAG;;;OAAA;;;;;;;IAWH,yBA1BG,GA0BH,UA1BG,OAAA;QA2BC,EAAJ,CAAA,CAAQ,CA1BC,IAAC,CAAI,UAAC,IAAa,IAAA,CAAK,WAAC,CA0BlC,CA1B8C,CA0B9C;YACM,IAAI,CA1BC,UAAC,GAAY,IAAA,CAAK,aAAC,CAAa,IAAC,CAAI,IAAC,CAAI,WAAC,EAAY,OAAA,CAAQ,CAAC;YA2BrE,IAAI,CA1BC,UAAC,CAAU,QAAC,CAAQ,SAAC,GAAW,IAAA,CAAK,SAAC,CAAS;YA2BpD,IAAI,CA1BC,UAAC,CAAU,QAAC,CAAQ,EAAC,GAAI,IAAA,CAAK,mBAAC,CAAmB;YA4BvD,IAAI,CA1BC,SAAC,CAAS,YAAC,CAAY,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,kBAAA,EAAoB,IAAA,CAAK,mBAAC,CAAmB,CAAC;YA4B1G,EAAN,CAAA,CAAU,IA1BC,CAAI,SAAC,KAAa,MAAA,CA0B7B,CA1BqC,CA0BrC;gBACQ,MAAM,CA1BC,QAAC,CAAQ,aAAC,CAAa,IAAC,CAAI,SAAC,CAAS,CAAC,WAAC,CAAW,IAAC,CAAI,UAAC,CAAU,QAAC,CAAQ,aAAC,CAAa,CAAC;YA2B1G,CAAO;;YAGD,gBAAgB,CACZ,IAAI,CA1BC,WAAC,CAAW,aAAC,EAAc,IAAA,CAAK,UAAC,CAAU,QAAC,CAAQ,aAAC,EAAc,IAAA,CAAK,SAAC,EA2B9E,IAAI,CA1BC,SAAC,KAAa,MAAA,CAAO,CAAC;;;YA8B/B,IAAI,CA1BC,UAAC,CAAU,iBAAC,CAAiB,YAAC,EAAY,CAAE;YA2BjD,IAAI,CA1BC,KAAC,CAAK,IAAC,EAAI,CAAE;QA2BxB,CAAK;IACL,CAAG;;;;;IAKH,0BA1BG,GA0BH;QACI,EAAJ,CAAA,CAAQ,IA1BC,CAAI,UAAC,IAAa,IAAA,CA0B3B,CA1BiC,CA0BjC;YACM,IAAI,CA1BC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,kBAAA,CAAmB,CAAC;YA2BnF,IAAI,CA1BC,aAAC,CAAa,KAAC,EAAK,CAAE;YA2B3B,IAAI,CA1BC,UAAC,GAAY,IAAA,CAAK;YA2BvB,IAAI,CA1BC,MAAC,CAAM,IAAC,EAAI,CAAE;QA2BzB,CAAK;IACL,CAAG;;;;;IAKH,2BA1BG,GA0BH;QACI,EAAJ,CAAA,CAAQ,IA1BC,CAAI,UAAC,CA0Bd,CA1ByB,CA0BzB;YACM,IAAI,CA1BC,KAAC,EAAK,CAAE;QA2BnB,CAAK;QA1BL,IAAA,CAAW,CAAX;YA2BM,IAAI,CA1BC,IAAC,EAAI,CAAE;QA2BlB,CAAK;IACL,CAAG;;;;;IAKH,2BA1BG,GA0BH,cA1BsB,MA0BtB,CA1B6B,IAAA,CAAK,UAAC,IAAa,IAAA,CAAK,CA0BrD,CA1BsD;;;;IA8BtD,6BA5BG,GA4BH;QACI,IAAI,CA5BC,sBAAC,GAAwB,gBAAA,CA6B1B,IAAI,CA5BC,SAAC,EAAU,IAAA,CAAK,WAAC,CAAW,aAAC,EAAc,IAAA,CAAK,QAAC,EAAS,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI,IAAC,CAAI,EAAE,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,IAAC,CAAI,EA6B1G,IAAI,CA5BC,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,CAAC,CAAC;IAFhC,CAAE;;;;IAmCF,gCA9BG,GA8BH;QACI,IAAI,CA9BC,KAAC,EAAK,CAAE;QA+Bb,IAAI,CA9BC,sBAAC,EAAsB,CAAE;QA+B9B,IAAI,CA9BC,iBAAC,CAAiB,WAAC,EAAW,CAAE;IA+BzC,CAAG;;CA/IH;AAkHO,UAAP,CAAA,UAAO,GAAoC;IA+B3C,EA9BE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,cAAA,EAAgB,QAAA,EAAU,YAAA,EAAa,EAAC,EAAG;CA+B/E,CA9BC;;;;AAED,UAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAiCD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAxCA,CAwCA,CAAC;AA/BK,UAAP,CAAA,cAAO,GAAyD;IAiChE,WAAW,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC9B,UAAU,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC7B,WAAW,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAiC9B,OAAO,EAhCE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAiC3B,QAAQ,EAhCE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAiC5B,YAAY,EAhCE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAiC9B,CAhCC;ADlMF;IAAA;;;;;IAGG,wBAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,gBAAA,EAAkB,SAAA,EAAW,CAAA,gBAAE,CAAgB,EAAC,CAAC,CAC7G,CAD8G;;CAH9G;AAIO,gBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,YAAC,EAAa,CAAA,UAAE,EAAW,gBAAA,CAAiB,EAAE,OAAA,EAAS,CAAA,UAAE,CAAU,EAAE,eAAA,EAAiB,CAAA,gBAAE,CAAgB,EAAC,EAAC,EAAG;CAEtI,CADC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADjBF;IAAA;QAGG,IAAH,CAAA,cAAiB,GAEG,eAAA,CAAgB;IA6CpC,CAAC;;;;;IAxCD,kCADG,GACH,UADG,OAAA;QAEC,IAAJ,gBAAA,CADU,SAAA,GAAY,QAAA,CAAS,IAAC,CAAI,MAAC,CAAM,CAAC;QAExC,IAAJ,gBAAA,CADU,QAAA,GAAW,SAAA,CAAU,WAAC,EAAW,CAAE;QAEzC,IAAJ,gBAAA,CADU,MAAA,GAAS,QAAA,CAAS,IAAC,CAAI,IAAC,CAAI,CAAC,WAAC,EAAW,CAAE;QAEjD,IAAJ,gBAAA,CADQ,UAAA,GAAa,CAAA,CAAE;QAGnB,EAAJ,CAAA,CAAQ,MADC,CAAM,MAAC,GAAQ,CAAA,CACxB,CAD2B,CAC3B;YACM,IAAI,CADC,KAAC,GAAO,QAAA,CAAS,KAAC,CAAK,IAAI,MAAA,CAAO,MAAC,YAAI,CAAY,MAAC,CAAM,MAAC,CAAG,CAAC,CAAC,GAAC,CAAG,UAAC,IAAC;gBAEzE,IAAR,gBAAA,CADc,YAAA,GAAe,SAAA,CAAU,MAAC,CAAM,UAAC,EAAW,IAAA,CAAK,MAAC,CAAM,CAAC;gBAE/D,UAAU,IADI,IAAA,CAAK,MAAC,CAAM;gBAE1B,MAAR,CADe,YAAA,CAAa;YAE5B,CAAO,CADC,CAAC;QAET,CAAK;QADL,IAAA,CAAW,CAAX;YAEM,IAAI,CADC,KAAC,GAAO,CAAA,SAAE,CAAS,CAAC;QAE/B,CAAK;IACL,CAAG;;CAzBH;AAyBO,YAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAEvB,QAAQ,EADE,eAAA;gBAEV,eAAe,EADE,uBAAA,CAAwB,MAAC;gBAE1C,QAAQ,EADE,oEAAA;oBAEN,yHAAmH;oBACnH,gBAAgB;gBACpB,MAAM,EADE,CAAA,6DAKP,CADC;aAEH,EADC,EAAG;CAEJ,CADC;;;;AAED,YAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;AAFK,YAAP,CAAA,cAAO,GAAyD;IAIhE,gBAAgB,EAHE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAInC,QAXE,EAQQ,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAI3B,MAAM,EAHE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAIxB,CAHC;AD9BF;IAAA;QACE,IAAF,CAAA,SAAW,GAEG,CAAA,CAAE;;;;QASb,IAAH,CAAA,UAAa,GAEG,IAAA,CAAK;;;;;QAclB,IAAH,CAAA,SAAY,GAEG,QAAA,CAAS;;;;QAQrB,IAAH,CAAA,WAAc,GAEG,IAAI,YAAA,EAAa,CAAE;QAAjC,IAAH,CAAA,iBAAoB,GAEG,IAAI,YAAA,EAAa,CAAE;IA+F1C,CAAC;;;;;IA5FD,8CADG,GACH,UADG,MAAA,IAAgC,MACnC,CAD0C,EAAA,MAAE,EAAO,MAAA,EAAQ,IAAA,EAAM,IAAA,CAAK,IAAC,EAAK,SAAA,EAAW,IAAA,CAAK,SAAC,EAAS,CAAC,CACvG,CADwG;;;;IAKxG,sCAHG,GAGH,cAHgB,MAGhB,CAHuB,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,SAAC,CAAS,CAAC,CAGpD,CAHqD;;;;;IAQrD,uCANG,GAMH,UANG,SAAA;QAOC,IAAI,CANC,SAAC,GAAW,SAAA,CAAU;QAO3B,IAAI,CANC,cAAC,EAAc,CAAE;IAO1B,CAAG;;;;IAIH,iCARG,GAQH;QACI,EAAJ,CAAA,CAAQ,IARC,CAAI,SAAC,KAAa,IAAA,CAAK,OAAC,CAAO,MAAC,GAAQ,CAAA,CAQjD,CARoD,CAQpD;YACM,IAAI,CARC,SAAC,GAAW,IAAA,CAAK,UAAC,GAAY,CAAA,IAAE,CAAI,SAAC,GAAW,CAAA,CAQ3D,GARgE,IAAA,CAAK,OAAC,CAAO,MAAC,GAAQ,CAAA,CAAE,CAAC;QASzF,CAAK;QARL,IAAA,CAAW,CAAX;YASM,IAAI,CARC,SAAC,EAAS,CAAE;QASvB,CAAK;QACD,IAAI,CARC,cAAC,EAAc,CAAE;IAS1B,CAAG;;;;IAIH,iCAVG,GAUH;QACI,EAAJ,CAAA,CAAQ,IAVC,CAAI,SAAC,GAAW,CAAA,CAUzB,CAV4B,CAU5B;YACM,IAAI,CAVC,SAAC,GAAW,IAAA,CAAK,OAAC,CAAO,MAAC,GAAQ,CAAA,CAAE;QAW/C,CAAK;QAVL,IAAA,CAAW,EAAX,CAAA,CAAW,IAAK,CAAI,SAAC,KAAa,CAAA,CAAlC,CAAqC,CAArC;YAWM,IAAI,CAVC,SAAC,GAAW,IAAA,CAAK,UAAC,GAAY,IAAA,CAAK,OAAC,CAAO,MAAC,GAAQ,CAAA,GAAI,CAAA,CAAE,CAAC;QAWtE,CAAK;QAVL,IAAA,CAAW,CAAX;YAWM,IAAI,CAVC,SAAC,EAAS,CAAE;QAWvB,CAAK;QACD,IAAI,CAVC,cAAC,EAAc,CAAE;IAW1B,CAAG;;;;;IAKH,mCAbG,GAaH,UAbG,IAAA,IAAc,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,IAAC,CAAI,CAAC,CAa7C,CAb8C;;;;IAiB9C,qCAfG,GAeH;QACI,IAAI,CAfC,SAAC,GAAW,IAAA,CAAK,UAAC,GAAY,CAAA,GAAI,CAAA,CAAE,CAAC;QAgB1C,IAAI,CAfC,cAAC,EAAc,CAAE;IAgB1B,CAAG;;;;IAbA,2CAAA,GAAA;QAkBC,IAAI,CAjBC,iBAAC,CAAiB,IAAC,CAAI,IAAC,CAAI,SAAC,IAAY,CAAA,GAAI,IAAA,CAAK,EAAC,GAAI,GAAA,GAAM,IAAA,CAAK,SAAC,GAAW,SAAA,CAAU,CAAC;IAkBlG,CAAG;;CAnGH;AAmFO,kBAAP,CAAA,UAAO,GAAoC;IAkB3C,EAjBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAkBvB,QAAQ,EAjBE,sBAAA;gBAkBV,QAAQ,EAjBE,oBAAA;gBAkBV,IAAI,EAjBE,EAAA,OAAE,EAAQ,eAAA,EAAiB,OAAA,EAAS,gBAAA,EAAkB,MAAA,EAAQ,SAAA,EAAW,MAAA,EAAQ,IAAA,EAAK;gBAkB5F,QAAQ,EAjBE,+qBA+BT;aACF,EAjBC,EAAG;CAkBJ,CAjBC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAoBA,EApBA,CAoBA,CAAC;AAlBK,kBAAP,CAAA,cAAO,GAAyD;IAoBhE,IAAI,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoBvB,YAAY,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoB/B,SAAS,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoB5B,MAAM,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoBzB,WAAW,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoB9B,gBAAgB,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAoBnC,aAAa,EAnBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;IAoBrD,mBAAmB,EAnBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,cAAE,EAAc,EAAG,EAAE;CAoBhE,CAnBC;ADtIF;;;;;AAKA;IAAA;QACE,IAAF,CAAA,QAAU,GAEG,IAAA,CAAK;QADhB,IAAF,CAAA,UAAY,GAEG,IAAA,CAAK;QADlB,IAAF,CAAA,QAAU,GAEG,KAAA,CAAM;IAOnB,CAAC;;CAZD;AAMO,kBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADYF,IAAID,KAAC,GAAM,EAAA,CAAA;AACXA,KAAG,CAAC,GAAE,GAAI,CAAC,CAAA;AACXA,KAAG,CAAC,KAAI,GAAE,EAAI,CAAA;AACdA,KAAG,CAAC,MAAK,GAAE,EAAI,CAAA;AACfA,KAAG,CAAC,OAAM,GAAE,EAAI,CAAA;AAChBA,KAAG,CAAC,SAAQ,GAAE,EAAG,CAAA;AACjBA,KAAE,CAAAA,KAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA;AACFA,KAAG,CAACA,KAAG,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACzBA,KAAG,CAACA,KAAE,CAAA,MAAA,CAAA,GAAA,QAAA,CAAA;AACNA,KAAG,CAACA,KAAG,CAAC,OAAG,CAAA,GAAA,SAAA,CAAkB;AAC7BA,KAAG,CAACA,KAAG,CAAC,SAAO,CAAA,GAAA,WAAiB,CAAA;AAGhC,IALM,4BAAA,GAA+B;IAMnC,OAAO,EALE,iBAAA;IAMT,WAAW,EALE,UAAA,CAAW,cAAM,OAAA,YAAA,EAAA,CAAA,CAAa;IAM3C,KAAK,EALE,IAAA;CAMR,CALC;AAsBF,IALI,YAAA,GAAe,CAAA,CAAE;;;;AASrB;;;;;;;;;;IAiEA,sBATc,WAAa,EAAoB,iBAAmB,EAA0B,SAAW,EACzF,SAAW,EAAU,wBAA0B,EAA0B,MAAQ,EAazF,MAZQ;QAOd,iBAoBG;QA7BW,IAAd,CAAA,WAAc,GAAA,WAAA,CAAa;QAAoB,IAA/C,CAAA,iBAA+C,GAAA,iBAAA,CAAmB;QAA0B,IAA5F,CAAA,SAA4F,GAAA,SAAA,CAAW;QACzF,IAAd,CAAA,SAAc,GAAA,SAAA,CAAW;;;;QAPtB,IAAH,CAAA,UAAa,GAHG,IAAI,YAAA,EAAyC,CAAG;QAM9D,IAAF,CAAA,OAAS,GAHG,mBAAA,YAAkB,EAAc,CAAE;QAEpC,IAAV,CAAA,UAAU,GAAa,cAAvB,CAA6B,CAAG;QACtB,IAAV,CAAA,SAAU,GAAY,UAAA,CAAI,IAA1B,CAAkC,CAAG;QAkBjC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,EAAE,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAnB,CAAmB,CAAC,CAAC;QAEpG,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CACjC,kBAAkB,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAE3F,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjD,EAAN,CAAA,CAAU,KAAI,CAAC,WAAW,EAAE,CAA5B,CAA8B,CAA9B;gBACQ,gBAAgB,CAAC,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAChH,CAAO;QACP,CAAK,CAAC,CAAC;IACP,CAAG;;;;IAIH,+BAdG,GAcH;QAAA,iBAcG;QAbC,IAAJ,gBAAA,CAdU,YAAA,GAAe,GAAA,CAAI,IAAC,CAAI,IAAC,CAAI,aAAC,EAAc,UAAA,KAAA;YAehD,KAAI,CAdC,UAAC,GAAY,KAAA,CAAM;YAexB,EAAN,CAAA,CAAU,KAdC,CAAI,QAAC,CAchB,CAdyB,CAczB;gBACQ,KAAI,CAdC,SAAC,CAAS,KAAC,CAAK,CAAC;YAe9B,CAAO;QACP,CAAK,CAdC,CAAC;QAeH,IAAJ,gBAAA,CAdU,QAAA,GAAW,QAAA,CAAS,IAAC,CAAI,YAAC,EAAa,IAAA,CAAK,YAAC,CAAY,CAAC;QAehE,IAAJ,gBAAA,CAdU,UAAA,GAAa,GAAA,CAAI,IAAC,CAAI,QAAC,EAAS;YAepC,EAAN,CAAA,CAAU,CAdC,KAAC,CAAI,QAAC,CAcjB,CAd0B,CAc1B;gBACQ,KAAI,CAdC,SAAC,CAAS,SAAC,CAAS,CAAC;YAelC,CAAO;QACP,CAAK,CAdC,CAAC;QAeH,IAAI,CAdC,aAAC,GAAe,IAAA,CAAK,qBAAC,CAAqB,UAAC,CAAU,CAAC;IAehE,CAAG;;;;IAIH,kCAhBG,GAgBH;QACI,IAAI,CAhBC,yBAAC,EAAyB,CAAE;QAiBjC,IAAI,CAhBC,iBAAC,CAAiB,WAAC,EAAW,CAAE;IAiBzC,CAAG;;;;;IAKH,uCAnBG,GAmBH,UAnBG,EAAA,IAAiD,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAmBxE,CAnByE;;;;;IAwBzE,wCAtBG,GAsBH,UAtBG,EAAA,IAAwC,IAAA,CAAK,UAAC,GAAY,EAAA,CAAG,CAsBhE,CAtBiE;;;;;IA2BjE,iCAzBG,GAyBH,UAzBG,KAAA,IAAmB,IAAA,CAAK,gBAAC,CAAgB,IAAC,CAAI,mBAAC,CAAmB,KAAC,CAAK,CAAC,CAAC,CAyB7E,CAzB8E;;;;;IA8B9E,uCA5BG,GA4BH,UA5BG,UAAA;QA6BC,IAAI,CA5BC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,UAAA,EAAY,UAAA,CAAW,CAAC;IA6BvF,CAAG;;;;IAIH,mCA9BG,GA8BH;QACI,EAAJ,CAAA,CAAQ,IA9BC,CAAI,WAAC,EAAW,CA8BzB,CA9B4B,CA8B5B;YACM,IAAI,CA9BC,WAAC,EAAW,CAAE;YA+BnB,IAAI,CA9BC,gBAAC,CAAgB,IAAC,CAAI,UAAC,CAAU,CAAC;QA+B7C,CAAK;IACL,CAAG;;;;IAIH,kCAhCG,GAgCH,cAhCkB,MAgClB,CAhCyB,IAAA,CAAK,UAAC,IAAa,IAAA,CAAK,CAgCjD,CAhCkD;;;;IAoClD,iCAlCG,GAkCH,cAlCiB,IAAA,CAAK,UAAC,EAAU,CAAE,CAkCnC,CAlCoC;;;;;IAuCpC,oCArCG,GAqCH,UArCG,KAAA;QAsCC,EAAJ,CAAA,CAAQ,CArCC,IAAC,CAAI,WAAC,EAAW,CAqC1B,CArC6B,CAqC7B;YACM,MAAN,CAAa;QACb,CAAK;QAED,EAAJ,CAAA,CAAQA,KArCC,CAAG,QAAC,CAAQ,KAAC,CAAK,KAAC,CAAK,CAAC,CAqClC,CArCoC,CAqCpC;YACM,MAAN,CAAA,CAAc,KArCC,CAAK,KAAC,CAqCrB,CAAA,CAAA;gBACQ,KArCKA,KAAA,CAAI,SAAC;oBAsCR,KAAK,CArCC,cAAC,EAAc,CAAE;oBAsCvB,IAAI,CArCC,UAAC,CAAU,QAAC,CAAQ,IAAC,EAAI,CAAE;oBAsChC,IAAI,CArCC,SAAC,EAAS,CAAE;oBAsCjB,KAAV,CAAgB;gBACR,KArCKA,KAAA,CAAI,OAAC;oBAsCR,KAAK,CArCC,cAAC,EAAc,CAAE;oBAsCvB,IAAI,CArCC,UAAC,CAAU,QAAC,CAAQ,IAAC,EAAI,CAAE;oBAsChC,IAAI,CArCC,SAAC,EAAS,CAAE;oBAsCjB,KAAV,CAAgB;gBACR,KArCKA,KAAA,CAAI,KAAC,CAAK;gBAsCf,KArCKA,KAAA,CAAI,GAAC;oBAsCR,IAAV,gBAAA,CArCgB,MAAA,GAAS,IAAA,CAAK,UAAC,CAAU,QAAC,CAAQ,SAAC,EAAS,CAAE;oBAsCpD,EAAV,CAAA,CAAc,SArCC,CAAS,MAAC,CAAM,CAqC/B,CArCiC,CAqCjC;wBACY,KAAK,CArCC,cAAC,EAAc,CAAE;wBAsCvB,KAAK,CArCC,eAAC,EAAe,CAAE;wBAsCxB,IAAI,CArCC,aAAC,CAAa,MAAC,CAAM,CAAC;oBAsCvC,CAAW;oBACD,IAAI,CArCC,WAAC,EAAW,CAAE;oBAsCnB,KAAV,CAAgB;gBACR,KArCKA,KAAA,CAAI,MAAC;oBAsCR,KAAK,CArCC,cAAC,EAAc,CAAE;oBAsCvB,IAAI,CArCC,YAAC,EAAY,CAAE;oBAsCpB,KAAV,CAAgB;YAChB,CAAO;QACP,CAAK;IACL,CAAG;;;;IAnCA,iCAAA,GAAA;QAAA,iBA8CA;QANC,EAAJ,CAAA,CAAQ,CAvCC,IAAC,CAAI,WAAC,EAAW,CAuC1B,CAvC6B,CAuC7B;YACM,IAAI,CAvCC,UAAC,GAAY,IAAA,CAAK,aAAC,CAAa,IAAC,EAAI,CAAE;YAwC5C,IAAI,CAvCC,UAAC,CAAU,QAAC,CAAQ,EAAC,GAAI,IAAA,CAAK,OAAC,CAAO;YAwC3C,IAAI,CAvCC,UAAC,CAAU,QAAC,CAAQ,WAAC,CAAW,SAAC,CAAS,UAAC,MAAQ,IAAQ,OAAA,KAAA,CAAK,uBAAC,CAAuB,MAAC,CAAM,EAApC,CAAoC,CAAC,CAAC;YAwCtG,IAAI,CAvCC,UAAC,CAAU,QAAC,CAAQ,iBAAC,CAAiB,SAAC,CAAS,UAAC,QAAU,IAAW,OAAA,KAAA,CAAK,gBAAC,GAAkB,QAAA,EAAxB,CAAwB,CAAS,CAAC;QAwCnH,CAAK;IACL,CAAG;;;;IArCA,kCAAA,GAAA;QA0CC,IAAI,CAzCC,aAAC,CAAa,KAAC,EAAK,CAAE;QA0C3B,IAAI,CAzCC,UAAC,GAAY,IAAA,CAAK;QA0CvB,IAAI,CAzCC,gBAAC,GAAkB,SAAA,CAAU;IA0CtC,CAAG;;;;;IAvCA,oCAAA,GAAA,UAAA,MAAA;QA6CC,IAAJ,gBAAA,CA5CQ,gBAAA,GAAmB,KAAA,CAAM;QA6C7B,IAAI,CA5CC,UAAC,CAAU,IAAC,CAAI,EAAC,IAAC,EAAK,MAAA,EAAQ,cAAA,EAAgB,cAAQ,gBAAA,GAAmB,IAAA,CAAK,CA4CxF,CA5CyF,EAAE,CAAC,CAAC;QA8CzF,EAAJ,CAAA,CAAQ,CA5CC,gBAAC,CA4CV,CA5C2B,CA4C3B;YACM,IAAI,CA5CC,UAAC,CAAU,MAAC,CAAM,CAAC;YA6CxB,IAAI,CA5CC,SAAC,CAAS,MAAC,CAAM,CAAC;QA6C7B,CAAK;IACL,CAAG;;;;;IA1CA,8CAAA,GAAA,UAAA,MAAA;QAgDC,IAAI,CA/CC,aAAC,CAAa,MAAC,CAAM,CAAC;QAgD3B,IAAI,CA/CC,WAAC,EAAW,CAAE;IAgDvB,CAAG;;;;IA7CA,gCAAA,GAAA;QAkDC,EAAJ,CAAA,CAAQ,IAjDC,CAAI,QAAC,CAiDd,CAjDuB,CAiDvB;YACM,IAAN,gBAAA,CAjDY,kBAAA,GAAqB,IAAA,CAAK,UAAC,CAAU,WAAC,EAAW,CAAE;YAkDzD,IAAN,gBAAA,CAjDY,YAAA,GAAe,IAAA,CAAK,mBAAC,CAAmB,IAAC,CAAI,UAAC,CAAU,QAAC,CAAQ,SAAC,EAAS,CAAE,CAAC;YAmDpF,EAAN,CAAA,CAAU,kBAjDC,KAAsB,YAAA,CAAa,MAAC,CAAM,CAAC,EAAE,IAAA,CAAK,UAAC,CAAU,MAAC,CAAM,CAAC,WAAC,EAAW,CAiD5F,CAjD+F,CAiD/F;gBACQ,IAAI,CAjDC,gBAAC,CAAgB,IAAC,CAAI,UAAC,GAAY,YAAA,CAAa,MAAC,CAAM,IAAC,CAAI,UAAC,CAAU,MAAC,CAAM,CAAC,CAAC;gBAkDrF,IAAI,CAjDC,WAAC,CAAW,aAAC,CAAa,mBAAC,CAAmB,CAAC,KAAC,CAkDjD,IAAI,CAjDC,WAAC,CAAW,aAAC,EAAc,CAAA,IAAE,CAAI,UAAC,CAAU,MAAC,EAAO,YAAA,CAAa,MAAC,CAAM,CAAC,CAAC;YAkD3F,CAAO;YAjDP,IAAA,CAAa,CAAb;gBAkDQ,IAAI,CAjDC,UAAC,CAAU,IAAC,CAAI,UAAC,CAAU,QAAC,CAAQ,SAAC,EAAS,CAAE,CAAC;YAkD9D,CAAO;QACP,CAAK;IACL,CAAG;;;;;IA/CA,0CAAA,GAAA,UAAA,IAAA;QAqDC,MAAJ,CApDW,IAAA,IAAQ,IAAA,CAAK,cAAC,GAAgB,IAAA,CAAK,cAAC,CAAc,IAAC,CAAI,GAAG,QAAA,CAAS,IAAC,CAAI,CAAC;IAqDpF,CAAG;;;;;IAlDA,uCAAA,GAAA,UAAA,KAAA;QAwDC,IAAI,CAvDC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,OAAA,EAAS,KAAA,CAAM,CAAC;IAwD/E,CAAG;;;;;IArDA,4CAAA,GAAA,UAAA,UAAA;QAAA,iBAiFA;QAtBC,MAAJ,CA1DW,UAAA,CAAW,SAAC,CAAS,UAAC,OAAC;YA2D5B,EAAN,CAAA,CAAU,CA1DC,OAAC,IAAU,OAAA,CAAQ,MAAC,KAAU,CAAA,CA0DzC,CA1D4C,CA0D5C;gBACQ,KAAI,CA1DC,WAAC,EAAW,CAAE;YA2D3B,CAAO;YA1DP,IAAA,CAAa,CAAb;gBA2DQ,KAAI,CA1DC,UAAC,EAAU,CAAE;gBA2DlB,KAAI,CA1DC,UAAC,CAAU,QAAC,CAAQ,UAAC,GAAY,KAAA,CAAK,UAAC,CAAU;gBA2DtD,KAAI,CA1DC,UAAC,CAAU,QAAC,CAAQ,OAAC,GAAS,OAAA,CAAQ;gBA2D3C,KAAI,CA1DC,UAAC,CAAU,QAAC,CAAQ,IAAC,GAAM,KAAA,CAAK,WAAC,CAAW,aAAC,CAAa,KAAC,CAAK;gBA2DrE,EAAR,CAAA,CAAY,KA1DC,CAAI,eAAC,CA0DlB,CA1DkC,CA0DlC;oBACU,KAAI,CA1DC,UAAC,CAAU,QAAC,CAAQ,SAAC,GAAW,KAAA,CAAK,eAAC,CAAe;gBA2DpE,CAAS;gBACD,EAAR,CAAA,CAAY,KA1DC,CAAI,cAAC,CA0DlB,CA1DiC,CA0DjC;oBACU,KAAI,CA1DC,UAAC,CAAU,QAAC,CAAQ,cAAC,GAAgB,KAAA,CAAK,cAAC,CAAc;gBAoCxE,CAAE;gBAwBM,KAAI,CA1DC,SAAC,EAAS,CAAE;;;;gBA+DjB,KAAI,CA1DC,UAAC,CAAU,iBAAC,CAAiB,aAAC,EAAa,CAAE;YA2D1D,CAAO;QACP,CAAK,CA1DC,CAAC;IA2DP,CAAG;;;;IAxDA,gDAAA,GAAA;QA6DC,EAAJ,CAAA,CAAQ,IA5DC,CAAI,aAAC,CA4Dd,CA5D4B,CA4D5B;YACM,IAAI,CA5DC,aAAC,CAAa,WAAC,EAAW,CAAE;QA6DvC,CAAK;QACD,IAAI,CA5DC,aAAC,GAAe,IAAA,CAAK;IA6D9B,CAAG;;CAvSH;AA4OO,YAAP,CAAA,UAAO,GAAoC;IA6D3C,EA5DE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA6DvB,QAAQ,EA5DE,qBAAA;gBA6DV,IAAI,EA5DE;oBA6DJ,QAAQ,EA5DE,cAAA;oBA6DV,cAAc,EA5DE,eAAA;oBA6DhB,kBAAkB,EA5DE,gBAAA;oBA6DpB,WAAW,EA5DE,uBAAA;oBA6Db,cAAc,EA5DE,KAAA;oBA6DhB,gBAAgB,EA5DE,KAAA;oBA6DlB,aAAa,EA5DE,KAAA;oBA6Df,MAAM,EA5DE,UAAA;oBA6DR,gBAAgB,EA5DE,OAAA;oBA6DlB,0BAA0B,EA5DE,4BAAA;oBA6D5B,8BAA8B,EA5DE,kBAAA;oBA6DhC,kBAAkB,EA5DE,gCAAA;oBA6DpB,sBAAsB,EA5DE,eAAA;iBA6DzB;gBACD,SAAS,EA5DE,CAAA,4BAAE,CAA4B;aA6D1C,EA5DC,EAAG;CA6DJ,CA5DC;;;;AAED,YAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA+DD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,kBAAkB,GAAG;IAC5B,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAtEA,CAsEA,CAAC;AA7DK,YAAP,CAAA,cAAO,GAAyD;IA+DhE,UAAU,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+D7B,YAAY,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+D/B,gBAAgB,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+DnC,cAAc,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+DjC,iBAAiB,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+DpC,gBAAgB,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+DnC,UAAU,EA9DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA+D7B,YAAY,EA9DE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CA+D/B,CA9DC;AD3UF;IAAA;;;;;IAGG,0BAAA,GACH,cAD0C,MAC1C,CADiD,EAAA,QAAE,EAAS,kBAAA,EAAoB,SAAA,EAAW,CAAA,kBAAE,CAAkB,EAAC,CAAC,CACjH,CADkH;;CAHlH;AAIO,kBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAEtB,YAAY,EADE,CAAA,YAAE,EAAa,YAAA,EAAc,kBAAA,CAAmB;gBAE9D,OAAO,EADE,CAAA,YAAE,EAAa,YAAA,CAAa;gBAErC,OAAO,EADE,CAAA,YAAE,CAAY;gBAEvB,eAAe,EADE,CAAA,kBAAE,CAAkB;aAEtC,EADC,EAAG;CAEJ,CADC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADkDF,IAAM,WAAA,GAAc;IAClB,kBAAkB,EAAE,cAAA,EAAgB,gBAAA,EAAkB,iBAAA,EAAmB,iBAAA,EAAmB,mBAAA;IAC5F,iBAAiB,EAAE,cAAA,EAAgB,mBAAA,EAAqB,gBAAA,EAAkB,oBAAA,EAAsB,eAAA;IAChG,eAAe,EAAE,mBAAA,EAAqB,gBAAA,EAAkB,kBAAA;CACzD,CAAC;AACF;IAAA;;;CAAA;AAGO,aAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,OAAO,EAEE;oBADP,cAAc,CAEC,OAAC,EAAO,EAAG,gBAAA,CAAiB,OAAC,EAAO,EAAG,iBAAA,CAAkB,OAAC,EAAO,EAAG,oBAAA,CAAqB,OAAC,EAAO;oBADhH,gBAAgB,CAEC,OAAC,EAAO,EAAG,kBAAA,CAAmB,OAAC,EAAO,EAAG,kBAAA,CAAmB,OAAC,EAAO,EAAG,iBAAA,CAAkB,OAAC,EAAO;oBADlH,mBAAmB,CAEC,OAAC,EAAO,EAAG,iBAAA,CAAkB,OAAC,EAAO,EAAG,cAAA,CAAe,OAAC,EAAO,EAAG,mBAAA,CAAoB,OAAC,EAAO;oBADlH,gBAAgB,CAEC,OAAC,EAAO,EAAG,oBAAA,CAAqB,OAAC,EAAO,EAAG,eAAA,CAAgB,OAAC,EAAO,EAAG,eAAA,CAAgB,OAAC,EAAO;oBAD/G,mBAAmB,CAEC,OAAC,EAAO,EAAG,gBAAA,CAAiB,OAAC,EAAO;iBADzD;gBACD,OAAO,EAEE,WAAA;aADV,EAEC,EAAG;CADJ,CAEC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;AAGF;IAAA;;;;;IAEG,iBAAA,GAYH,cAZ0C,MAY1C,CAZiD,EAAA,QAAE,EAAS,aAAA,EAAc,CAAC,CAY3E,CAZ4E;;CAF5E;AAGO,SAAP,CAAA,UAAO,GAAoC;IAa3C,EAZE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,OAAC,EAAQ,WAAA,EAAa,OAAA,EAAS,WAAA,EAAY,EAAC,EAAG;CAaxE,CAZC;;;;AAED,SAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAeA,EAfA,CAeA,CAAC;AD9HF;;GAEG;"}