{"version":3,"file":"ngx-cookie.umd.js","sources":["~/ngx-cookie/ngx-cookie/index.ts","~/ngx-cookie/ngx-cookie/src/cookie-backend.service.ts","~/ngx-cookie/ngx-cookie/src/cookie.factory.ts","~/ngx-cookie/ngx-cookie/src/cookie.service.ts","~/ngx-cookie/ngx-cookie/src/cookie-options-provider.ts","~/ngx-cookie/ngx-cookie/src/utils.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { COOKIE_OPTIONS, CookieOptionsProvider } from './src/cookie-options-provider';\nimport { CookieService } from './src/cookie.service';\nimport { CookieOptions } from './src/cookie-options.model';\nimport { cookieServiceFactory } from './src/cookie.factory';\n\nexport {ICookieService,CookieService} from './src/cookie.service';\nexport {CookieBackendService} from './src/cookie-backend.service';\nexport {CookieOptions} from './src/cookie-options.model';\nexport {COOKIE_OPTIONS,CookieOptionsProvider} from './src/cookie-options-provider';\nexport {cookieServiceFactory} from './src/cookie.factory';\nexport {isBlank,isPresent,isString,mergeOptions,safeDecodeURIComponent,safeJsonParse} from './src/utils';\nexport class CookieModule {\n/**\n * Use this method in your root module to provide the CookieService\n * @param {?=} options\n * @return {?}\n */\nstatic forRoot(options: CookieOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: CookieModule,\n      providers: [\n        {provide: COOKIE_OPTIONS, useValue: options},\n        {provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider]}\n      ]\n    };\n  }\n/**\n * Use this method in your other (non root) modules to import the directive/pipe\n * @param {?=} options\n * @return {?}\n */\nstatic forChild(options: CookieOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: CookieModule,\n      providers: [\n        {provide: COOKIE_OPTIONS, useValue: options},\n        {provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider]}\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [CookieOptionsProvider]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CookieModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\nimport { CookieService } from './cookie.service';\n\ndeclare var Zone: any;\nexport class CookieBackendService extends CookieService {\n/**\n * @return {?}\n */\nprotected get cookieString(): string {\n    return Zone.current.get('req').headers.cookie || '';\n  }\n/**\n * @param {?} val\n * @return {?}\n */\nprotected set cookieString(val: string) {\n    Zone.current.get('req').headers.cookie = val;\n    Zone.current.get('res').headers.cookie = val;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CookieBackendService_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieBackendService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieBackendService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CookieService } from './cookie.service';\nimport { CookieOptionsProvider } from './cookie-options-provider';\n/**\n * @param {?} cookieOptionsProvider\n * @return {?}\n */\nexport function cookieServiceFactory(cookieOptionsProvider: CookieOptionsProvider): CookieService {\n  return new CookieService(cookieOptionsProvider);\n}\n","import { Injectable } from '@angular/core';\n\nimport { CookieOptionsProvider } from './cookie-options-provider';\nimport { CookieOptions } from './cookie-options.model';\nimport { isBlank, isString, mergeOptions, safeDecodeURIComponent, safeJsonParse } from './utils';\n\ndeclare interface Document {\n  cookie: string;\n}\ndeclare const document: Document;\n\nexport interface ICookieService {\n  get(key: string): string;\n  getObject(key: string): Object;\n  getAll(): Object;\n  put(key: string, value: string, options?: CookieOptions): void;\n  putObject(key: string, value: Object, options?: CookieOptions): void;\n  remove(key: string, options?: CookieOptions): void;\n  removeAll(): void;\n}\nexport class CookieService implements ICookieService {\n\n  protected options: CookieOptions;\n/**\n * @return {?}\n */\nprotected get cookieString(): string {\n    return document.cookie || '';\n  }\n/**\n * @param {?} val\n * @return {?}\n */\nprotected set cookieString(val: string) {\n    document.cookie = val;\n  }\n/**\n * @param {?} _optionsProvider\n */\nconstructor(private _optionsProvider: CookieOptionsProvider) {\n    this.options = this._optionsProvider.options;\n  }\n/**\n * \\@name CookieService#get\n * \n * \\@description \n * Returns the value of given cookie key.\n * \n * @param {?} key\n * @return {?}\n */\nget(key: string): string {\n    return ( /** @type {?} */((<any>this._cookieReader())))[key];\n  }\n/**\n * \\@name CookieService#getObject\n * \n * \\@description \n * Returns the deserialized value of given cookie key.\n * \n * @param {?} key\n * @return {?}\n */\ngetObject(key: string): Object {\n    let /** @type {?} */ value = this.get(key);\n    return value ? safeJsonParse(value) : value;\n  }\n/**\n * \\@name CookieService#getAll\n * \n * \\@description \n * Returns a key value object with all the cookies.\n * \n * @return {?}\n */\ngetAll(): Object {\n    return /** @type {?} */(( <any>this._cookieReader()));\n  }\n/**\n * \\@name CookieService#put\n * \n * \\@description \n * Sets a value for given cookie key.\n * \n * @param {?} key\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nput(key: string, value: string, options?: CookieOptions) {\n    this._cookieWriter()(key, value, options);\n  }\n/**\n * \\@name CookieService#putObject\n * \n * \\@description \n * Serializes and sets a value for given cookie key.\n * \n * @param {?} key\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nputObject(key: string, value: Object, options?: CookieOptions) {\n    this.put(key, JSON.stringify(value), options);\n  }\n/**\n * \\@name CookieService#remove\n * \n * \\@description \n * Remove given cookie.\n * \n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\nremove(key: string, options?: CookieOptions): void {\n    this._cookieWriter()(key, undefined, options);\n  }\n/**\n * \\@name CookieService#removeAll\n * \n * \\@description \n * Remove all cookies.\n * @return {?}\n */\nremoveAll(): void {\n    let /** @type {?} */ cookies = this.getAll();\n    Object.keys(cookies).forEach(key => {\n      this.remove(key);\n    });\n  }\n/**\n * @return {?}\n */\nprivate _cookieReader(): Object {\n    let /** @type {?} */ lastCookies = {};\n    let /** @type {?} */ lastCookieString = '';\n    let /** @type {?} */ cookieArray: string[], /** @type {?} */ cookie: string, /** @type {?} */ i: number, /** @type {?} */ index: number, /** @type {?} */ name: string;\n    let /** @type {?} */ currentCookieString = this.cookieString;\n    if (currentCookieString !== lastCookieString) {\n      lastCookieString = currentCookieString;\n      cookieArray = lastCookieString.split('; ');\n      lastCookies = {};\n      for (i = 0; i < cookieArray.length; i++) {\n        cookie = cookieArray[i];\n        index = cookie.indexOf('=');\n        if (index > 0) {  // ignore nameless cookies\n          name = safeDecodeURIComponent(cookie.substring(0, index));\n          // the first value that is seen for a cookie is the most\n          // specific one.  values for the same cookie name that\n          // follow are for less specific paths.\n          if (isBlank(( /** @type {?} */((<any>lastCookies)))[name])) {\n            ( /** @type {?} */((<any>lastCookies)))[name] = safeDecodeURIComponent(cookie.substring(index + 1));\n          }\n        }\n      }\n    }\n    return lastCookies;\n  }\n/**\n * @return {?}\n */\nprivate _cookieWriter() {\n    let /** @type {?} */ that = this;\n\n    return function (name: string, value: string, options?: CookieOptions) {\n      that.cookieString = that._buildCookieString(name, value, options);\n    };\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nprivate _buildCookieString(name: string, value: string, options?: CookieOptions): string {\n    let /** @type {?} */ opts: CookieOptions = mergeOptions(this.options, options);\n    let /** @type {?} */ expires: any = opts.expires;\n    if (isBlank(value)) {\n      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';\n      value = '';\n    }\n    if (isString(expires)) {\n      expires = new Date(expires);\n    }\n\n    let /** @type {?} */ str = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    str += opts.path ? ';path=' + opts.path : '';\n    str += opts.domain ? ';domain=' + opts.domain : '';\n    str += expires ? ';expires=' + expires.toUTCString() : '';\n    str += opts.secure ? ';secure' : '';\n\n    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n    // - 300 cookies\n    // - 20 cookies per unique domain\n    // - 4096 bytes per cookie\n    let /** @type {?} */ cookieLength = str.length + 1;\n    if (cookieLength > 4096) {\n      console.log(`Cookie \\'${name}\\' possibly not set or overflowed because it was too \n      large (${cookieLength} > 4096 bytes)!`);\n    }\n    return str;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CookieOptionsProvider, },\n];\n}\n\nfunction CookieService_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieService.ctorParameters;\n/** @type {?} */\nCookieService.prototype.options;\n/** @type {?} */\nCookieService.prototype._optionsProvider;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Injector, Inject, OpaqueToken } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\n\nimport { CookieOptions } from './cookie-options.model';\nimport { mergeOptions } from './utils';\n\nexport const /** @type {?} */ COOKIE_OPTIONS = new OpaqueToken('COOKIE_OPTIONS');\nexport class CookieOptionsProvider {\nprivate defaultOptions: CookieOptions;\nprivate _options: CookieOptions;\n/**\n * @param {?=} options\n * @param {?=} _injector\n */\nconstructor( options: CookieOptions = {},\nprivate _injector: Injector) {\n    this.defaultOptions = {\n      path: this._injector.get(APP_BASE_HREF, '/'),\n      domain: null,\n      expires: null,\n      secure: false\n    };\n    this._options = mergeOptions(this.defaultOptions, options);\n  }\n/**\n * @return {?}\n */\nget options(): CookieOptions {\n    return this._options;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [COOKIE_OPTIONS, ] }, ]},\n{type: Injector, },\n];\n}\n\nfunction CookieOptionsProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieOptionsProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieOptionsProvider.ctorParameters;\n/** @type {?} */\nCookieOptionsProvider.prototype.defaultOptions;\n/** @type {?} */\nCookieOptionsProvider.prototype._options;\n/** @type {?} */\nCookieOptionsProvider.prototype._injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CookieOptions } from './cookie-options.model';\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string';\n}\n/**\n * @param {?} oldOptions\n * @param {?=} newOptions\n * @return {?}\n */\nexport function mergeOptions(oldOptions: CookieOptions, newOptions?: CookieOptions): CookieOptions {\n  if (!newOptions) {\n    return oldOptions;\n  }\n  return {\n    path: isPresent(newOptions.path) ? newOptions.path : oldOptions.path,\n    domain: isPresent(newOptions.domain) ? newOptions.domain : oldOptions.domain,\n    expires: isPresent(newOptions.expires) ? newOptions.expires : oldOptions.expires,\n    secure: isPresent(newOptions.secure) ? newOptions.secure : oldOptions.secure,\n  };\n}\n/**\n * @param {?} str\n * @return {?}\n */\nexport function safeDecodeURIComponent(str: string) {\n  try {\n    return decodeURIComponent(str);\n  } catch ( /** @type {?} */e) {\n    return str;\n  }\n}\n/**\n * @param {?} str\n * @return {?}\n */\nexport function safeJsonParse(str: string) {\n  try {\n    return JSON.parse(str);\n  } catch ( /** @type {?} */e) {\n    return str;\n  }\n}\n"],"names":["NgModule","Injectable","Injector","Inject","APP_BASE_HREF","OpaqueToken"],"mappings":";;;;;;;;;;;;;;;;AKCA;;;;AAIA,SAAA,OAAA,CAHC,GAAA,EAGD;IACE,OAHO,GAAA,KAAQ,SAAA,IAAa,GAAA,KAAQ,IAAA,CAAK;CAI1C;;;;;AAKD,SAAA,SAAA,CANC,GAAA,EAMD;IACE,OANO,GAAA,KAAQ,SAAA,IAAa,GAAA,KAAQ,IAAA,CAAK;CAO1C;;;;;AAKD,SAAA,QAAA,CATC,GAAA,EASD;IACE,OATO,OAAO,GAAA,KAAQ,QAAA,CAAS;CAUhC;;;;;;AAMD,SAAA,YAAA,CAbC,UAAA,EAAA,UAAA,EAaD;IACE,IAAI,CAbC,UAAC,EAAW;QAcf,OAbO,UAAA,CAAW;KAcnB;IACD,OAbO;QAcL,IAAI,EAbE,SAAA,CAAU,UAAC,CAAU,IAAC,CAAI,GAAG,UAAA,CAAW,IAAC,GAAM,UAAA,CAAW,IAAC;QAcjE,MAAM,EAbE,SAAA,CAAU,UAAC,CAAU,MAAC,CAAM,GAAG,UAAA,CAAW,MAAC,GAAQ,UAAA,CAAW,MAAC;QAcvE,OAAO,EAbE,SAAA,CAAU,UAAC,CAAU,OAAC,CAAO,GAAG,UAAA,CAAW,OAAC,GAAS,UAAA,CAAW,OAAC;QAc1E,MAAM,EAbE,SAAA,CAAU,UAAC,CAAU,MAAC,CAAM,GAAG,UAAA,CAAW,MAAC,GAAQ,UAAA,CAAW,MAAC;KAcxE,CAbC;CAcH;;;;;AAKD,SAAA,sBAAA,CAhBC,GAAA,EAgBD;IACE,IAhBI;QAiBF,OAhBO,kBAAA,CAAmB,GAAC,CAAG,CAAC;KAiBhC;IAhBC,OAAA,CAAQ,EAAE;QAiBV,OAhBO,GAAA,CAAI;KAiBZ;CACF;;;;;AAKD,SAAA,aAAA,CAnBC,GAAA,EAmBD;IACE,IAnBI;QAoBF,OAnBO,IAAA,CAAK,KAAC,CAAK,GAAC,CAAG,CAAC;KAoBxB;IAnBC,OAAA,CAAQ,EAAE;QAoBV,OAnBO,GAAA,CAAI;KAoBZ;CACF;ADrDM,IAAM,cAAA,GAAiB,IAAIK,yBAAA,CAAY,gBAAC,CAAgB,CAAC;AAChE,IAAA,qBAAA,IAAA,YAAA;;;;;IAOA,SAAA,qBAAA,CACe,OAAyB,EAClB,SAAW,EAFjC;QACe,IAAf,OAAA,KAAA,KAAA,CAAA,EAAe,EAAA,OAAf,GAAA,EAAwC,CAAxC,EAAA;QACsB,IAAtB,CAAA,SAAsB,GAAA,SAAA,CAAW;QAA7B,IAAI,CAAC,cAAc,GAAG;YACpB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAACD,6BAAa,EAAE,GAAG,CAAC;YAC5C,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,KAAK;SACd,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;KAC5D;IAIH,MAAA,CAAA,cAAA,CADG,qBACH,CAAA,SAAA,EAAA,SADG,EACH;;;;QAAA,GAAA,EAAA,YAAA;YACI,OADO,IAAA,CAAK,QAAC,CAAQ;SAEtB;;;KAAH,CAAA,CAAG;;CAtBH,EAAA,CAAA,CAAA;AAsBO,qBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAMH,wBAAA,EAAW;CAElB,CADC;;;;AAED,qBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAID,EAAC,IARC,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAE,oBAAA,EAAA,IAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,EAAA;IASF,EAAC,IAAI,EAAED,sBAAQ,GAAG;CACjB,CAAD,EAAC,CAAC;ADnBF,IAAA,aAAA,IAAA,YAAA;;;;IAmBA,SAAA,aAAA,CALsB,gBAAkB,EAKxC;QALsB,IAAtB,CAAA,gBAAsB,GAAA,gBAAA,CAAkB;QAMpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;KAC9C;IAfH,MAAA,CAAA,cAAA,CAAG,aAAH,CAAA,SAAA,EAAA,cAAG,EAAH;;;;QAAA,GAAA,EAAA,YAAA;YACI,OAAO,QAAA,CAAS,MAAC,IAAS,EAAA,CAAG;SAC9B;;;;;QAKH,GAAA,EAAA,UAHG,GAAA,EAGH;YACI,QAAQ,CAHC,MAAC,GAAQ,GAAA,CAAI;SAIvB;;;KAPH,CAAA,CAAG;;;;;;;;;;IAuBH,aAAA,CAAA,SAAA,CAAA,GAJG,GAIH,UAJG,GAAA,EAIH;QACI,OAJO,EAAM,IAAC,CAAI,aAAC,EAAa,GAAG,GAAC,CAAG,CAAC;KAKzC,CAAH;;;;;;;;;;IAUA,aAAA,CAAA,SAAA,CAAA,SAHG,GAGH,UAHG,GAAA,EAGH;QACI,qBAHI,KAAA,GAAQ,IAAA,CAAK,GAAC,CAAG,GAAC,CAAG,CAAC;QAI1B,OAHO,KAAA,GAAQ,aAAA,CAAc,KAAC,CAAK,GAAG,KAAA,CAAM;KAI7C,CAAH;;;;;;;;;IASA,aAAA,CAAA,SAAA,CAAA,MAFG,GAEH,YAAA;QACI,QAFY,IAAC,CAAI,aAAC,EAAa,EAAE;KAGlC,CAAH;;;;;;;;;;;;IAYA,aAAA,CAAA,SAAA,CAAA,GAFG,GAEH,UAFG,GAAA,EAAA,KAAA,EAAA,OAAA,EAEH;QACI,IAAI,CAFC,aAAC,EAAa,CAAE,GAAC,EAAI,KAAA,EAAO,OAAA,CAAQ,CAAC;KAG3C,CAAH;;;;;;;;;;;;IAYA,aAAA,CAAA,SAAA,CAAA,SAFG,GAEH,UAFG,GAAA,EAAA,KAAA,EAAA,OAAA,EAEH;QACI,IAAI,CAFC,GAAC,CAAG,GAAC,EAAI,IAAA,CAAK,SAAC,CAAS,KAAC,CAAK,EAAE,OAAA,CAAQ,CAAC;KAG/C,CAAH;;;;;;;;;;;IAWA,aAAA,CAAA,SAAA,CAAA,MAFG,GAEH,UAFG,GAAA,EAAA,OAAA,EAEH;QACI,IAAI,CAFC,aAAC,EAAa,CAAE,GAAC,EAAI,SAAA,EAAW,OAAA,CAAQ,CAAC;KAG/C,CAAH;;;;;;;;IAQA,aAAA,CAAA,SAAA,CAAA,SAFG,GAEH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAKG;QAJC,qBAFI,OAAA,GAAU,IAAA,CAAK,MAAC,EAAM,CAAE;QAG5B,MAAM,CAFC,IAAC,CAAI,OAAC,CAAO,CAAC,OAAC,CAAO,UAAA,GAAC,EAElC;YACM,KAAI,CAFC,MAAC,CAAM,GAAC,CAAG,CAAC;SAGlB,CAFC,CAAC;KAGJ,CAAH;;;;IAAG,aAAH,CAAA,SAAA,CAAA,aAAG,GAAA,YAAH;QAKI,qBAJI,WAAA,GAAc,EAAA,CAAG;QAKrB,qBAJI,gBAAA,GAAmB,EAAA,CAAG;QAK1B,qBAJI,WAAoB,mBAAG,MAAQ,mBAAQ,CAAG,mBAAQ,KAAO,mBAAQ,IAAM,CAAO;QAKlF,qBAJI,mBAAA,GAAsB,IAAA,CAAK,YAAC,CAAY;QAK5C,IAAI,mBAJC,KAAuB,gBAAA,EAAkB;YAK5C,gBAAgB,GAJG,mBAAA,CAAoB;YAKvC,WAAW,GAJG,gBAAA,CAAiB,KAAC,CAAK,IAAC,CAAI,CAAC;YAK3C,WAAW,GAJG,EAAA,CAAG;YAKjB,KAAK,CAJC,GAAG,CAAA,EAAG,CAAA,GAAI,WAAA,CAAY,MAAC,EAAO,CAAA,EAAE,EAAG;gBAKvC,MAAM,GAJG,WAAA,CAAY,CAAC,CAAC,CAAC;gBAKxB,KAAK,GAJG,MAAA,CAAO,OAAC,CAAO,GAAC,CAAG,CAAC;gBAK5B,IAAI,KAJC,GAAO,CAAA,EAAG;oBAKb,IAAI,GAJG,sBAAA,CAAuB,MAAC,CAAM,SAAC,CAAS,CAAC,EAAE,KAAA,CAAM,CAAC,CAAC;;;;oBAQ1D,IAAI,OAJC,CAAO,EAAM,WAAC,GAAY,IAAC,CAAI,CAAC,EAAE;wBAKrC,EAJM,WAAC,GAAY,IAAC,CAAI,GAAG,sBAAA,CAAuB,MAAC,CAAM,SAAC,CAAS,KAAC,GAAO,CAAA,CAAE,CAAC,CAAC;qBAKhF;iBACF;aACF;SACF;QACD,OAJO,WAAA,CAAY;KAKpB,CAAH;;;;IAFG,aAAH,CAAA,SAAA,CAAA,aAAG,GAAA,YAAH;QAOI,qBANI,IAAA,GAAO,IAAA,CAAK;QAQhB,OANO,UAAA,IAAgB,EAAQ,KAAO,EAAQ,OAAU,EAM5D;YACM,IAAI,CANC,YAAC,GAAc,IAAA,CAAK,kBAAC,CAAkB,IAAC,EAAK,KAAA,EAAO,OAAA,CAAQ,CAAC;SAOnE,CANC;KAOH,CAAH;;;;;;;IAJG,aAAH,CAAA,SAAA,CAAA,kBAAG,GAAA,UAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAH;QAYI,qBAXI,IAAA,GAAsB,YAAA,CAAa,IAAC,CAAI,OAAC,EAAQ,OAAA,CAAQ,CAAC;QAY9D,qBAXI,OAAA,GAAe,IAAA,CAAK,OAAC,CAAO;QAYhC,IAAI,OAXC,CAAO,KAAC,CAAK,EAAE;YAYlB,OAAO,GAXG,+BAAA,CAAgC;YAY1C,KAAK,GAXG,EAAA,CAAG;SAYZ;QACD,IAAI,QAXC,CAAQ,OAAC,CAAO,EAAE;YAYrB,OAAO,GAXG,IAAI,IAAA,CAAK,OAAC,CAAO,CAAC;SAY7B;QAED,qBAXI,GAAA,GAAM,kBAAA,CAAmB,IAAC,CAAI,GAAG,GAAA,GAAM,kBAAA,CAAmB,KAAC,CAAK,CAAC;QAYrE,GAAG,IAXI,IAAA,CAAK,IAAC,GAAM,QAAA,GAAW,IAAA,CAAK,IAAC,GAAM,EAAA,CAAG;QAY7C,GAAG,IAXI,IAAA,CAAK,MAAC,GAAQ,UAAA,GAAa,IAAA,CAAK,MAAC,GAAQ,EAAA,CAAG;QAYnD,GAAG,IAXI,OAAA,GAAU,WAAA,GAAc,OAAA,CAAQ,WAAC,EAAW,GAAI,EAAA,CAAG;QAY1D,GAAG,IAXI,IAAA,CAAK,MAAC,GAAQ,SAAA,GAAY,EAAA,CAAG;;;;;QAiBpC,qBAXI,YAAA,GAAe,GAAA,CAAI,MAAC,GAAQ,CAAA,CAAE;QAYlC,IAAI,YAXC,GAAc,IAAA,EAAM;YAYvB,OAAO,CAXC,GAAC,CAAG,UAWlB,GAXmB,IAAY,GAW/B,qEAAA,GACe,YAXC,GAUhB,iBAV4B,CAAiB,CAAC;SAK5C;QAQE,OAXO,GAAA,CAAI;KAYZ,CAAH;;CAvLA,EAAA,CAAA,CAAA;AA8KO,aAAP,CAAA,UAAO,GAAoC;IAY3C,EAXE,IAAA,EAAMD,wBAAA,EAAW;CAYlB,CAXC;;;;AAED,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAcD,EAAC,IAAI,EAAE,qBAAqB,GAAG;CAC9B,CAAD,EAAC,CAAC;;;;;AD/MF,SAAA,oBAAA,CAHC,qBAAA,EAGD;IACE,OAHO,IAAI,aAAA,CAAc,qBAAC,CAAqB,CAAC;CAIjD;ADHD,IAAA,oBAAA,IAAA,UAAA,MAAA,EAAA;IAEC,SAAD,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAC;IAFD,SAAA,oBAAA,GAAA;;;IAIA,MAAA,CAAA,cAAA,CADG,oBACH,CAAA,SAAA,EAAA,cADG,EACH;;;;QAAA,GAAA,EAAA,YAAA;YACI,OADO,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,KAAC,CAAK,CAAC,OAAC,CAAO,MAAC,IAAS,EAAA,CAAG;SAErD;;;;;QAKH,GAAA,EAAA,UAJG,GAAA,EAIH;YACI,IAAI,CAJC,OAAC,CAAO,GAAC,CAAG,KAAC,CAAK,CAAC,OAAC,CAAO,MAAC,GAAQ,GAAA,CAAI;YAK7C,IAAI,CAJC,OAAC,CAAO,GAAC,CAAG,KAAC,CAAK,CAAC,OAAC,CAAO,MAAC,GAAQ,GAAA,CAAI;SAK9C;;;KARH,CAAA,CAAG;;CANH,CAEC,aAAA,CAFD,CAAA,CAAA;AAWO,oBAAP,CAAA,UAAO,GAAoC;IAK3C,EAJE,IAAA,EAAMA,wBAAA,EAAW;CAKlB,CAJC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAOA,CAPD,EAOC,CAAC;ADdF,IAAA,YAAA,IAAA,YAAA;IAAA,SAAA,YAAA,GAAA;;;;;;;IAQG,YAAH,CAAA,OAAG,GAFH,UAEG,OAAA,EAAH;QAAG,IAAH,OAAA,KAAA,KAAA,CAAA,EAAG,EAAA,OAAH,GAAA,EAAG,CAAH,EAAA;QADI,OAEO;YADL,QAAQ,EAEE,YAAA;YADV,SAAS,EAEE;gBADT,EAAC,OAEC,EAAQ,cAAA,EAAgB,QAAA,EAAU,OAAA,EAAQ;gBAD5C,EAAC,OAEC,EAAQ,aAAA,EAAe,UAAA,EAAY,oBAAA,EAAsB,IAAA,EAAM,CAAA,qBAAE,CAAqB,EAAC;aAD1F;SACF,CAEC;KADH,CAAH;;;;;;IASG,YAAH,CAAA,QAAG,GAHH,UAGG,OAAA,EAAH;QAAG,IAAH,OAAA,KAAA,KAAA,CAAA,EAAG,EAAA,OAAH,GAAA,EAAG,CAAH,EAAA;QAFI,OAGO;YAFL,QAAQ,EAGE,YAAA;YAFV,SAAS,EAGE;gBAFT,EAAC,OAGC,EAAQ,cAAA,EAAgB,QAAA,EAAU,OAAA,EAAQ;gBAF5C,EAAC,OAGC,EAAQ,aAAA,EAAe,UAAA,EAAY,oBAAA,EAAsB,IAAA,EAAM,CAAA,qBAAE,CAAqB,EAAC;aAF1F;SACF,CAGC;KAFH,CAAH;;CA5BA,EAAA,CAAA,CAAA;AAgCO,YAAP,CAAA,UAAO,GAAoC;IAF3C,EAGE,IAAA,EAAMD,sBAAA,EAAU,IAAA,EAAM,CAAA;gBAFtB,SAAS,EAGE,CAAA,qBAAE,CAAqB;aAFnC,EAGC,EAAG;CAFJ,CAGC;;;;AAED,YAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAAA,CAAD,EAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;"}